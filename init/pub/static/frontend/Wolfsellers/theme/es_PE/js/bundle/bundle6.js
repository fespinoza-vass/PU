require.config({"config": {
        "jsbuild":{"Amasty_ShopbyBase/js/swiper.min.js":"/**\n * Swiper 5.4.5\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * http://swiperjs.com\n *\n * Copyright 2014-2020 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: June 16, 2020\n */\n!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):(e=e||self).Swiper=t()}(this,(function(){\"use strict\";function e(e){return null!==e&&\"object\"==typeof e&&\"constructor\"in e&&e.constructor===Object}function t(i,s){void 0===i&&(i={}),void 0===s&&(s={}),Object.keys(s).forEach((function(a){void 0===i[a]?i[a]=s[a]:e(s[a])&&e(i[a])&&Object.keys(s[a]).length>0&&t(i[a],s[a])}))}var i=\"undefined\"!=typeof document?document:{},s={body:{},addEventListener:function(){},removeEventListener:function(){},activeElement:{blur:function(){},nodeName:\"\"},querySelector:function(){return null},querySelectorAll:function(){return[]},getElementById:function(){return null},createEvent:function(){return{initEvent:function(){}}},createElement:function(){return{children:[],childNodes:[],style:{},setAttribute:function(){},getElementsByTagName:function(){return[]}}},createElementNS:function(){return{}},importNode:function(){return null},location:{hash:\"\",host:\"\",hostname:\"\",href:\"\",origin:\"\",pathname:\"\",protocol:\"\",search:\"\"}};t(i,s);var a=\"undefined\"!=typeof window?window:{};t(a,{document:s,navigator:{userAgent:\"\"},location:{hash:\"\",host:\"\",hostname:\"\",href:\"\",origin:\"\",pathname:\"\",protocol:\"\",search:\"\"},history:{replaceState:function(){},pushState:function(){},go:function(){},back:function(){}},CustomEvent:function(){return this},addEventListener:function(){},removeEventListener:function(){},getComputedStyle:function(){return{getPropertyValue:function(){return\"\"}}},Image:function(){},Date:function(){},screen:{},setTimeout:function(){},clearTimeout:function(){},matchMedia:function(){return{}}});var r=function(e){for(var t=0;t<e.length;t+=1)this[t]=e[t];return this.length=e.length,this};function n(e,t){var s=[],n=0;if(e&&!t&&e instanceof r)return e;if(e)if(\"string\"==typeof e){var o,l,d=e.trim();if(d.indexOf(\"<\")>=0&&d.indexOf(\">\")>=0){var h=\"div\";for(0===d.indexOf(\"<li\")&&(h=\"ul\"),0===d.indexOf(\"<tr\")&&(h=\"tbody\"),0!==d.indexOf(\"<td\")&&0!==d.indexOf(\"<th\")||(h=\"tr\"),0===d.indexOf(\"<tbody\")&&(h=\"table\"),0===d.indexOf(\"<option\")&&(h=\"select\"),(l=i.createElement(h)).innerHTML=d,n=0;n<l.childNodes.length;n+=1)s.push(l.childNodes[n])}else for(o=t||\"#\"!==e[0]||e.match(/[ .<>:~]/)?(t||i).querySelectorAll(e.trim()):[i.getElementById(e.trim().split(\"#\")[1])],n=0;n<o.length;n+=1)o[n]&&s.push(o[n])}else if(e.nodeType||e===a||e===i)s.push(e);else if(e.length>0&&e[0].nodeType)for(n=0;n<e.length;n+=1)s.push(e[n]);return new r(s)}function o(e){for(var t=[],i=0;i<e.length;i+=1)-1===t.indexOf(e[i])&&t.push(e[i]);return t}n.fn=r.prototype,n.Class=r,n.Dom7=r;var l={addClass:function(e){if(void 0===e)return this;for(var t=e.split(\" \"),i=0;i<t.length;i+=1)for(var s=0;s<this.length;s+=1)void 0!==this[s]&&void 0!==this[s].classList&&this[s].classList.add(t[i]);return this},removeClass:function(e){for(var t=e.split(\" \"),i=0;i<t.length;i+=1)for(var s=0;s<this.length;s+=1)void 0!==this[s]&&void 0!==this[s].classList&&this[s].classList.remove(t[i]);return this},hasClass:function(e){return!!this[0]&&this[0].classList.contains(e)},toggleClass:function(e){for(var t=e.split(\" \"),i=0;i<t.length;i+=1)for(var s=0;s<this.length;s+=1)void 0!==this[s]&&void 0!==this[s].classList&&this[s].classList.toggle(t[i]);return this},attr:function(e,t){var i=arguments;if(1===arguments.length&&\"string\"==typeof e)return this[0]?this[0].getAttribute(e):void 0;for(var s=0;s<this.length;s+=1)if(2===i.length)this[s].setAttribute(e,t);else for(var a in e)this[s][a]=e[a],this[s].setAttribute(a,e[a]);return this},removeAttr:function(e){for(var t=0;t<this.length;t+=1)this[t].removeAttribute(e);return this},data:function(e,t){var i;if(void 0!==t){for(var s=0;s<this.length;s+=1)(i=this[s]).dom7ElementDataStorage||(i.dom7ElementDataStorage={}),i.dom7ElementDataStorage[e]=t;return this}if(i=this[0]){if(i.dom7ElementDataStorage&&e in i.dom7ElementDataStorage)return i.dom7ElementDataStorage[e];var a=i.getAttribute(\"data-\"+e);return a||void 0}},transform:function(e){for(var t=0;t<this.length;t+=1){var i=this[t].style;i.webkitTransform=e,i.transform=e}return this},transition:function(e){\"string\"!=typeof e&&(e+=\"ms\");for(var t=0;t<this.length;t+=1){var i=this[t].style;i.webkitTransitionDuration=e,i.transitionDuration=e}return this},on:function(){for(var e,t=[],i=arguments.length;i--;)t[i]=arguments[i];var s=t[0],a=t[1],r=t[2],o=t[3];function l(e){var t=e.target;if(t){var i=e.target.dom7EventData||[];if(i.indexOf(e)<0&&i.unshift(e),n(t).is(a))r.apply(t,i);else for(var s=n(t).parents(),o=0;o<s.length;o+=1)n(s[o]).is(a)&&r.apply(s[o],i)}}function d(e){var t=e&&e.target&&e.target.dom7EventData||[];t.indexOf(e)<0&&t.unshift(e),r.apply(this,t)}\"function\"==typeof t[1]&&(s=(e=t)[0],r=e[1],o=e[2],a=void 0),o||(o=!1);for(var h,p=s.split(\" \"),c=0;c<this.length;c+=1){var u=this[c];if(a)for(h=0;h<p.length;h+=1){var v=p[h];u.dom7LiveListeners||(u.dom7LiveListeners={}),u.dom7LiveListeners[v]||(u.dom7LiveListeners[v]=[]),u.dom7LiveListeners[v].push({listener:r,proxyListener:l}),u.addEventListener(v,l,o)}else for(h=0;h<p.length;h+=1){var f=p[h];u.dom7Listeners||(u.dom7Listeners={}),u.dom7Listeners[f]||(u.dom7Listeners[f]=[]),u.dom7Listeners[f].push({listener:r,proxyListener:d}),u.addEventListener(f,d,o)}}return this},off:function(){for(var e,t=[],i=arguments.length;i--;)t[i]=arguments[i];var s=t[0],a=t[1],r=t[2],n=t[3];\"function\"==typeof t[1]&&(s=(e=t)[0],r=e[1],n=e[2],a=void 0),n||(n=!1);for(var o=s.split(\" \"),l=0;l<o.length;l+=1)for(var d=o[l],h=0;h<this.length;h+=1){var p=this[h],c=void 0;if(!a&&p.dom7Listeners?c=p.dom7Listeners[d]:a&&p.dom7LiveListeners&&(c=p.dom7LiveListeners[d]),c&&c.length)for(var u=c.length-1;u>=0;u-=1){var v=c[u];r&&v.listener===r||r&&v.listener&&v.listener.dom7proxy&&v.listener.dom7proxy===r?(p.removeEventListener(d,v.proxyListener,n),c.splice(u,1)):r||(p.removeEventListener(d,v.proxyListener,n),c.splice(u,1))}}return this},trigger:function(){for(var e=[],t=arguments.length;t--;)e[t]=arguments[t];for(var s=e[0].split(\" \"),r=e[1],n=0;n<s.length;n+=1)for(var o=s[n],l=0;l<this.length;l+=1){var d=this[l],h=void 0;try{h=new a.CustomEvent(o,{detail:r,bubbles:!0,cancelable:!0})}catch(e){(h=i.createEvent(\"Event\")).initEvent(o,!0,!0),h.detail=r}d.dom7EventData=e.filter((function(e,t){return t>0})),d.dispatchEvent(h),d.dom7EventData=[],delete d.dom7EventData}return this},transitionEnd:function(e){var t,i=[\"webkitTransitionEnd\",\"transitionend\"],s=this;function a(r){if(r.target===this)for(e.call(this,r),t=0;t<i.length;t+=1)s.off(i[t],a)}if(e)for(t=0;t<i.length;t+=1)s.on(i[t],a);return this},outerWidth:function(e){if(this.length>0){if(e){var t=this.styles();return this[0].offsetWidth+parseFloat(t.getPropertyValue(\"margin-right\"))+parseFloat(t.getPropertyValue(\"margin-left\"))}return this[0].offsetWidth}return null},outerHeight:function(e){if(this.length>0){if(e){var t=this.styles();return this[0].offsetHeight+parseFloat(t.getPropertyValue(\"margin-top\"))+parseFloat(t.getPropertyValue(\"margin-bottom\"))}return this[0].offsetHeight}return null},offset:function(){if(this.length>0){var e=this[0],t=e.getBoundingClientRect(),s=i.body,r=e.clientTop||s.clientTop||0,n=e.clientLeft||s.clientLeft||0,o=e===a?a.scrollY:e.scrollTop,l=e===a?a.scrollX:e.scrollLeft;return{top:t.top+o-r,left:t.left+l-n}}return null},css:function(e,t){var i;if(1===arguments.length){if(\"string\"!=typeof e){for(i=0;i<this.length;i+=1)for(var s in e)this[i].style[s]=e[s];return this}if(this[0])return a.getComputedStyle(this[0],null).getPropertyValue(e)}if(2===arguments.length&&\"string\"==typeof e){for(i=0;i<this.length;i+=1)this[i].style[e]=t;return this}return this},each:function(e){if(!e)return this;for(var t=0;t<this.length;t+=1)if(!1===e.call(this[t],t,this[t]))return this;return this},html:function(e){if(void 0===e)return this[0]?this[0].innerHTML:void 0;for(var t=0;t<this.length;t+=1)this[t].innerHTML=e;return this},text:function(e){if(void 0===e)return this[0]?this[0].textContent.trim():null;for(var t=0;t<this.length;t+=1)this[t].textContent=e;return this},is:function(e){var t,s,o=this[0];if(!o||void 0===e)return!1;if(\"string\"==typeof e){if(o.matches)return o.matches(e);if(o.webkitMatchesSelector)return o.webkitMatchesSelector(e);if(o.msMatchesSelector)return o.msMatchesSelector(e);for(t=n(e),s=0;s<t.length;s+=1)if(t[s]===o)return!0;return!1}if(e===i)return o===i;if(e===a)return o===a;if(e.nodeType||e instanceof r){for(t=e.nodeType?[e]:e,s=0;s<t.length;s+=1)if(t[s]===o)return!0;return!1}return!1},index:function(){var e,t=this[0];if(t){for(e=0;null!==(t=t.previousSibling);)1===t.nodeType&&(e+=1);return e}},eq:function(e){if(void 0===e)return this;var t,i=this.length;return new r(e>i-1?[]:e<0?(t=i+e)<0?[]:[this[t]]:[this[e]])},append:function(){for(var e,t=[],s=arguments.length;s--;)t[s]=arguments[s];for(var a=0;a<t.length;a+=1){e=t[a];for(var n=0;n<this.length;n+=1)if(\"string\"==typeof e){var o=i.createElement(\"div\");for(o.innerHTML=e;o.firstChild;)this[n].appendChild(o.firstChild)}else if(e instanceof r)for(var l=0;l<e.length;l+=1)this[n].appendChild(e[l]);else this[n].appendChild(e)}return this},prepend:function(e){var t,s;for(t=0;t<this.length;t+=1)if(\"string\"==typeof e){var a=i.createElement(\"div\");for(a.innerHTML=e,s=a.childNodes.length-1;s>=0;s-=1)this[t].insertBefore(a.childNodes[s],this[t].childNodes[0])}else if(e instanceof r)for(s=0;s<e.length;s+=1)this[t].insertBefore(e[s],this[t].childNodes[0]);else this[t].insertBefore(e,this[t].childNodes[0]);return this},next:function(e){return this.length>0?e?this[0].nextElementSibling&&n(this[0].nextElementSibling).is(e)?new r([this[0].nextElementSibling]):new r([]):this[0].nextElementSibling?new r([this[0].nextElementSibling]):new r([]):new r([])},nextAll:function(e){var t=[],i=this[0];if(!i)return new r([]);for(;i.nextElementSibling;){var s=i.nextElementSibling;e?n(s).is(e)&&t.push(s):t.push(s),i=s}return new r(t)},prev:function(e){if(this.length>0){var t=this[0];return e?t.previousElementSibling&&n(t.previousElementSibling).is(e)?new r([t.previousElementSibling]):new r([]):t.previousElementSibling?new r([t.previousElementSibling]):new r([])}return new r([])},prevAll:function(e){var t=[],i=this[0];if(!i)return new r([]);for(;i.previousElementSibling;){var s=i.previousElementSibling;e?n(s).is(e)&&t.push(s):t.push(s),i=s}return new r(t)},parent:function(e){for(var t=[],i=0;i<this.length;i+=1)null!==this[i].parentNode&&(e?n(this[i].parentNode).is(e)&&t.push(this[i].parentNode):t.push(this[i].parentNode));return n(o(t))},parents:function(e){for(var t=[],i=0;i<this.length;i+=1)for(var s=this[i].parentNode;s;)e?n(s).is(e)&&t.push(s):t.push(s),s=s.parentNode;return n(o(t))},closest:function(e){var t=this;return void 0===e?new r([]):(t.is(e)||(t=t.parents(e).eq(0)),t)},find:function(e){for(var t=[],i=0;i<this.length;i+=1)for(var s=this[i].querySelectorAll(e),a=0;a<s.length;a+=1)t.push(s[a]);return new r(t)},children:function(e){for(var t=[],i=0;i<this.length;i+=1)for(var s=this[i].childNodes,a=0;a<s.length;a+=1)e?1===s[a].nodeType&&n(s[a]).is(e)&&t.push(s[a]):1===s[a].nodeType&&t.push(s[a]);return new r(o(t))},filter:function(e){for(var t=[],i=0;i<this.length;i+=1)e.call(this[i],i,this[i])&&t.push(this[i]);return new r(t)},remove:function(){for(var e=0;e<this.length;e+=1)this[e].parentNode&&this[e].parentNode.removeChild(this[e]);return this},add:function(){for(var e=[],t=arguments.length;t--;)e[t]=arguments[t];var i,s,a=this;for(i=0;i<e.length;i+=1){var r=n(e[i]);for(s=0;s<r.length;s+=1)a[a.length]=r[s],a.length+=1}return a},styles:function(){return this[0]?a.getComputedStyle(this[0],null):{}}};Object.keys(l).forEach((function(e){n.fn[e]=n.fn[e]||l[e]}));var d={deleteProps:function(e){var t=e;Object.keys(t).forEach((function(e){try{t[e]=null}catch(e){}try{delete t[e]}catch(e){}}))},nextTick:function(e,t){return void 0===t&&(t=0),setTimeout(e,t)},now:function(){return Date.now()},getTranslate:function(e,t){var i,s,r;void 0===t&&(t=\"x\");var n=a.getComputedStyle(e,null);return a.WebKitCSSMatrix?((s=n.transform||n.webkitTransform).split(\",\").length>6&&(s=s.split(\", \").map((function(e){return e.replace(\",\",\".\")})).join(\", \")),r=new a.WebKitCSSMatrix(\"none\"===s?\"\":s)):i=(r=n.MozTransform||n.OTransform||n.MsTransform||n.msTransform||n.transform||n.getPropertyValue(\"transform\").replace(\"translate(\",\"matrix(1, 0, 0, 1,\")).toString().split(\",\"),\"x\"===t&&(s=a.WebKitCSSMatrix?r.m41:16===i.length?parseFloat(i[12]):parseFloat(i[4])),\"y\"===t&&(s=a.WebKitCSSMatrix?r.m42:16===i.length?parseFloat(i[13]):parseFloat(i[5])),s||0},parseUrlQuery:function(e){var t,i,s,r,n={},o=e||a.location.href;if(\"string\"==typeof o&&o.length)for(r=(i=(o=o.indexOf(\"?\")>-1?o.replace(/\\S*\\?/,\"\"):\"\").split(\"&\").filter((function(e){return\"\"!==e}))).length,t=0;t<r;t+=1)s=i[t].replace(/#\\S+/g,\"\").split(\"=\"),n[decodeURIComponent(s[0])]=void 0===s[1]?void 0:decodeURIComponent(s[1])||\"\";return n},isObject:function(e){return\"object\"==typeof e&&null!==e&&e.constructor&&e.constructor===Object},extend:function(){for(var e=[],t=arguments.length;t--;)e[t]=arguments[t];for(var i=Object(e[0]),s=1;s<e.length;s+=1){var a=e[s];if(null!=a)for(var r=Object.keys(Object(a)),n=0,o=r.length;n<o;n+=1){var l=r[n],h=Object.getOwnPropertyDescriptor(a,l);void 0!==h&&h.enumerable&&(d.isObject(i[l])&&d.isObject(a[l])?d.extend(i[l],a[l]):!d.isObject(i[l])&&d.isObject(a[l])?(i[l]={},d.extend(i[l],a[l])):i[l]=a[l])}}return i}},h={touch:!!(\"ontouchstart\"in a||a.DocumentTouch&&i instanceof a.DocumentTouch),pointerEvents:!!a.PointerEvent&&\"maxTouchPoints\"in a.navigator&&a.navigator.maxTouchPoints>=0,observer:\"MutationObserver\"in a||\"WebkitMutationObserver\"in a,passiveListener:function(){var e=!1;try{var t=Object.defineProperty({},\"passive\",{get:function(){e=!0}});a.addEventListener(\"testPassiveListener\",null,t)}catch(e){}return e}(),gestures:\"ongesturestart\"in a},p=function(e){void 0===e&&(e={});var t=this;t.params=e,t.eventsListeners={},t.params&&t.params.on&&Object.keys(t.params.on).forEach((function(e){t.on(e,t.params.on[e])}))},c={components:{configurable:!0}};p.prototype.on=function(e,t,i){var s=this;if(\"function\"!=typeof t)return s;var a=i?\"unshift\":\"push\";return e.split(\" \").forEach((function(e){s.eventsListeners[e]||(s.eventsListeners[e]=[]),s.eventsListeners[e][a](t)})),s},p.prototype.once=function(e,t,i){var s=this;if(\"function\"!=typeof t)return s;function a(){for(var i=[],r=arguments.length;r--;)i[r]=arguments[r];s.off(e,a),a.f7proxy&&delete a.f7proxy,t.apply(s,i)}return a.f7proxy=t,s.on(e,a,i)},p.prototype.off=function(e,t){var i=this;return i.eventsListeners?(e.split(\" \").forEach((function(e){void 0===t?i.eventsListeners[e]=[]:i.eventsListeners[e]&&i.eventsListeners[e].length&&i.eventsListeners[e].forEach((function(s,a){(s===t||s.f7proxy&&s.f7proxy===t)&&i.eventsListeners[e].splice(a,1)}))})),i):i},p.prototype.emit=function(){for(var e=[],t=arguments.length;t--;)e[t]=arguments[t];var i,s,a,r=this;if(!r.eventsListeners)return r;\"string\"==typeof e[0]||Array.isArray(e[0])?(i=e[0],s=e.slice(1,e.length),a=r):(i=e[0].events,s=e[0].data,a=e[0].context||r);var n=Array.isArray(i)?i:i.split(\" \");return n.forEach((function(e){if(r.eventsListeners&&r.eventsListeners[e]){var t=[];r.eventsListeners[e].forEach((function(e){t.push(e)})),t.forEach((function(e){e.apply(a,s)}))}})),r},p.prototype.useModulesParams=function(e){var t=this;t.modules&&Object.keys(t.modules).forEach((function(i){var s=t.modules[i];s.params&&d.extend(e,s.params)}))},p.prototype.useModules=function(e){void 0===e&&(e={});var t=this;t.modules&&Object.keys(t.modules).forEach((function(i){var s=t.modules[i],a=e[i]||{};s.instance&&Object.keys(s.instance).forEach((function(e){var i=s.instance[e];t[e]=\"function\"==typeof i?i.bind(t):i})),s.on&&t.on&&Object.keys(s.on).forEach((function(e){t.on(e,s.on[e])})),s.create&&s.create.bind(t)(a)}))},c.components.set=function(e){this.use&&this.use(e)},p.installModule=function(e){for(var t=[],i=arguments.length-1;i-- >0;)t[i]=arguments[i+1];var s=this;s.prototype.modules||(s.prototype.modules={});var a=e.name||Object.keys(s.prototype.modules).length+\"_\"+d.now();return s.prototype.modules[a]=e,e.proto&&Object.keys(e.proto).forEach((function(t){s.prototype[t]=e.proto[t]})),e.static&&Object.keys(e.static).forEach((function(t){s[t]=e.static[t]})),e.install&&e.install.apply(s,t),s},p.use=function(e){for(var t=[],i=arguments.length-1;i-- >0;)t[i]=arguments[i+1];var s=this;return Array.isArray(e)?(e.forEach((function(e){return s.installModule(e)})),s):s.installModule.apply(s,[e].concat(t))},Object.defineProperties(p,c);var u={updateSize:function(){var e,t,i=this.$el;e=void 0!==this.params.width?this.params.width:i[0].clientWidth,t=void 0!==this.params.height?this.params.height:i[0].clientHeight,0===e&&this.isHorizontal()||0===t&&this.isVertical()||(e=e-parseInt(i.css(\"padding-left\"),10)-parseInt(i.css(\"padding-right\"),10),t=t-parseInt(i.css(\"padding-top\"),10)-parseInt(i.css(\"padding-bottom\"),10),d.extend(this,{width:e,height:t,size:this.isHorizontal()?e:t}))},updateSlides:function(){var e=this.params,t=this.$wrapperEl,i=this.size,s=this.rtlTranslate,r=this.wrongRTL,n=this.virtual&&e.virtual.enabled,o=n?this.virtual.slides.length:this.slides.length,l=t.children(\".\"+this.params.slideClass),h=n?this.virtual.slides.length:l.length,p=[],c=[],u=[];function v(t){return!e.cssMode||t!==l.length-1}var f=e.slidesOffsetBefore;\"function\"==typeof f&&(f=e.slidesOffsetBefore.call(this));var m=e.slidesOffsetAfter;\"function\"==typeof m&&(m=e.slidesOffsetAfter.call(this));var g=this.snapGrid.length,b=this.snapGrid.length,w=e.spaceBetween,y=-f,x=0,E=0;if(void 0!==i){var T,S;\"string\"==typeof w&&w.indexOf(\"%\")>=0&&(w=parseFloat(w.replace(\"%\",\"\"))/100*i),this.virtualSize=-w,s?l.css({marginLeft:\"\",marginTop:\"\"}):l.css({marginRight:\"\",marginBottom:\"\"}),e.slidesPerColumn>1&&(T=Math.floor(h/e.slidesPerColumn)===h/this.params.slidesPerColumn?h:Math.ceil(h/e.slidesPerColumn)*e.slidesPerColumn,\"auto\"!==e.slidesPerView&&\"row\"===e.slidesPerColumnFill&&(T=Math.max(T,e.slidesPerView*e.slidesPerColumn)));for(var C,M=e.slidesPerColumn,P=T/M,z=Math.floor(h/e.slidesPerColumn),k=0;k<h;k+=1){S=0;var $=l.eq(k);if(e.slidesPerColumn>1){var L=void 0,I=void 0,D=void 0;if(\"row\"===e.slidesPerColumnFill&&e.slidesPerGroup>1){var O=Math.floor(k/(e.slidesPerGroup*e.slidesPerColumn)),A=k-e.slidesPerColumn*e.slidesPerGroup*O,G=0===O?e.slidesPerGroup:Math.min(Math.ceil((h-O*M*e.slidesPerGroup)/M),e.slidesPerGroup);L=(I=A-(D=Math.floor(A/G))*G+O*e.slidesPerGroup)+D*T/M,$.css({\"-webkit-box-ordinal-group\":L,\"-moz-box-ordinal-group\":L,\"-ms-flex-order\":L,\"-webkit-order\":L,order:L})}else\"column\"===e.slidesPerColumnFill?(D=k-(I=Math.floor(k/M))*M,(I>z||I===z&&D===M-1)&&(D+=1)>=M&&(D=0,I+=1)):I=k-(D=Math.floor(k/P))*P;$.css(\"margin-\"+(this.isHorizontal()?\"top\":\"left\"),0!==D&&e.spaceBetween&&e.spaceBetween+\"px\")}if(\"none\"!==$.css(\"display\")){if(\"auto\"===e.slidesPerView){var H=a.getComputedStyle($[0],null),B=$[0].style.transform,N=$[0].style.webkitTransform;if(B&&($[0].style.transform=\"none\"),N&&($[0].style.webkitTransform=\"none\"),e.roundLengths)S=this.isHorizontal()?$.outerWidth(!0):$.outerHeight(!0);else if(this.isHorizontal()){var X=parseFloat(H.getPropertyValue(\"width\")),V=parseFloat(H.getPropertyValue(\"padding-left\")),Y=parseFloat(H.getPropertyValue(\"padding-right\")),F=parseFloat(H.getPropertyValue(\"margin-left\")),W=parseFloat(H.getPropertyValue(\"margin-right\")),R=H.getPropertyValue(\"box-sizing\");S=R&&\"border-box\"===R?X+F+W:X+V+Y+F+W}else{var q=parseFloat(H.getPropertyValue(\"height\")),j=parseFloat(H.getPropertyValue(\"padding-top\")),K=parseFloat(H.getPropertyValue(\"padding-bottom\")),U=parseFloat(H.getPropertyValue(\"margin-top\")),_=parseFloat(H.getPropertyValue(\"margin-bottom\")),Z=H.getPropertyValue(\"box-sizing\");S=Z&&\"border-box\"===Z?q+U+_:q+j+K+U+_}B&&($[0].style.transform=B),N&&($[0].style.webkitTransform=N),e.roundLengths&&(S=Math.floor(S))}else S=(i-(e.slidesPerView-1)*w)/e.slidesPerView,e.roundLengths&&(S=Math.floor(S)),l[k]&&(this.isHorizontal()?l[k].style.width=S+\"px\":l[k].style.height=S+\"px\");l[k]&&(l[k].swiperSlideSize=S),u.push(S),e.centeredSlides?(y=y+S/2+x/2+w,0===x&&0!==k&&(y=y-i/2-w),0===k&&(y=y-i/2-w),Math.abs(y)<.001&&(y=0),e.roundLengths&&(y=Math.floor(y)),E%e.slidesPerGroup==0&&p.push(y),c.push(y)):(e.roundLengths&&(y=Math.floor(y)),(E-Math.min(this.params.slidesPerGroupSkip,E))%this.params.slidesPerGroup==0&&p.push(y),c.push(y),y=y+S+w),this.virtualSize+=S+w,x=S,E+=1}}if(this.virtualSize=Math.max(this.virtualSize,i)+m,s&&r&&(\"slide\"===e.effect||\"coverflow\"===e.effect)&&t.css({width:this.virtualSize+e.spaceBetween+\"px\"}),e.setWrapperSize&&(this.isHorizontal()?t.css({width:this.virtualSize+e.spaceBetween+\"px\"}):t.css({height:this.virtualSize+e.spaceBetween+\"px\"})),e.slidesPerColumn>1&&(this.virtualSize=(S+e.spaceBetween)*T,this.virtualSize=Math.ceil(this.virtualSize/e.slidesPerColumn)-e.spaceBetween,this.isHorizontal()?t.css({width:this.virtualSize+e.spaceBetween+\"px\"}):t.css({height:this.virtualSize+e.spaceBetween+\"px\"}),e.centeredSlides)){C=[];for(var Q=0;Q<p.length;Q+=1){var J=p[Q];e.roundLengths&&(J=Math.floor(J)),p[Q]<this.virtualSize+p[0]&&C.push(J)}p=C}if(!e.centeredSlides){C=[];for(var ee=0;ee<p.length;ee+=1){var te=p[ee];e.roundLengths&&(te=Math.floor(te)),p[ee]<=this.virtualSize-i&&C.push(te)}p=C,Math.floor(this.virtualSize-i)-Math.floor(p[p.length-1])>1&&p.push(this.virtualSize-i)}if(0===p.length&&(p=[0]),0!==e.spaceBetween&&(this.isHorizontal()?s?l.filter(v).css({marginLeft:w+\"px\"}):l.filter(v).css({marginRight:w+\"px\"}):l.filter(v).css({marginBottom:w+\"px\"})),e.centeredSlides&&e.centeredSlidesBounds){var ie=0;u.forEach((function(t){ie+=t+(e.spaceBetween?e.spaceBetween:0)}));var se=(ie-=e.spaceBetween)-i;p=p.map((function(e){return e<0?-f:e>se?se+m:e}))}if(e.centerInsufficientSlides){var ae=0;if(u.forEach((function(t){ae+=t+(e.spaceBetween?e.spaceBetween:0)})),(ae-=e.spaceBetween)<i){var re=(i-ae)/2;p.forEach((function(e,t){p[t]=e-re})),c.forEach((function(e,t){c[t]=e+re}))}}d.extend(this,{slides:l,snapGrid:p,slidesGrid:c,slidesSizesGrid:u}),h!==o&&this.emit(\"slidesLengthChange\"),p.length!==g&&(this.params.watchOverflow&&this.checkOverflow(),this.emit(\"snapGridLengthChange\")),c.length!==b&&this.emit(\"slidesGridLengthChange\"),(e.watchSlidesProgress||e.watchSlidesVisibility)&&this.updateSlidesOffset()}},updateAutoHeight:function(e){var t,i=[],s=0;if(\"number\"==typeof e?this.setTransition(e):!0===e&&this.setTransition(this.params.speed),\"auto\"!==this.params.slidesPerView&&this.params.slidesPerView>1)if(this.params.centeredSlides)this.visibleSlides.each((function(e,t){i.push(t)}));else for(t=0;t<Math.ceil(this.params.slidesPerView);t+=1){var a=this.activeIndex+t;if(a>this.slides.length)break;i.push(this.slides.eq(a)[0])}else i.push(this.slides.eq(this.activeIndex)[0]);for(t=0;t<i.length;t+=1)if(void 0!==i[t]){var r=i[t].offsetHeight;s=r>s?r:s}s&&this.$wrapperEl.css(\"height\",s+\"px\")},updateSlidesOffset:function(){for(var e=this.slides,t=0;t<e.length;t+=1)e[t].swiperSlideOffset=this.isHorizontal()?e[t].offsetLeft:e[t].offsetTop},updateSlidesProgress:function(e){void 0===e&&(e=this&&this.translate||0);var t=this.params,i=this.slides,s=this.rtlTranslate;if(0!==i.length){void 0===i[0].swiperSlideOffset&&this.updateSlidesOffset();var a=-e;s&&(a=e),i.removeClass(t.slideVisibleClass),this.visibleSlidesIndexes=[],this.visibleSlides=[];for(var r=0;r<i.length;r+=1){var o=i[r],l=(a+(t.centeredSlides?this.minTranslate():0)-o.swiperSlideOffset)/(o.swiperSlideSize+t.spaceBetween);if(t.watchSlidesVisibility||t.centeredSlides&&t.autoHeight){var d=-(a-o.swiperSlideOffset),h=d+this.slidesSizesGrid[r];(d>=0&&d<this.size-1||h>1&&h<=this.size||d<=0&&h>=this.size)&&(this.visibleSlides.push(o),this.visibleSlidesIndexes.push(r),i.eq(r).addClass(t.slideVisibleClass))}o.progress=s?-l:l}this.visibleSlides=n(this.visibleSlides)}},updateProgress:function(e){if(void 0===e){var t=this.rtlTranslate?-1:1;e=this&&this.translate&&this.translate*t||0}var i=this.params,s=this.maxTranslate()-this.minTranslate(),a=this.progress,r=this.isBeginning,n=this.isEnd,o=r,l=n;0===s?(a=0,r=!0,n=!0):(r=(a=(e-this.minTranslate())/s)<=0,n=a>=1),d.extend(this,{progress:a,isBeginning:r,isEnd:n}),(i.watchSlidesProgress||i.watchSlidesVisibility||i.centeredSlides&&i.autoHeight)&&this.updateSlidesProgress(e),r&&!o&&this.emit(\"reachBeginning toEdge\"),n&&!l&&this.emit(\"reachEnd toEdge\"),(o&&!r||l&&!n)&&this.emit(\"fromEdge\"),this.emit(\"progress\",a)},updateSlidesClasses:function(){var e,t=this.slides,i=this.params,s=this.$wrapperEl,a=this.activeIndex,r=this.realIndex,n=this.virtual&&i.virtual.enabled;t.removeClass(i.slideActiveClass+\" \"+i.slideNextClass+\" \"+i.slidePrevClass+\" \"+i.slideDuplicateActiveClass+\" \"+i.slideDuplicateNextClass+\" \"+i.slideDuplicatePrevClass),(e=n?this.$wrapperEl.find(\".\"+i.slideClass+'[data-swiper-slide-index=\"'+a+'\"]'):t.eq(a)).addClass(i.slideActiveClass),i.loop&&(e.hasClass(i.slideDuplicateClass)?s.children(\".\"+i.slideClass+\":not(.\"+i.slideDuplicateClass+')[data-swiper-slide-index=\"'+r+'\"]').addClass(i.slideDuplicateActiveClass):s.children(\".\"+i.slideClass+\".\"+i.slideDuplicateClass+'[data-swiper-slide-index=\"'+r+'\"]').addClass(i.slideDuplicateActiveClass));var o=e.nextAll(\".\"+i.slideClass).eq(0).addClass(i.slideNextClass);i.loop&&0===o.length&&(o=t.eq(0)).addClass(i.slideNextClass);var l=e.prevAll(\".\"+i.slideClass).eq(0).addClass(i.slidePrevClass);i.loop&&0===l.length&&(l=t.eq(-1)).addClass(i.slidePrevClass),i.loop&&(o.hasClass(i.slideDuplicateClass)?s.children(\".\"+i.slideClass+\":not(.\"+i.slideDuplicateClass+')[data-swiper-slide-index=\"'+o.attr(\"data-swiper-slide-index\")+'\"]').addClass(i.slideDuplicateNextClass):s.children(\".\"+i.slideClass+\".\"+i.slideDuplicateClass+'[data-swiper-slide-index=\"'+o.attr(\"data-swiper-slide-index\")+'\"]').addClass(i.slideDuplicateNextClass),l.hasClass(i.slideDuplicateClass)?s.children(\".\"+i.slideClass+\":not(.\"+i.slideDuplicateClass+')[data-swiper-slide-index=\"'+l.attr(\"data-swiper-slide-index\")+'\"]').addClass(i.slideDuplicatePrevClass):s.children(\".\"+i.slideClass+\".\"+i.slideDuplicateClass+'[data-swiper-slide-index=\"'+l.attr(\"data-swiper-slide-index\")+'\"]').addClass(i.slideDuplicatePrevClass))},updateActiveIndex:function(e){var t,i=this.rtlTranslate?this.translate:-this.translate,s=this.slidesGrid,a=this.snapGrid,r=this.params,n=this.activeIndex,o=this.realIndex,l=this.snapIndex,h=e;if(void 0===h){for(var p=0;p<s.length;p+=1)void 0!==s[p+1]?i>=s[p]&&i<s[p+1]-(s[p+1]-s[p])/2?h=p:i>=s[p]&&i<s[p+1]&&(h=p+1):i>=s[p]&&(h=p);r.normalizeSlideIndex&&(h<0||void 0===h)&&(h=0)}if(a.indexOf(i)>=0)t=a.indexOf(i);else{var c=Math.min(r.slidesPerGroupSkip,h);t=c+Math.floor((h-c)/r.slidesPerGroup)}if(t>=a.length&&(t=a.length-1),h!==n){var u=parseInt(this.slides.eq(h).attr(\"data-swiper-slide-index\")||h,10);d.extend(this,{snapIndex:t,realIndex:u,previousIndex:n,activeIndex:h}),this.emit(\"activeIndexChange\"),this.emit(\"snapIndexChange\"),o!==u&&this.emit(\"realIndexChange\"),(this.initialized||this.params.runCallbacksOnInit)&&this.emit(\"slideChange\")}else t!==l&&(this.snapIndex=t,this.emit(\"snapIndexChange\"))},updateClickedSlide:function(e){var t=this.params,i=n(e.target).closest(\".\"+t.slideClass)[0],s=!1;if(i)for(var a=0;a<this.slides.length;a+=1)this.slides[a]===i&&(s=!0);if(!i||!s)return this.clickedSlide=void 0,void(this.clickedIndex=void 0);this.clickedSlide=i,this.virtual&&this.params.virtual.enabled?this.clickedIndex=parseInt(n(i).attr(\"data-swiper-slide-index\"),10):this.clickedIndex=n(i).index(),t.slideToClickedSlide&&void 0!==this.clickedIndex&&this.clickedIndex!==this.activeIndex&&this.slideToClickedSlide()}};var v={getTranslate:function(e){void 0===e&&(e=this.isHorizontal()?\"x\":\"y\");var t=this.params,i=this.rtlTranslate,s=this.translate,a=this.$wrapperEl;if(t.virtualTranslate)return i?-s:s;if(t.cssMode)return s;var r=d.getTranslate(a[0],e);return i&&(r=-r),r||0},setTranslate:function(e,t){var i=this.rtlTranslate,s=this.params,a=this.$wrapperEl,r=this.wrapperEl,n=this.progress,o=0,l=0;this.isHorizontal()?o=i?-e:e:l=e,s.roundLengths&&(o=Math.floor(o),l=Math.floor(l)),s.cssMode?r[this.isHorizontal()?\"scrollLeft\":\"scrollTop\"]=this.isHorizontal()?-o:-l:s.virtualTranslate||a.transform(\"translate3d(\"+o+\"px, \"+l+\"px, 0px)\"),this.previousTranslate=this.translate,this.translate=this.isHorizontal()?o:l;var d=this.maxTranslate()-this.minTranslate();(0===d?0:(e-this.minTranslate())/d)!==n&&this.updateProgress(e),this.emit(\"setTranslate\",this.translate,t)},minTranslate:function(){return-this.snapGrid[0]},maxTranslate:function(){return-this.snapGrid[this.snapGrid.length-1]},translateTo:function(e,t,i,s,a){var r;void 0===e&&(e=0),void 0===t&&(t=this.params.speed),void 0===i&&(i=!0),void 0===s&&(s=!0);var n=this,o=n.params,l=n.wrapperEl;if(n.animating&&o.preventInteractionOnTransition)return!1;var d,h=n.minTranslate(),p=n.maxTranslate();if(d=s&&e>h?h:s&&e<p?p:e,n.updateProgress(d),o.cssMode){var c=n.isHorizontal();return 0===t?l[c?\"scrollLeft\":\"scrollTop\"]=-d:l.scrollTo?l.scrollTo(((r={})[c?\"left\":\"top\"]=-d,r.behavior=\"smooth\",r)):l[c?\"scrollLeft\":\"scrollTop\"]=-d,!0}return 0===t?(n.setTransition(0),n.setTranslate(d),i&&(n.emit(\"beforeTransitionStart\",t,a),n.emit(\"transitionEnd\"))):(n.setTransition(t),n.setTranslate(d),i&&(n.emit(\"beforeTransitionStart\",t,a),n.emit(\"transitionStart\")),n.animating||(n.animating=!0,n.onTranslateToWrapperTransitionEnd||(n.onTranslateToWrapperTransitionEnd=function(e){n&&!n.destroyed&&e.target===this&&(n.$wrapperEl[0].removeEventListener(\"transitionend\",n.onTranslateToWrapperTransitionEnd),n.$wrapperEl[0].removeEventListener(\"webkitTransitionEnd\",n.onTranslateToWrapperTransitionEnd),n.onTranslateToWrapperTransitionEnd=null,delete n.onTranslateToWrapperTransitionEnd,i&&n.emit(\"transitionEnd\"))}),n.$wrapperEl[0].addEventListener(\"transitionend\",n.onTranslateToWrapperTransitionEnd),n.$wrapperEl[0].addEventListener(\"webkitTransitionEnd\",n.onTranslateToWrapperTransitionEnd))),!0}};var f={setTransition:function(e,t){this.params.cssMode||this.$wrapperEl.transition(e),this.emit(\"setTransition\",e,t)},transitionStart:function(e,t){void 0===e&&(e=!0);var i=this.activeIndex,s=this.params,a=this.previousIndex;if(!s.cssMode){s.autoHeight&&this.updateAutoHeight();var r=t;if(r||(r=i>a?\"next\":i<a?\"prev\":\"reset\"),this.emit(\"transitionStart\"),e&&i!==a){if(\"reset\"===r)return void this.emit(\"slideResetTransitionStart\");this.emit(\"slideChangeTransitionStart\"),\"next\"===r?this.emit(\"slideNextTransitionStart\"):this.emit(\"slidePrevTransitionStart\")}}},transitionEnd:function(e,t){void 0===e&&(e=!0);var i=this.activeIndex,s=this.previousIndex,a=this.params;if(this.animating=!1,!a.cssMode){this.setTransition(0);var r=t;if(r||(r=i>s?\"next\":i<s?\"prev\":\"reset\"),this.emit(\"transitionEnd\"),e&&i!==s){if(\"reset\"===r)return void this.emit(\"slideResetTransitionEnd\");this.emit(\"slideChangeTransitionEnd\"),\"next\"===r?this.emit(\"slideNextTransitionEnd\"):this.emit(\"slidePrevTransitionEnd\")}}}};var m={slideTo:function(e,t,i,s){var a;void 0===e&&(e=0),void 0===t&&(t=this.params.speed),void 0===i&&(i=!0);var r=this,n=e;n<0&&(n=0);var o=r.params,l=r.snapGrid,d=r.slidesGrid,h=r.previousIndex,p=r.activeIndex,c=r.rtlTranslate,u=r.wrapperEl;if(r.animating&&o.preventInteractionOnTransition)return!1;var v=Math.min(r.params.slidesPerGroupSkip,n),f=v+Math.floor((n-v)/r.params.slidesPerGroup);f>=l.length&&(f=l.length-1),(p||o.initialSlide||0)===(h||0)&&i&&r.emit(\"beforeSlideChangeStart\");var m,g=-l[f];if(r.updateProgress(g),o.normalizeSlideIndex)for(var b=0;b<d.length;b+=1)-Math.floor(100*g)>=Math.floor(100*d[b])&&(n=b);if(r.initialized&&n!==p){if(!r.allowSlideNext&&g<r.translate&&g<r.minTranslate())return!1;if(!r.allowSlidePrev&&g>r.translate&&g>r.maxTranslate()&&(p||0)!==n)return!1}if(m=n>p?\"next\":n<p?\"prev\":\"reset\",c&&-g===r.translate||!c&&g===r.translate)return r.updateActiveIndex(n),o.autoHeight&&r.updateAutoHeight(),r.updateSlidesClasses(),\"slide\"!==o.effect&&r.setTranslate(g),\"reset\"!==m&&(r.transitionStart(i,m),r.transitionEnd(i,m)),!1;if(o.cssMode){var w=r.isHorizontal(),y=-g;return c&&(y=u.scrollWidth-u.offsetWidth-y),0===t?u[w?\"scrollLeft\":\"scrollTop\"]=y:u.scrollTo?u.scrollTo(((a={})[w?\"left\":\"top\"]=y,a.behavior=\"smooth\",a)):u[w?\"scrollLeft\":\"scrollTop\"]=y,!0}return 0===t?(r.setTransition(0),r.setTranslate(g),r.updateActiveIndex(n),r.updateSlidesClasses(),r.emit(\"beforeTransitionStart\",t,s),r.transitionStart(i,m),r.transitionEnd(i,m)):(r.setTransition(t),r.setTranslate(g),r.updateActiveIndex(n),r.updateSlidesClasses(),r.emit(\"beforeTransitionStart\",t,s),r.transitionStart(i,m),r.animating||(r.animating=!0,r.onSlideToWrapperTransitionEnd||(r.onSlideToWrapperTransitionEnd=function(e){r&&!r.destroyed&&e.target===this&&(r.$wrapperEl[0].removeEventListener(\"transitionend\",r.onSlideToWrapperTransitionEnd),r.$wrapperEl[0].removeEventListener(\"webkitTransitionEnd\",r.onSlideToWrapperTransitionEnd),r.onSlideToWrapperTransitionEnd=null,delete r.onSlideToWrapperTransitionEnd,r.transitionEnd(i,m))}),r.$wrapperEl[0].addEventListener(\"transitionend\",r.onSlideToWrapperTransitionEnd),r.$wrapperEl[0].addEventListener(\"webkitTransitionEnd\",r.onSlideToWrapperTransitionEnd))),!0},slideToLoop:function(e,t,i,s){void 0===e&&(e=0),void 0===t&&(t=this.params.speed),void 0===i&&(i=!0);var a=e;return this.params.loop&&(a+=this.loopedSlides),this.slideTo(a,t,i,s)},slideNext:function(e,t,i){void 0===e&&(e=this.params.speed),void 0===t&&(t=!0);var s=this.params,a=this.animating,r=this.activeIndex<s.slidesPerGroupSkip?1:s.slidesPerGroup;if(s.loop){if(a)return!1;this.loopFix(),this._clientLeft=this.$wrapperEl[0].clientLeft}return this.slideTo(this.activeIndex+r,e,t,i)},slidePrev:function(e,t,i){void 0===e&&(e=this.params.speed),void 0===t&&(t=!0);var s=this.params,a=this.animating,r=this.snapGrid,n=this.slidesGrid,o=this.rtlTranslate;if(s.loop){if(a)return!1;this.loopFix(),this._clientLeft=this.$wrapperEl[0].clientLeft}function l(e){return e<0?-Math.floor(Math.abs(e)):Math.floor(e)}var d,h=l(o?this.translate:-this.translate),p=r.map((function(e){return l(e)})),c=(n.map((function(e){return l(e)})),r[p.indexOf(h)],r[p.indexOf(h)-1]);return void 0===c&&s.cssMode&&r.forEach((function(e){!c&&h>=e&&(c=e)})),void 0!==c&&(d=n.indexOf(c))<0&&(d=this.activeIndex-1),this.slideTo(d,e,t,i)},slideReset:function(e,t,i){return void 0===e&&(e=this.params.speed),void 0===t&&(t=!0),this.slideTo(this.activeIndex,e,t,i)},slideToClosest:function(e,t,i,s){void 0===e&&(e=this.params.speed),void 0===t&&(t=!0),void 0===s&&(s=.5);var a=this.activeIndex,r=Math.min(this.params.slidesPerGroupSkip,a),n=r+Math.floor((a-r)/this.params.slidesPerGroup),o=this.rtlTranslate?this.translate:-this.translate;if(o>=this.snapGrid[n]){var l=this.snapGrid[n];o-l>(this.snapGrid[n+1]-l)*s&&(a+=this.params.slidesPerGroup)}else{var d=this.snapGrid[n-1];o-d<=(this.snapGrid[n]-d)*s&&(a-=this.params.slidesPerGroup)}return a=Math.max(a,0),a=Math.min(a,this.slidesGrid.length-1),this.slideTo(a,e,t,i)},slideToClickedSlide:function(){var e,t=this,i=t.params,s=t.$wrapperEl,a=\"auto\"===i.slidesPerView?t.slidesPerViewDynamic():i.slidesPerView,r=t.clickedIndex;if(i.loop){if(t.animating)return;e=parseInt(n(t.clickedSlide).attr(\"data-swiper-slide-index\"),10),i.centeredSlides?r<t.loopedSlides-a/2||r>t.slides.length-t.loopedSlides+a/2?(t.loopFix(),r=s.children(\".\"+i.slideClass+'[data-swiper-slide-index=\"'+e+'\"]:not(.'+i.slideDuplicateClass+\")\").eq(0).index(),d.nextTick((function(){t.slideTo(r)}))):t.slideTo(r):r>t.slides.length-a?(t.loopFix(),r=s.children(\".\"+i.slideClass+'[data-swiper-slide-index=\"'+e+'\"]:not(.'+i.slideDuplicateClass+\")\").eq(0).index(),d.nextTick((function(){t.slideTo(r)}))):t.slideTo(r)}else t.slideTo(r)}};var g={loopCreate:function(){var e=this,t=e.params,s=e.$wrapperEl;s.children(\".\"+t.slideClass+\".\"+t.slideDuplicateClass).remove();var a=s.children(\".\"+t.slideClass);if(t.loopFillGroupWithBlank){var r=t.slidesPerGroup-a.length%t.slidesPerGroup;if(r!==t.slidesPerGroup){for(var o=0;o<r;o+=1){var l=n(i.createElement(\"div\")).addClass(t.slideClass+\" \"+t.slideBlankClass);s.append(l)}a=s.children(\".\"+t.slideClass)}}\"auto\"!==t.slidesPerView||t.loopedSlides||(t.loopedSlides=a.length),e.loopedSlides=Math.ceil(parseFloat(t.loopedSlides||t.slidesPerView,10)),e.loopedSlides+=t.loopAdditionalSlides,e.loopedSlides>a.length&&(e.loopedSlides=a.length);var d=[],h=[];a.each((function(t,i){var s=n(i);t<e.loopedSlides&&h.push(i),t<a.length&&t>=a.length-e.loopedSlides&&d.push(i),s.attr(\"data-swiper-slide-index\",t)}));for(var p=0;p<h.length;p+=1)s.append(n(h[p].cloneNode(!0)).addClass(t.slideDuplicateClass));for(var c=d.length-1;c>=0;c-=1)s.prepend(n(d[c].cloneNode(!0)).addClass(t.slideDuplicateClass))},loopFix:function(){this.emit(\"beforeLoopFix\");var e,t=this.activeIndex,i=this.slides,s=this.loopedSlides,a=this.allowSlidePrev,r=this.allowSlideNext,n=this.snapGrid,o=this.rtlTranslate;this.allowSlidePrev=!0,this.allowSlideNext=!0;var l=-n[t]-this.getTranslate();if(t<s)e=i.length-3*s+t,e+=s,this.slideTo(e,0,!1,!0)&&0!==l&&this.setTranslate((o?-this.translate:this.translate)-l);else if(t>=i.length-s){e=-i.length+t+s,e+=s,this.slideTo(e,0,!1,!0)&&0!==l&&this.setTranslate((o?-this.translate:this.translate)-l)}this.allowSlidePrev=a,this.allowSlideNext=r,this.emit(\"loopFix\")},loopDestroy:function(){var e=this.$wrapperEl,t=this.params,i=this.slides;e.children(\".\"+t.slideClass+\".\"+t.slideDuplicateClass+\",.\"+t.slideClass+\".\"+t.slideBlankClass).remove(),i.removeAttr(\"data-swiper-slide-index\")}};var b={setGrabCursor:function(e){if(!(h.touch||!this.params.simulateTouch||this.params.watchOverflow&&this.isLocked||this.params.cssMode)){var t=this.el;t.style.cursor=\"move\",t.style.cursor=e?\"-webkit-grabbing\":\"-webkit-grab\",t.style.cursor=e?\"-moz-grabbin\":\"-moz-grab\",t.style.cursor=e?\"grabbing\":\"grab\"}},unsetGrabCursor:function(){h.touch||this.params.watchOverflow&&this.isLocked||this.params.cssMode||(this.el.style.cursor=\"\")}};var w,y,x,E,T,S,C,M,P,z,k,$,L,I,D,O={appendSlide:function(e){var t=this.$wrapperEl,i=this.params;if(i.loop&&this.loopDestroy(),\"object\"==typeof e&&\"length\"in e)for(var s=0;s<e.length;s+=1)e[s]&&t.append(e[s]);else t.append(e);i.loop&&this.loopCreate(),i.observer&&h.observer||this.update()},prependSlide:function(e){var t=this.params,i=this.$wrapperEl,s=this.activeIndex;t.loop&&this.loopDestroy();var a=s+1;if(\"object\"==typeof e&&\"length\"in e){for(var r=0;r<e.length;r+=1)e[r]&&i.prepend(e[r]);a=s+e.length}else i.prepend(e);t.loop&&this.loopCreate(),t.observer&&h.observer||this.update(),this.slideTo(a,0,!1)},addSlide:function(e,t){var i=this.$wrapperEl,s=this.params,a=this.activeIndex;s.loop&&(a-=this.loopedSlides,this.loopDestroy(),this.slides=i.children(\".\"+s.slideClass));var r=this.slides.length;if(e<=0)this.prependSlide(t);else if(e>=r)this.appendSlide(t);else{for(var n=a>e?a+1:a,o=[],l=r-1;l>=e;l-=1){var d=this.slides.eq(l);d.remove(),o.unshift(d)}if(\"object\"==typeof t&&\"length\"in t){for(var p=0;p<t.length;p+=1)t[p]&&i.append(t[p]);n=a>e?a+t.length:a}else i.append(t);for(var c=0;c<o.length;c+=1)i.append(o[c]);s.loop&&this.loopCreate(),s.observer&&h.observer||this.update(),s.loop?this.slideTo(n+this.loopedSlides,0,!1):this.slideTo(n,0,!1)}},removeSlide:function(e){var t=this.params,i=this.$wrapperEl,s=this.activeIndex;t.loop&&(s-=this.loopedSlides,this.loopDestroy(),this.slides=i.children(\".\"+t.slideClass));var a,r=s;if(\"object\"==typeof e&&\"length\"in e){for(var n=0;n<e.length;n+=1)a=e[n],this.slides[a]&&this.slides.eq(a).remove(),a<r&&(r-=1);r=Math.max(r,0)}else a=e,this.slides[a]&&this.slides.eq(a).remove(),a<r&&(r-=1),r=Math.max(r,0);t.loop&&this.loopCreate(),t.observer&&h.observer||this.update(),t.loop?this.slideTo(r+this.loopedSlides,0,!1):this.slideTo(r,0,!1)},removeAllSlides:function(){for(var e=[],t=0;t<this.slides.length;t+=1)e.push(t);this.removeSlide(e)}},A=(w=a.navigator.platform,y=a.navigator.userAgent,x={ios:!1,android:!1,androidChrome:!1,desktop:!1,iphone:!1,ipod:!1,ipad:!1,edge:!1,ie:!1,firefox:!1,macos:!1,windows:!1,cordova:!(!a.cordova&&!a.phonegap),phonegap:!(!a.cordova&&!a.phonegap),electron:!1},E=a.screen.width,T=a.screen.height,S=y.match(/(Android);?[\\s\\/]+([\\d.]+)?/),C=y.match(/(iPad).*OS\\s([\\d_]+)/),M=y.match(/(iPod)(.*OS\\s([\\d_]+))?/),P=!C&&y.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/),z=y.indexOf(\"MSIE \")>=0||y.indexOf(\"Trident/\")>=0,k=y.indexOf(\"Edge/\")>=0,$=y.indexOf(\"Gecko/\")>=0&&y.indexOf(\"Firefox/\")>=0,L=\"Win32\"===w,I=y.toLowerCase().indexOf(\"electron\")>=0,D=\"MacIntel\"===w,!C&&D&&h.touch&&(1024===E&&1366===T||834===E&&1194===T||834===E&&1112===T||768===E&&1024===T)&&(C=y.match(/(Version)\\/([\\d.]+)/),D=!1),x.ie=z,x.edge=k,x.firefox=$,S&&!L&&(x.os=\"android\",x.osVersion=S[2],x.android=!0,x.androidChrome=y.toLowerCase().indexOf(\"chrome\")>=0),(C||P||M)&&(x.os=\"ios\",x.ios=!0),P&&!M&&(x.osVersion=P[2].replace(/_/g,\".\"),x.iphone=!0),C&&(x.osVersion=C[2].replace(/_/g,\".\"),x.ipad=!0),M&&(x.osVersion=M[3]?M[3].replace(/_/g,\".\"):null,x.ipod=!0),x.ios&&x.osVersion&&y.indexOf(\"Version/\")>=0&&\"10\"===x.osVersion.split(\".\")[0]&&(x.osVersion=y.toLowerCase().split(\"version/\")[1].split(\" \")[0]),x.webView=!(!(P||C||M)||!y.match(/.*AppleWebKit(?!.*Safari)/i)&&!a.navigator.standalone)||a.matchMedia&&a.matchMedia(\"(display-mode: standalone)\").matches,x.webview=x.webView,x.standalone=x.webView,x.desktop=!(x.ios||x.android)||I,x.desktop&&(x.electron=I,x.macos=D,x.windows=L,x.macos&&(x.os=\"macos\"),x.windows&&(x.os=\"windows\")),x.pixelRatio=a.devicePixelRatio||1,x);function G(e){var t=this.touchEventsData,s=this.params,r=this.touches;if(!this.animating||!s.preventInteractionOnTransition){var o=e;o.originalEvent&&(o=o.originalEvent);var l=n(o.target);if((\"wrapper\"!==s.touchEventsTarget||l.closest(this.wrapperEl).length)&&(t.isTouchEvent=\"touchstart\"===o.type,(t.isTouchEvent||!(\"which\"in o)||3!==o.which)&&!(!t.isTouchEvent&&\"button\"in o&&o.button>0||t.isTouched&&t.isMoved)))if(s.noSwiping&&l.closest(s.noSwipingSelector?s.noSwipingSelector:\".\"+s.noSwipingClass)[0])this.allowClick=!0;else if(!s.swipeHandler||l.closest(s.swipeHandler)[0]){r.currentX=\"touchstart\"===o.type?o.targetTouches[0].pageX:o.pageX,r.currentY=\"touchstart\"===o.type?o.targetTouches[0].pageY:o.pageY;var h=r.currentX,p=r.currentY,c=s.edgeSwipeDetection||s.iOSEdgeSwipeDetection,u=s.edgeSwipeThreshold||s.iOSEdgeSwipeThreshold;if(!c||!(h<=u||h>=a.screen.width-u)){if(d.extend(t,{isTouched:!0,isMoved:!1,allowTouchCallbacks:!0,isScrolling:void 0,startMoving:void 0}),r.startX=h,r.startY=p,t.touchStartTime=d.now(),this.allowClick=!0,this.updateSize(),this.swipeDirection=void 0,s.threshold>0&&(t.allowThresholdMove=!1),\"touchstart\"!==o.type){var v=!0;l.is(t.formElements)&&(v=!1),i.activeElement&&n(i.activeElement).is(t.formElements)&&i.activeElement!==l[0]&&i.activeElement.blur();var f=v&&this.allowTouchMove&&s.touchStartPreventDefault;(s.touchStartForcePreventDefault||f)&&o.preventDefault()}this.emit(\"touchStart\",o)}}}}function H(e){var t=this.touchEventsData,s=this.params,a=this.touches,r=this.rtlTranslate,o=e;if(o.originalEvent&&(o=o.originalEvent),t.isTouched){if(!t.isTouchEvent||\"touchmove\"===o.type){var l=\"touchmove\"===o.type&&o.targetTouches&&(o.targetTouches[0]||o.changedTouches[0]),h=\"touchmove\"===o.type?l.pageX:o.pageX,p=\"touchmove\"===o.type?l.pageY:o.pageY;if(o.preventedByNestedSwiper)return a.startX=h,void(a.startY=p);if(!this.allowTouchMove)return this.allowClick=!1,void(t.isTouched&&(d.extend(a,{startX:h,startY:p,currentX:h,currentY:p}),t.touchStartTime=d.now()));if(t.isTouchEvent&&s.touchReleaseOnEdges&&!s.loop)if(this.isVertical()){if(p<a.startY&&this.translate<=this.maxTranslate()||p>a.startY&&this.translate>=this.minTranslate())return t.isTouched=!1,void(t.isMoved=!1)}else if(h<a.startX&&this.translate<=this.maxTranslate()||h>a.startX&&this.translate>=this.minTranslate())return;if(t.isTouchEvent&&i.activeElement&&o.target===i.activeElement&&n(o.target).is(t.formElements))return t.isMoved=!0,void(this.allowClick=!1);if(t.allowTouchCallbacks&&this.emit(\"touchMove\",o),!(o.targetTouches&&o.targetTouches.length>1)){a.currentX=h,a.currentY=p;var c=a.currentX-a.startX,u=a.currentY-a.startY;if(!(this.params.threshold&&Math.sqrt(Math.pow(c,2)+Math.pow(u,2))<this.params.threshold)){var v;if(void 0===t.isScrolling)this.isHorizontal()&&a.currentY===a.startY||this.isVertical()&&a.currentX===a.startX?t.isScrolling=!1:c*c+u*u>=25&&(v=180*Math.atan2(Math.abs(u),Math.abs(c))/Math.PI,t.isScrolling=this.isHorizontal()?v>s.touchAngle:90-v>s.touchAngle);if(t.isScrolling&&this.emit(\"touchMoveOpposite\",o),void 0===t.startMoving&&(a.currentX===a.startX&&a.currentY===a.startY||(t.startMoving=!0)),t.isScrolling)t.isTouched=!1;else if(t.startMoving){this.allowClick=!1,!s.cssMode&&o.cancelable&&o.preventDefault(),s.touchMoveStopPropagation&&!s.nested&&o.stopPropagation(),t.isMoved||(s.loop&&this.loopFix(),t.startTranslate=this.getTranslate(),this.setTransition(0),this.animating&&this.$wrapperEl.trigger(\"webkitTransitionEnd transitionend\"),t.allowMomentumBounce=!1,!s.grabCursor||!0!==this.allowSlideNext&&!0!==this.allowSlidePrev||this.setGrabCursor(!0),this.emit(\"sliderFirstMove\",o)),this.emit(\"sliderMove\",o),t.isMoved=!0;var f=this.isHorizontal()?c:u;a.diff=f,f*=s.touchRatio,r&&(f=-f),this.swipeDirection=f>0?\"prev\":\"next\",t.currentTranslate=f+t.startTranslate;var m=!0,g=s.resistanceRatio;if(s.touchReleaseOnEdges&&(g=0),f>0&&t.currentTranslate>this.minTranslate()?(m=!1,s.resistance&&(t.currentTranslate=this.minTranslate()-1+Math.pow(-this.minTranslate()+t.startTranslate+f,g))):f<0&&t.currentTranslate<this.maxTranslate()&&(m=!1,s.resistance&&(t.currentTranslate=this.maxTranslate()+1-Math.pow(this.maxTranslate()-t.startTranslate-f,g))),m&&(o.preventedByNestedSwiper=!0),!this.allowSlideNext&&\"next\"===this.swipeDirection&&t.currentTranslate<t.startTranslate&&(t.currentTranslate=t.startTranslate),!this.allowSlidePrev&&\"prev\"===this.swipeDirection&&t.currentTranslate>t.startTranslate&&(t.currentTranslate=t.startTranslate),s.threshold>0){if(!(Math.abs(f)>s.threshold||t.allowThresholdMove))return void(t.currentTranslate=t.startTranslate);if(!t.allowThresholdMove)return t.allowThresholdMove=!0,a.startX=a.currentX,a.startY=a.currentY,t.currentTranslate=t.startTranslate,void(a.diff=this.isHorizontal()?a.currentX-a.startX:a.currentY-a.startY)}s.followFinger&&!s.cssMode&&((s.freeMode||s.watchSlidesProgress||s.watchSlidesVisibility)&&(this.updateActiveIndex(),this.updateSlidesClasses()),s.freeMode&&(0===t.velocities.length&&t.velocities.push({position:a[this.isHorizontal()?\"startX\":\"startY\"],time:t.touchStartTime}),t.velocities.push({position:a[this.isHorizontal()?\"currentX\":\"currentY\"],time:d.now()})),this.updateProgress(t.currentTranslate),this.setTranslate(t.currentTranslate))}}}}}else t.startMoving&&t.isScrolling&&this.emit(\"touchMoveOpposite\",o)}function B(e){var t=this,i=t.touchEventsData,s=t.params,a=t.touches,r=t.rtlTranslate,n=t.$wrapperEl,o=t.slidesGrid,l=t.snapGrid,h=e;if(h.originalEvent&&(h=h.originalEvent),i.allowTouchCallbacks&&t.emit(\"touchEnd\",h),i.allowTouchCallbacks=!1,!i.isTouched)return i.isMoved&&s.grabCursor&&t.setGrabCursor(!1),i.isMoved=!1,void(i.startMoving=!1);s.grabCursor&&i.isMoved&&i.isTouched&&(!0===t.allowSlideNext||!0===t.allowSlidePrev)&&t.setGrabCursor(!1);var p,c=d.now(),u=c-i.touchStartTime;if(t.allowClick&&(t.updateClickedSlide(h),t.emit(\"tap click\",h),u<300&&c-i.lastClickTime<300&&t.emit(\"doubleTap doubleClick\",h)),i.lastClickTime=d.now(),d.nextTick((function(){t.destroyed||(t.allowClick=!0)})),!i.isTouched||!i.isMoved||!t.swipeDirection||0===a.diff||i.currentTranslate===i.startTranslate)return i.isTouched=!1,i.isMoved=!1,void(i.startMoving=!1);if(i.isTouched=!1,i.isMoved=!1,i.startMoving=!1,p=s.followFinger?r?t.translate:-t.translate:-i.currentTranslate,!s.cssMode)if(s.freeMode){if(p<-t.minTranslate())return void t.slideTo(t.activeIndex);if(p>-t.maxTranslate())return void(t.slides.length<l.length?t.slideTo(l.length-1):t.slideTo(t.slides.length-1));if(s.freeModeMomentum){if(i.velocities.length>1){var v=i.velocities.pop(),f=i.velocities.pop(),m=v.position-f.position,g=v.time-f.time;t.velocity=m/g,t.velocity/=2,Math.abs(t.velocity)<s.freeModeMinimumVelocity&&(t.velocity=0),(g>150||d.now()-v.time>300)&&(t.velocity=0)}else t.velocity=0;t.velocity*=s.freeModeMomentumVelocityRatio,i.velocities.length=0;var b=1e3*s.freeModeMomentumRatio,w=t.velocity*b,y=t.translate+w;r&&(y=-y);var x,E,T=!1,S=20*Math.abs(t.velocity)*s.freeModeMomentumBounceRatio;if(y<t.maxTranslate())s.freeModeMomentumBounce?(y+t.maxTranslate()<-S&&(y=t.maxTranslate()-S),x=t.maxTranslate(),T=!0,i.allowMomentumBounce=!0):y=t.maxTranslate(),s.loop&&s.centeredSlides&&(E=!0);else if(y>t.minTranslate())s.freeModeMomentumBounce?(y-t.minTranslate()>S&&(y=t.minTranslate()+S),x=t.minTranslate(),T=!0,i.allowMomentumBounce=!0):y=t.minTranslate(),s.loop&&s.centeredSlides&&(E=!0);else if(s.freeModeSticky){for(var C,M=0;M<l.length;M+=1)if(l[M]>-y){C=M;break}y=-(y=Math.abs(l[C]-y)<Math.abs(l[C-1]-y)||\"next\"===t.swipeDirection?l[C]:l[C-1])}if(E&&t.once(\"transitionEnd\",(function(){t.loopFix()})),0!==t.velocity){if(b=r?Math.abs((-y-t.translate)/t.velocity):Math.abs((y-t.translate)/t.velocity),s.freeModeSticky){var P=Math.abs((r?-y:y)-t.translate),z=t.slidesSizesGrid[t.activeIndex];b=P<z?s.speed:P<2*z?1.5*s.speed:2.5*s.speed}}else if(s.freeModeSticky)return void t.slideToClosest();s.freeModeMomentumBounce&&T?(t.updateProgress(x),t.setTransition(b),t.setTranslate(y),t.transitionStart(!0,t.swipeDirection),t.animating=!0,n.transitionEnd((function(){t&&!t.destroyed&&i.allowMomentumBounce&&(t.emit(\"momentumBounce\"),t.setTransition(s.speed),setTimeout((function(){t.setTranslate(x),n.transitionEnd((function(){t&&!t.destroyed&&t.transitionEnd()}))}),0))}))):t.velocity?(t.updateProgress(y),t.setTransition(b),t.setTranslate(y),t.transitionStart(!0,t.swipeDirection),t.animating||(t.animating=!0,n.transitionEnd((function(){t&&!t.destroyed&&t.transitionEnd()})))):t.updateProgress(y),t.updateActiveIndex(),t.updateSlidesClasses()}else if(s.freeModeSticky)return void t.slideToClosest();(!s.freeModeMomentum||u>=s.longSwipesMs)&&(t.updateProgress(),t.updateActiveIndex(),t.updateSlidesClasses())}else{for(var k=0,$=t.slidesSizesGrid[0],L=0;L<o.length;L+=L<s.slidesPerGroupSkip?1:s.slidesPerGroup){var I=L<s.slidesPerGroupSkip-1?1:s.slidesPerGroup;void 0!==o[L+I]?p>=o[L]&&p<o[L+I]&&(k=L,$=o[L+I]-o[L]):p>=o[L]&&(k=L,$=o[o.length-1]-o[o.length-2])}var D=(p-o[k])/$,O=k<s.slidesPerGroupSkip-1?1:s.slidesPerGroup;if(u>s.longSwipesMs){if(!s.longSwipes)return void t.slideTo(t.activeIndex);\"next\"===t.swipeDirection&&(D>=s.longSwipesRatio?t.slideTo(k+O):t.slideTo(k)),\"prev\"===t.swipeDirection&&(D>1-s.longSwipesRatio?t.slideTo(k+O):t.slideTo(k))}else{if(!s.shortSwipes)return void t.slideTo(t.activeIndex);t.navigation&&(h.target===t.navigation.nextEl||h.target===t.navigation.prevEl)?h.target===t.navigation.nextEl?t.slideTo(k+O):t.slideTo(k):(\"next\"===t.swipeDirection&&t.slideTo(k+O),\"prev\"===t.swipeDirection&&t.slideTo(k))}}}function N(){var e=this.params,t=this.el;if(!t||0!==t.offsetWidth){e.breakpoints&&this.setBreakpoint();var i=this.allowSlideNext,s=this.allowSlidePrev,a=this.snapGrid;this.allowSlideNext=!0,this.allowSlidePrev=!0,this.updateSize(),this.updateSlides(),this.updateSlidesClasses(),(\"auto\"===e.slidesPerView||e.slidesPerView>1)&&this.isEnd&&!this.isBeginning&&!this.params.centeredSlides?this.slideTo(this.slides.length-1,0,!1,!0):this.slideTo(this.activeIndex,0,!1,!0),this.autoplay&&this.autoplay.running&&this.autoplay.paused&&this.autoplay.run(),this.allowSlidePrev=s,this.allowSlideNext=i,this.params.watchOverflow&&a!==this.snapGrid&&this.checkOverflow()}}function X(e){this.allowClick||(this.params.preventClicks&&e.preventDefault(),this.params.preventClicksPropagation&&this.animating&&(e.stopPropagation(),e.stopImmediatePropagation()))}function V(){var e=this.wrapperEl,t=this.rtlTranslate;this.previousTranslate=this.translate,this.isHorizontal()?this.translate=t?e.scrollWidth-e.offsetWidth-e.scrollLeft:-e.scrollLeft:this.translate=-e.scrollTop,-0===this.translate&&(this.translate=0),this.updateActiveIndex(),this.updateSlidesClasses();var i=this.maxTranslate()-this.minTranslate();(0===i?0:(this.translate-this.minTranslate())/i)!==this.progress&&this.updateProgress(t?-this.translate:this.translate),this.emit(\"setTranslate\",this.translate,!1)}var Y=!1;function F(){}var W={init:!0,direction:\"horizontal\",touchEventsTarget:\"container\",initialSlide:0,speed:300,cssMode:!1,updateOnWindowResize:!0,preventInteractionOnTransition:!1,edgeSwipeDetection:!1,edgeSwipeThreshold:20,freeMode:!1,freeModeMomentum:!0,freeModeMomentumRatio:1,freeModeMomentumBounce:!0,freeModeMomentumBounceRatio:1,freeModeMomentumVelocityRatio:1,freeModeSticky:!1,freeModeMinimumVelocity:.02,autoHeight:!1,setWrapperSize:!1,virtualTranslate:!1,effect:\"slide\",breakpoints:void 0,spaceBetween:0,slidesPerView:1,slidesPerColumn:1,slidesPerColumnFill:\"column\",slidesPerGroup:1,slidesPerGroupSkip:0,centeredSlides:!1,centeredSlidesBounds:!1,slidesOffsetBefore:0,slidesOffsetAfter:0,normalizeSlideIndex:!0,centerInsufficientSlides:!1,watchOverflow:!1,roundLengths:!1,touchRatio:1,touchAngle:45,simulateTouch:!0,shortSwipes:!0,longSwipes:!0,longSwipesRatio:.5,longSwipesMs:300,followFinger:!0,allowTouchMove:!0,threshold:0,touchMoveStopPropagation:!1,touchStartPreventDefault:!0,touchStartForcePreventDefault:!1,touchReleaseOnEdges:!1,uniqueNavElements:!0,resistance:!0,resistanceRatio:.85,watchSlidesProgress:!1,watchSlidesVisibility:!1,grabCursor:!1,preventClicks:!0,preventClicksPropagation:!0,slideToClickedSlide:!1,preloadImages:!0,updateOnImagesReady:!0,loop:!1,loopAdditionalSlides:0,loopedSlides:null,loopFillGroupWithBlank:!1,allowSlidePrev:!0,allowSlideNext:!0,swipeHandler:null,noSwiping:!0,noSwipingClass:\"swiper-no-swiping\",noSwipingSelector:null,passiveListeners:!0,containerModifierClass:\"swiper-container-\",slideClass:\"swiper-slide\",slideBlankClass:\"swiper-slide-invisible-blank\",slideActiveClass:\"swiper-slide-active\",slideDuplicateActiveClass:\"swiper-slide-duplicate-active\",slideVisibleClass:\"swiper-slide-visible\",slideDuplicateClass:\"swiper-slide-duplicate\",slideNextClass:\"swiper-slide-next\",slideDuplicateNextClass:\"swiper-slide-duplicate-next\",slidePrevClass:\"swiper-slide-prev\",slideDuplicatePrevClass:\"swiper-slide-duplicate-prev\",wrapperClass:\"swiper-wrapper\",runCallbacksOnInit:!0},R={update:u,translate:v,transition:f,slide:m,loop:g,grabCursor:b,manipulation:O,events:{attachEvents:function(){var e=this.params,t=this.touchEvents,s=this.el,a=this.wrapperEl;this.onTouchStart=G.bind(this),this.onTouchMove=H.bind(this),this.onTouchEnd=B.bind(this),e.cssMode&&(this.onScroll=V.bind(this)),this.onClick=X.bind(this);var r=!!e.nested;if(!h.touch&&h.pointerEvents)s.addEventListener(t.start,this.onTouchStart,!1),i.addEventListener(t.move,this.onTouchMove,r),i.addEventListener(t.end,this.onTouchEnd,!1);else{if(h.touch){var n=!(\"touchstart\"!==t.start||!h.passiveListener||!e.passiveListeners)&&{passive:!0,capture:!1};s.addEventListener(t.start,this.onTouchStart,n),s.addEventListener(t.move,this.onTouchMove,h.passiveListener?{passive:!1,capture:r}:r),s.addEventListener(t.end,this.onTouchEnd,n),t.cancel&&s.addEventListener(t.cancel,this.onTouchEnd,n),Y||(i.addEventListener(\"touchstart\",F),Y=!0)}(e.simulateTouch&&!A.ios&&!A.android||e.simulateTouch&&!h.touch&&A.ios)&&(s.addEventListener(\"mousedown\",this.onTouchStart,!1),i.addEventListener(\"mousemove\",this.onTouchMove,r),i.addEventListener(\"mouseup\",this.onTouchEnd,!1))}(e.preventClicks||e.preventClicksPropagation)&&s.addEventListener(\"click\",this.onClick,!0),e.cssMode&&a.addEventListener(\"scroll\",this.onScroll),e.updateOnWindowResize?this.on(A.ios||A.android?\"resize orientationchange observerUpdate\":\"resize observerUpdate\",N,!0):this.on(\"observerUpdate\",N,!0)},detachEvents:function(){var e=this.params,t=this.touchEvents,s=this.el,a=this.wrapperEl,r=!!e.nested;if(!h.touch&&h.pointerEvents)s.removeEventListener(t.start,this.onTouchStart,!1),i.removeEventListener(t.move,this.onTouchMove,r),i.removeEventListener(t.end,this.onTouchEnd,!1);else{if(h.touch){var n=!(\"onTouchStart\"!==t.start||!h.passiveListener||!e.passiveListeners)&&{passive:!0,capture:!1};s.removeEventListener(t.start,this.onTouchStart,n),s.removeEventListener(t.move,this.onTouchMove,r),s.removeEventListener(t.end,this.onTouchEnd,n),t.cancel&&s.removeEventListener(t.cancel,this.onTouchEnd,n)}(e.simulateTouch&&!A.ios&&!A.android||e.simulateTouch&&!h.touch&&A.ios)&&(s.removeEventListener(\"mousedown\",this.onTouchStart,!1),i.removeEventListener(\"mousemove\",this.onTouchMove,r),i.removeEventListener(\"mouseup\",this.onTouchEnd,!1))}(e.preventClicks||e.preventClicksPropagation)&&s.removeEventListener(\"click\",this.onClick,!0),e.cssMode&&a.removeEventListener(\"scroll\",this.onScroll),this.off(A.ios||A.android?\"resize orientationchange observerUpdate\":\"resize observerUpdate\",N)}},breakpoints:{setBreakpoint:function(){var e=this.activeIndex,t=this.initialized,i=this.loopedSlides;void 0===i&&(i=0);var s=this.params,a=this.$el,r=s.breakpoints;if(r&&(!r||0!==Object.keys(r).length)){var n=this.getBreakpoint(r);if(n&&this.currentBreakpoint!==n){var o=n in r?r[n]:void 0;o&&[\"slidesPerView\",\"spaceBetween\",\"slidesPerGroup\",\"slidesPerGroupSkip\",\"slidesPerColumn\"].forEach((function(e){var t=o[e];void 0!==t&&(o[e]=\"slidesPerView\"!==e||\"AUTO\"!==t&&\"auto\"!==t?\"slidesPerView\"===e?parseFloat(t):parseInt(t,10):\"auto\")}));var l=o||this.originalParams,h=s.slidesPerColumn>1,p=l.slidesPerColumn>1;h&&!p?a.removeClass(s.containerModifierClass+\"multirow \"+s.containerModifierClass+\"multirow-column\"):!h&&p&&(a.addClass(s.containerModifierClass+\"multirow\"),\"column\"===l.slidesPerColumnFill&&a.addClass(s.containerModifierClass+\"multirow-column\"));var c=l.direction&&l.direction!==s.direction,u=s.loop&&(l.slidesPerView!==s.slidesPerView||c);c&&t&&this.changeDirection(),d.extend(this.params,l),d.extend(this,{allowTouchMove:this.params.allowTouchMove,allowSlideNext:this.params.allowSlideNext,allowSlidePrev:this.params.allowSlidePrev}),this.currentBreakpoint=n,u&&t&&(this.loopDestroy(),this.loopCreate(),this.updateSlides(),this.slideTo(e-i+this.loopedSlides,0,!1)),this.emit(\"breakpoint\",l)}}},getBreakpoint:function(e){if(e){var t=!1,i=Object.keys(e).map((function(e){if(\"string\"==typeof e&&0===e.indexOf(\"@\")){var t=parseFloat(e.substr(1));return{value:a.innerHeight*t,point:e}}return{value:e,point:e}}));i.sort((function(e,t){return parseInt(e.value,10)-parseInt(t.value,10)}));for(var s=0;s<i.length;s+=1){var r=i[s],n=r.point;r.value<=a.innerWidth&&(t=n)}return t||\"max\"}}},checkOverflow:{checkOverflow:function(){var e=this.params,t=this.isLocked,i=this.slides.length>0&&e.slidesOffsetBefore+e.spaceBetween*(this.slides.length-1)+this.slides[0].offsetWidth*this.slides.length;e.slidesOffsetBefore&&e.slidesOffsetAfter&&i?this.isLocked=i<=this.size:this.isLocked=1===this.snapGrid.length,this.allowSlideNext=!this.isLocked,this.allowSlidePrev=!this.isLocked,t!==this.isLocked&&this.emit(this.isLocked?\"lock\":\"unlock\"),t&&t!==this.isLocked&&(this.isEnd=!1,this.navigation&&this.navigation.update())}},classes:{addClasses:function(){var e=this.classNames,t=this.params,i=this.rtl,s=this.$el,a=[];a.push(\"initialized\"),a.push(t.direction),t.freeMode&&a.push(\"free-mode\"),t.autoHeight&&a.push(\"autoheight\"),i&&a.push(\"rtl\"),t.slidesPerColumn>1&&(a.push(\"multirow\"),\"column\"===t.slidesPerColumnFill&&a.push(\"multirow-column\")),A.android&&a.push(\"android\"),A.ios&&a.push(\"ios\"),t.cssMode&&a.push(\"css-mode\"),a.forEach((function(i){e.push(t.containerModifierClass+i)})),s.addClass(e.join(\" \"))},removeClasses:function(){var e=this.$el,t=this.classNames;e.removeClass(t.join(\" \"))}},images:{loadImage:function(e,t,i,s,r,o){var l;function d(){o&&o()}n(e).parent(\"picture\")[0]||e.complete&&r?d():t?((l=new a.Image).onload=d,l.onerror=d,s&&(l.sizes=s),i&&(l.srcset=i),t&&(l.src=t)):d()},preloadImages:function(){var e=this;function t(){null!=e&&e&&!e.destroyed&&(void 0!==e.imagesLoaded&&(e.imagesLoaded+=1),e.imagesLoaded===e.imagesToLoad.length&&(e.params.updateOnImagesReady&&e.update(),e.emit(\"imagesReady\")))}e.imagesToLoad=e.$el.find(\"img\");for(var i=0;i<e.imagesToLoad.length;i+=1){var s=e.imagesToLoad[i];e.loadImage(s,s.currentSrc||s.getAttribute(\"src\"),s.srcset||s.getAttribute(\"srcset\"),s.sizes||s.getAttribute(\"sizes\"),!0,t)}}}},q={},j=function(e){function t(){for(var i,s,a,r=[],o=arguments.length;o--;)r[o]=arguments[o];1===r.length&&r[0].constructor&&r[0].constructor===Object?a=r[0]:(s=(i=r)[0],a=i[1]),a||(a={}),a=d.extend({},a),s&&!a.el&&(a.el=s),e.call(this,a),Object.keys(R).forEach((function(e){Object.keys(R[e]).forEach((function(i){t.prototype[i]||(t.prototype[i]=R[e][i])}))}));var l=this;void 0===l.modules&&(l.modules={}),Object.keys(l.modules).forEach((function(e){var t=l.modules[e];if(t.params){var i=Object.keys(t.params)[0],s=t.params[i];if(\"object\"!=typeof s||null===s)return;if(!(i in a)||!(\"enabled\"in s))return;!0===a[i]&&(a[i]={enabled:!0}),\"object\"!=typeof a[i]||\"enabled\"in a[i]||(a[i].enabled=!0),a[i]||(a[i]={enabled:!1})}}));var p=d.extend({},W);l.useModulesParams(p),l.params=d.extend({},p,q,a),l.originalParams=d.extend({},l.params),l.passedParams=d.extend({},a),l.$=n;var c=n(l.params.el);if(s=c[0]){if(c.length>1){var u=[];return c.each((function(e,i){var s=d.extend({},a,{el:i});u.push(new t(s))})),u}var v,f,m;return s.swiper=l,c.data(\"swiper\",l),s&&s.shadowRoot&&s.shadowRoot.querySelector?(v=n(s.shadowRoot.querySelector(\".\"+l.params.wrapperClass))).children=function(e){return c.children(e)}:v=c.children(\".\"+l.params.wrapperClass),d.extend(l,{$el:c,el:s,$wrapperEl:v,wrapperEl:v[0],classNames:[],slides:n(),slidesGrid:[],snapGrid:[],slidesSizesGrid:[],isHorizontal:function(){return\"horizontal\"===l.params.direction},isVertical:function(){return\"vertical\"===l.params.direction},rtl:\"rtl\"===s.dir.toLowerCase()||\"rtl\"===c.css(\"direction\"),rtlTranslate:\"horizontal\"===l.params.direction&&(\"rtl\"===s.dir.toLowerCase()||\"rtl\"===c.css(\"direction\")),wrongRTL:\"-webkit-box\"===v.css(\"display\"),activeIndex:0,realIndex:0,isBeginning:!0,isEnd:!1,translate:0,previousTranslate:0,progress:0,velocity:0,animating:!1,allowSlideNext:l.params.allowSlideNext,allowSlidePrev:l.params.allowSlidePrev,touchEvents:(f=[\"touchstart\",\"touchmove\",\"touchend\",\"touchcancel\"],m=[\"mousedown\",\"mousemove\",\"mouseup\"],h.pointerEvents&&(m=[\"pointerdown\",\"pointermove\",\"pointerup\"]),l.touchEventsTouch={start:f[0],move:f[1],end:f[2],cancel:f[3]},l.touchEventsDesktop={start:m[0],move:m[1],end:m[2]},h.touch||!l.params.simulateTouch?l.touchEventsTouch:l.touchEventsDesktop),touchEventsData:{isTouched:void 0,isMoved:void 0,allowTouchCallbacks:void 0,touchStartTime:void 0,isScrolling:void 0,currentTranslate:void 0,startTranslate:void 0,allowThresholdMove:void 0,formElements:\"input, select, option, textarea, button, video, label\",lastClickTime:d.now(),clickTimeout:void 0,velocities:[],allowMomentumBounce:void 0,isTouchEvent:void 0,startMoving:void 0},allowClick:!0,allowTouchMove:l.params.allowTouchMove,touches:{startX:0,startY:0,currentX:0,currentY:0,diff:0},imagesToLoad:[],imagesLoaded:0}),l.useModules(),l.params.init&&l.init(),l}}e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t;var i={extendedDefaults:{configurable:!0},defaults:{configurable:!0},Class:{configurable:!0},$:{configurable:!0}};return t.prototype.slidesPerViewDynamic=function(){var e=this.params,t=this.slides,i=this.slidesGrid,s=this.size,a=this.activeIndex,r=1;if(e.centeredSlides){for(var n,o=t[a].swiperSlideSize,l=a+1;l<t.length;l+=1)t[l]&&!n&&(r+=1,(o+=t[l].swiperSlideSize)>s&&(n=!0));for(var d=a-1;d>=0;d-=1)t[d]&&!n&&(r+=1,(o+=t[d].swiperSlideSize)>s&&(n=!0))}else for(var h=a+1;h<t.length;h+=1)i[h]-i[a]<s&&(r+=1);return r},t.prototype.update=function(){var e=this;if(e&&!e.destroyed){var t=e.snapGrid,i=e.params;i.breakpoints&&e.setBreakpoint(),e.updateSize(),e.updateSlides(),e.updateProgress(),e.updateSlidesClasses(),e.params.freeMode?(s(),e.params.autoHeight&&e.updateAutoHeight()):((\"auto\"===e.params.slidesPerView||e.params.slidesPerView>1)&&e.isEnd&&!e.params.centeredSlides?e.slideTo(e.slides.length-1,0,!1,!0):e.slideTo(e.activeIndex,0,!1,!0))||s(),i.watchOverflow&&t!==e.snapGrid&&e.checkOverflow(),e.emit(\"update\")}function s(){var t=e.rtlTranslate?-1*e.translate:e.translate,i=Math.min(Math.max(t,e.maxTranslate()),e.minTranslate());e.setTranslate(i),e.updateActiveIndex(),e.updateSlidesClasses()}},t.prototype.changeDirection=function(e,t){void 0===t&&(t=!0);var i=this.params.direction;return e||(e=\"horizontal\"===i?\"vertical\":\"horizontal\"),e===i||\"horizontal\"!==e&&\"vertical\"!==e||(this.$el.removeClass(\"\"+this.params.containerModifierClass+i).addClass(\"\"+this.params.containerModifierClass+e),this.params.direction=e,this.slides.each((function(t,i){\"vertical\"===e?i.style.width=\"\":i.style.height=\"\"})),this.emit(\"changeDirection\"),t&&this.update()),this},t.prototype.init=function(){this.initialized||(this.emit(\"beforeInit\"),this.params.breakpoints&&this.setBreakpoint(),this.addClasses(),this.params.loop&&this.loopCreate(),this.updateSize(),this.updateSlides(),this.params.watchOverflow&&this.checkOverflow(),this.params.grabCursor&&this.setGrabCursor(),this.params.preloadImages&&this.preloadImages(),this.params.loop?this.slideTo(this.params.initialSlide+this.loopedSlides,0,this.params.runCallbacksOnInit):this.slideTo(this.params.initialSlide,0,this.params.runCallbacksOnInit),this.attachEvents(),this.initialized=!0,this.emit(\"init\"))},t.prototype.destroy=function(e,t){void 0===e&&(e=!0),void 0===t&&(t=!0);var i=this,s=i.params,a=i.$el,r=i.$wrapperEl,n=i.slides;return void 0===i.params||i.destroyed||(i.emit(\"beforeDestroy\"),i.initialized=!1,i.detachEvents(),s.loop&&i.loopDestroy(),t&&(i.removeClasses(),a.removeAttr(\"style\"),r.removeAttr(\"style\"),n&&n.length&&n.removeClass([s.slideVisibleClass,s.slideActiveClass,s.slideNextClass,s.slidePrevClass].join(\" \")).removeAttr(\"style\").removeAttr(\"data-swiper-slide-index\")),i.emit(\"destroy\"),Object.keys(i.eventsListeners).forEach((function(e){i.off(e)})),!1!==e&&(i.$el[0].swiper=null,i.$el.data(\"swiper\",null),d.deleteProps(i)),i.destroyed=!0),null},t.extendDefaults=function(e){d.extend(q,e)},i.extendedDefaults.get=function(){return q},i.defaults.get=function(){return W},i.Class.get=function(){return e},i.$.get=function(){return n},Object.defineProperties(t,i),t}(p),K={name:\"device\",proto:{device:A},static:{device:A}},U={name:\"support\",proto:{support:h},static:{support:h}},_={isEdge:!!a.navigator.userAgent.match(/Edge/g),isSafari:function(){var e=a.navigator.userAgent.toLowerCase();return e.indexOf(\"safari\")>=0&&e.indexOf(\"chrome\")<0&&e.indexOf(\"android\")<0}(),isWebView:/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(a.navigator.userAgent)},Z={name:\"browser\",proto:{browser:_},static:{browser:_}},Q={name:\"resize\",create:function(){var e=this;d.extend(e,{resize:{resizeHandler:function(){e&&!e.destroyed&&e.initialized&&(e.emit(\"beforeResize\"),e.emit(\"resize\"))},orientationChangeHandler:function(){e&&!e.destroyed&&e.initialized&&e.emit(\"orientationchange\")}}})},on:{init:function(){a.addEventListener(\"resize\",this.resize.resizeHandler),a.addEventListener(\"orientationchange\",this.resize.orientationChangeHandler)},destroy:function(){a.removeEventListener(\"resize\",this.resize.resizeHandler),a.removeEventListener(\"orientationchange\",this.resize.orientationChangeHandler)}}},J={func:a.MutationObserver||a.WebkitMutationObserver,attach:function(e,t){void 0===t&&(t={});var i=this,s=new(0,J.func)((function(e){if(1!==e.length){var t=function(){i.emit(\"observerUpdate\",e[0])};a.requestAnimationFrame?a.requestAnimationFrame(t):a.setTimeout(t,0)}else i.emit(\"observerUpdate\",e[0])}));s.observe(e,{attributes:void 0===t.attributes||t.attributes,childList:void 0===t.childList||t.childList,characterData:void 0===t.characterData||t.characterData}),i.observer.observers.push(s)},init:function(){if(h.observer&&this.params.observer){if(this.params.observeParents)for(var e=this.$el.parents(),t=0;t<e.length;t+=1)this.observer.attach(e[t]);this.observer.attach(this.$el[0],{childList:this.params.observeSlideChildren}),this.observer.attach(this.$wrapperEl[0],{attributes:!1})}},destroy:function(){this.observer.observers.forEach((function(e){e.disconnect()})),this.observer.observers=[]}},ee={name:\"observer\",params:{observer:!1,observeParents:!1,observeSlideChildren:!1},create:function(){d.extend(this,{observer:{init:J.init.bind(this),attach:J.attach.bind(this),destroy:J.destroy.bind(this),observers:[]}})},on:{init:function(){this.observer.init()},destroy:function(){this.observer.destroy()}}},te={update:function(e){var t=this,i=t.params,s=i.slidesPerView,a=i.slidesPerGroup,r=i.centeredSlides,n=t.params.virtual,o=n.addSlidesBefore,l=n.addSlidesAfter,h=t.virtual,p=h.from,c=h.to,u=h.slides,v=h.slidesGrid,f=h.renderSlide,m=h.offset;t.updateActiveIndex();var g,b,w,y=t.activeIndex||0;g=t.rtlTranslate?\"right\":t.isHorizontal()?\"left\":\"top\",r?(b=Math.floor(s/2)+a+o,w=Math.floor(s/2)+a+l):(b=s+(a-1)+o,w=a+l);var x=Math.max((y||0)-w,0),E=Math.min((y||0)+b,u.length-1),T=(t.slidesGrid[x]||0)-(t.slidesGrid[0]||0);function S(){t.updateSlides(),t.updateProgress(),t.updateSlidesClasses(),t.lazy&&t.params.lazy.enabled&&t.lazy.load()}if(d.extend(t.virtual,{from:x,to:E,offset:T,slidesGrid:t.slidesGrid}),p===x&&c===E&&!e)return t.slidesGrid!==v&&T!==m&&t.slides.css(g,T+\"px\"),void t.updateProgress();if(t.params.virtual.renderExternal)return t.params.virtual.renderExternal.call(t,{offset:T,from:x,to:E,slides:function(){for(var e=[],t=x;t<=E;t+=1)e.push(u[t]);return e}()}),void S();var C=[],M=[];if(e)t.$wrapperEl.find(\".\"+t.params.slideClass).remove();else for(var P=p;P<=c;P+=1)(P<x||P>E)&&t.$wrapperEl.find(\".\"+t.params.slideClass+'[data-swiper-slide-index=\"'+P+'\"]').remove();for(var z=0;z<u.length;z+=1)z>=x&&z<=E&&(void 0===c||e?M.push(z):(z>c&&M.push(z),z<p&&C.push(z)));M.forEach((function(e){t.$wrapperEl.append(f(u[e],e))})),C.sort((function(e,t){return t-e})).forEach((function(e){t.$wrapperEl.prepend(f(u[e],e))})),t.$wrapperEl.children(\".swiper-slide\").css(g,T+\"px\"),S()},renderSlide:function(e,t){var i=this.params.virtual;if(i.cache&&this.virtual.cache[t])return this.virtual.cache[t];var s=i.renderSlide?n(i.renderSlide.call(this,e,t)):n('<div class=\"'+this.params.slideClass+'\" data-swiper-slide-index=\"'+t+'\">'+e+\"</div>\");return s.attr(\"data-swiper-slide-index\")||s.attr(\"data-swiper-slide-index\",t),i.cache&&(this.virtual.cache[t]=s),s},appendSlide:function(e){if(\"object\"==typeof e&&\"length\"in e)for(var t=0;t<e.length;t+=1)e[t]&&this.virtual.slides.push(e[t]);else this.virtual.slides.push(e);this.virtual.update(!0)},prependSlide:function(e){var t=this.activeIndex,i=t+1,s=1;if(Array.isArray(e)){for(var a=0;a<e.length;a+=1)e[a]&&this.virtual.slides.unshift(e[a]);i=t+e.length,s=e.length}else this.virtual.slides.unshift(e);if(this.params.virtual.cache){var r=this.virtual.cache,n={};Object.keys(r).forEach((function(e){var t=r[e],i=t.attr(\"data-swiper-slide-index\");i&&t.attr(\"data-swiper-slide-index\",parseInt(i,10)+1),n[parseInt(e,10)+s]=t})),this.virtual.cache=n}this.virtual.update(!0),this.slideTo(i,0)},removeSlide:function(e){if(null!=e){var t=this.activeIndex;if(Array.isArray(e))for(var i=e.length-1;i>=0;i-=1)this.virtual.slides.splice(e[i],1),this.params.virtual.cache&&delete this.virtual.cache[e[i]],e[i]<t&&(t-=1),t=Math.max(t,0);else this.virtual.slides.splice(e,1),this.params.virtual.cache&&delete this.virtual.cache[e],e<t&&(t-=1),t=Math.max(t,0);this.virtual.update(!0),this.slideTo(t,0)}},removeAllSlides:function(){this.virtual.slides=[],this.params.virtual.cache&&(this.virtual.cache={}),this.virtual.update(!0),this.slideTo(0,0)}},ie={name:\"virtual\",params:{virtual:{enabled:!1,slides:[],cache:!0,renderSlide:null,renderExternal:null,addSlidesBefore:0,addSlidesAfter:0}},create:function(){d.extend(this,{virtual:{update:te.update.bind(this),appendSlide:te.appendSlide.bind(this),prependSlide:te.prependSlide.bind(this),removeSlide:te.removeSlide.bind(this),removeAllSlides:te.removeAllSlides.bind(this),renderSlide:te.renderSlide.bind(this),slides:this.params.virtual.slides,cache:{}}})},on:{beforeInit:function(){if(this.params.virtual.enabled){this.classNames.push(this.params.containerModifierClass+\"virtual\");var e={watchSlidesProgress:!0};d.extend(this.params,e),d.extend(this.originalParams,e),this.params.initialSlide||this.virtual.update()}},setTranslate:function(){this.params.virtual.enabled&&this.virtual.update()}}},se={handle:function(e){var t=this.rtlTranslate,s=e;s.originalEvent&&(s=s.originalEvent);var r=s.keyCode||s.charCode,n=this.params.keyboard.pageUpDown,o=n&&33===r,l=n&&34===r,d=37===r,h=39===r,p=38===r,c=40===r;if(!this.allowSlideNext&&(this.isHorizontal()&&h||this.isVertical()&&c||l))return!1;if(!this.allowSlidePrev&&(this.isHorizontal()&&d||this.isVertical()&&p||o))return!1;if(!(s.shiftKey||s.altKey||s.ctrlKey||s.metaKey||i.activeElement&&i.activeElement.nodeName&&(\"input\"===i.activeElement.nodeName.toLowerCase()||\"textarea\"===i.activeElement.nodeName.toLowerCase()))){if(this.params.keyboard.onlyInViewport&&(o||l||d||h||p||c)){var u=!1;if(this.$el.parents(\".\"+this.params.slideClass).length>0&&0===this.$el.parents(\".\"+this.params.slideActiveClass).length)return;var v=a.innerWidth,f=a.innerHeight,m=this.$el.offset();t&&(m.left-=this.$el[0].scrollLeft);for(var g=[[m.left,m.top],[m.left+this.width,m.top],[m.left,m.top+this.height],[m.left+this.width,m.top+this.height]],b=0;b<g.length;b+=1){var w=g[b];w[0]>=0&&w[0]<=v&&w[1]>=0&&w[1]<=f&&(u=!0)}if(!u)return}this.isHorizontal()?((o||l||d||h)&&(s.preventDefault?s.preventDefault():s.returnValue=!1),((l||h)&&!t||(o||d)&&t)&&this.slideNext(),((o||d)&&!t||(l||h)&&t)&&this.slidePrev()):((o||l||p||c)&&(s.preventDefault?s.preventDefault():s.returnValue=!1),(l||c)&&this.slideNext(),(o||p)&&this.slidePrev()),this.emit(\"keyPress\",r)}},enable:function(){this.keyboard.enabled||(n(i).on(\"keydown\",this.keyboard.handle),this.keyboard.enabled=!0)},disable:function(){this.keyboard.enabled&&(n(i).off(\"keydown\",this.keyboard.handle),this.keyboard.enabled=!1)}},ae={name:\"keyboard\",params:{keyboard:{enabled:!1,onlyInViewport:!0,pageUpDown:!0}},create:function(){d.extend(this,{keyboard:{enabled:!1,enable:se.enable.bind(this),disable:se.disable.bind(this),handle:se.handle.bind(this)}})},on:{init:function(){this.params.keyboard.enabled&&this.keyboard.enable()},destroy:function(){this.keyboard.enabled&&this.keyboard.disable()}}};var re={lastScrollTime:d.now(),lastEventBeforeSnap:void 0,recentWheelEvents:[],event:function(){return a.navigator.userAgent.indexOf(\"firefox\")>-1?\"DOMMouseScroll\":function(){var e=\"onwheel\"in i;if(!e){var t=i.createElement(\"div\");t.setAttribute(\"onwheel\",\"return;\"),e=\"function\"==typeof t.onwheel}return!e&&i.implementation&&i.implementation.hasFeature&&!0!==i.implementation.hasFeature(\"\",\"\")&&(e=i.implementation.hasFeature(\"Events.wheel\",\"3.0\")),e}()?\"wheel\":\"mousewheel\"},normalize:function(e){var t=0,i=0,s=0,a=0;return\"detail\"in e&&(i=e.detail),\"wheelDelta\"in e&&(i=-e.wheelDelta/120),\"wheelDeltaY\"in e&&(i=-e.wheelDeltaY/120),\"wheelDeltaX\"in e&&(t=-e.wheelDeltaX/120),\"axis\"in e&&e.axis===e.HORIZONTAL_AXIS&&(t=i,i=0),s=10*t,a=10*i,\"deltaY\"in e&&(a=e.deltaY),\"deltaX\"in e&&(s=e.deltaX),e.shiftKey&&!s&&(s=a,a=0),(s||a)&&e.deltaMode&&(1===e.deltaMode?(s*=40,a*=40):(s*=800,a*=800)),s&&!t&&(t=s<1?-1:1),a&&!i&&(i=a<1?-1:1),{spinX:t,spinY:i,pixelX:s,pixelY:a}},handleMouseEnter:function(){this.mouseEntered=!0},handleMouseLeave:function(){this.mouseEntered=!1},handle:function(e){var t=e,i=this,s=i.params.mousewheel;i.params.cssMode&&t.preventDefault();var a=i.$el;if(\"container\"!==i.params.mousewheel.eventsTarged&&(a=n(i.params.mousewheel.eventsTarged)),!i.mouseEntered&&!a[0].contains(t.target)&&!s.releaseOnEdges)return!0;t.originalEvent&&(t=t.originalEvent);var r=0,o=i.rtlTranslate?-1:1,l=re.normalize(t);if(s.forceToAxis)if(i.isHorizontal()){if(!(Math.abs(l.pixelX)>Math.abs(l.pixelY)))return!0;r=-l.pixelX*o}else{if(!(Math.abs(l.pixelY)>Math.abs(l.pixelX)))return!0;r=-l.pixelY}else r=Math.abs(l.pixelX)>Math.abs(l.pixelY)?-l.pixelX*o:-l.pixelY;if(0===r)return!0;if(s.invert&&(r=-r),i.params.freeMode){var h={time:d.now(),delta:Math.abs(r),direction:Math.sign(r)},p=i.mousewheel.lastEventBeforeSnap,c=p&&h.time<p.time+500&&h.delta<=p.delta&&h.direction===p.direction;if(!c){i.mousewheel.lastEventBeforeSnap=void 0,i.params.loop&&i.loopFix();var u=i.getTranslate()+r*s.sensitivity,v=i.isBeginning,f=i.isEnd;if(u>=i.minTranslate()&&(u=i.minTranslate()),u<=i.maxTranslate()&&(u=i.maxTranslate()),i.setTransition(0),i.setTranslate(u),i.updateProgress(),i.updateActiveIndex(),i.updateSlidesClasses(),(!v&&i.isBeginning||!f&&i.isEnd)&&i.updateSlidesClasses(),i.params.freeModeSticky){clearTimeout(i.mousewheel.timeout),i.mousewheel.timeout=void 0;var m=i.mousewheel.recentWheelEvents;m.length>=15&&m.shift();var g=m.length?m[m.length-1]:void 0,b=m[0];if(m.push(h),g&&(h.delta>g.delta||h.direction!==g.direction))m.splice(0);else if(m.length>=15&&h.time-b.time<500&&b.delta-h.delta>=1&&h.delta<=6){var w=r>0?.8:.2;i.mousewheel.lastEventBeforeSnap=h,m.splice(0),i.mousewheel.timeout=d.nextTick((function(){i.slideToClosest(i.params.speed,!0,void 0,w)}),0)}i.mousewheel.timeout||(i.mousewheel.timeout=d.nextTick((function(){i.mousewheel.lastEventBeforeSnap=h,m.splice(0),i.slideToClosest(i.params.speed,!0,void 0,.5)}),500))}if(c||i.emit(\"scroll\",t),i.params.autoplay&&i.params.autoplayDisableOnInteraction&&i.autoplay.stop(),u===i.minTranslate()||u===i.maxTranslate())return!0}}else{var y={time:d.now(),delta:Math.abs(r),direction:Math.sign(r),raw:e},x=i.mousewheel.recentWheelEvents;x.length>=2&&x.shift();var E=x.length?x[x.length-1]:void 0;if(x.push(y),E?(y.direction!==E.direction||y.delta>E.delta||y.time>E.time+150)&&i.mousewheel.animateSlider(y):i.mousewheel.animateSlider(y),i.mousewheel.releaseScroll(y))return!0}return t.preventDefault?t.preventDefault():t.returnValue=!1,!1},animateSlider:function(e){return e.delta>=6&&d.now()-this.mousewheel.lastScrollTime<60||(e.direction<0?this.isEnd&&!this.params.loop||this.animating||(this.slideNext(),this.emit(\"scroll\",e.raw)):this.isBeginning&&!this.params.loop||this.animating||(this.slidePrev(),this.emit(\"scroll\",e.raw)),this.mousewheel.lastScrollTime=(new a.Date).getTime(),!1)},releaseScroll:function(e){var t=this.params.mousewheel;if(e.direction<0){if(this.isEnd&&!this.params.loop&&t.releaseOnEdges)return!0}else if(this.isBeginning&&!this.params.loop&&t.releaseOnEdges)return!0;return!1},enable:function(){var e=re.event();if(this.params.cssMode)return this.wrapperEl.removeEventListener(e,this.mousewheel.handle),!0;if(!e)return!1;if(this.mousewheel.enabled)return!1;var t=this.$el;return\"container\"!==this.params.mousewheel.eventsTarged&&(t=n(this.params.mousewheel.eventsTarged)),t.on(\"mouseenter\",this.mousewheel.handleMouseEnter),t.on(\"mouseleave\",this.mousewheel.handleMouseLeave),t.on(e,this.mousewheel.handle),this.mousewheel.enabled=!0,!0},disable:function(){var e=re.event();if(this.params.cssMode)return this.wrapperEl.addEventListener(e,this.mousewheel.handle),!0;if(!e)return!1;if(!this.mousewheel.enabled)return!1;var t=this.$el;return\"container\"!==this.params.mousewheel.eventsTarged&&(t=n(this.params.mousewheel.eventsTarged)),t.off(e,this.mousewheel.handle),this.mousewheel.enabled=!1,!0}},ne={update:function(){var e=this.params.navigation;if(!this.params.loop){var t=this.navigation,i=t.$nextEl,s=t.$prevEl;s&&s.length>0&&(this.isBeginning?s.addClass(e.disabledClass):s.removeClass(e.disabledClass),s[this.params.watchOverflow&&this.isLocked?\"addClass\":\"removeClass\"](e.lockClass)),i&&i.length>0&&(this.isEnd?i.addClass(e.disabledClass):i.removeClass(e.disabledClass),i[this.params.watchOverflow&&this.isLocked?\"addClass\":\"removeClass\"](e.lockClass))}},onPrevClick:function(e){e.preventDefault(),this.isBeginning&&!this.params.loop||this.slidePrev()},onNextClick:function(e){e.preventDefault(),this.isEnd&&!this.params.loop||this.slideNext()},init:function(){var e,t,i=this.params.navigation;(i.nextEl||i.prevEl)&&(i.nextEl&&(e=n(i.nextEl),this.params.uniqueNavElements&&\"string\"==typeof i.nextEl&&e.length>1&&1===this.$el.find(i.nextEl).length&&(e=this.$el.find(i.nextEl))),i.prevEl&&(t=n(i.prevEl),this.params.uniqueNavElements&&\"string\"==typeof i.prevEl&&t.length>1&&1===this.$el.find(i.prevEl).length&&(t=this.$el.find(i.prevEl))),e&&e.length>0&&e.on(\"click\",this.navigation.onNextClick),t&&t.length>0&&t.on(\"click\",this.navigation.onPrevClick),d.extend(this.navigation,{$nextEl:e,nextEl:e&&e[0],$prevEl:t,prevEl:t&&t[0]}))},destroy:function(){var e=this.navigation,t=e.$nextEl,i=e.$prevEl;t&&t.length&&(t.off(\"click\",this.navigation.onNextClick),t.removeClass(this.params.navigation.disabledClass)),i&&i.length&&(i.off(\"click\",this.navigation.onPrevClick),i.removeClass(this.params.navigation.disabledClass))}},oe={update:function(){var e=this.rtl,t=this.params.pagination;if(t.el&&this.pagination.el&&this.pagination.$el&&0!==this.pagination.$el.length){var i,s=this.virtual&&this.params.virtual.enabled?this.virtual.slides.length:this.slides.length,a=this.pagination.$el,r=this.params.loop?Math.ceil((s-2*this.loopedSlides)/this.params.slidesPerGroup):this.snapGrid.length;if(this.params.loop?((i=Math.ceil((this.activeIndex-this.loopedSlides)/this.params.slidesPerGroup))>s-1-2*this.loopedSlides&&(i-=s-2*this.loopedSlides),i>r-1&&(i-=r),i<0&&\"bullets\"!==this.params.paginationType&&(i=r+i)):i=void 0!==this.snapIndex?this.snapIndex:this.activeIndex||0,\"bullets\"===t.type&&this.pagination.bullets&&this.pagination.bullets.length>0){var o,l,d,h=this.pagination.bullets;if(t.dynamicBullets&&(this.pagination.bulletSize=h.eq(0)[this.isHorizontal()?\"outerWidth\":\"outerHeight\"](!0),a.css(this.isHorizontal()?\"width\":\"height\",this.pagination.bulletSize*(t.dynamicMainBullets+4)+\"px\"),t.dynamicMainBullets>1&&void 0!==this.previousIndex&&(this.pagination.dynamicBulletIndex+=i-this.previousIndex,this.pagination.dynamicBulletIndex>t.dynamicMainBullets-1?this.pagination.dynamicBulletIndex=t.dynamicMainBullets-1:this.pagination.dynamicBulletIndex<0&&(this.pagination.dynamicBulletIndex=0)),o=i-this.pagination.dynamicBulletIndex,d=((l=o+(Math.min(h.length,t.dynamicMainBullets)-1))+o)/2),h.removeClass(t.bulletActiveClass+\" \"+t.bulletActiveClass+\"-next \"+t.bulletActiveClass+\"-next-next \"+t.bulletActiveClass+\"-prev \"+t.bulletActiveClass+\"-prev-prev \"+t.bulletActiveClass+\"-main\"),a.length>1)h.each((function(e,s){var a=n(s),r=a.index();r===i&&a.addClass(t.bulletActiveClass),t.dynamicBullets&&(r>=o&&r<=l&&a.addClass(t.bulletActiveClass+\"-main\"),r===o&&a.prev().addClass(t.bulletActiveClass+\"-prev\").prev().addClass(t.bulletActiveClass+\"-prev-prev\"),r===l&&a.next().addClass(t.bulletActiveClass+\"-next\").next().addClass(t.bulletActiveClass+\"-next-next\"))}));else{var p=h.eq(i),c=p.index();if(p.addClass(t.bulletActiveClass),t.dynamicBullets){for(var u=h.eq(o),v=h.eq(l),f=o;f<=l;f+=1)h.eq(f).addClass(t.bulletActiveClass+\"-main\");if(this.params.loop)if(c>=h.length-t.dynamicMainBullets){for(var m=t.dynamicMainBullets;m>=0;m-=1)h.eq(h.length-m).addClass(t.bulletActiveClass+\"-main\");h.eq(h.length-t.dynamicMainBullets-1).addClass(t.bulletActiveClass+\"-prev\")}else u.prev().addClass(t.bulletActiveClass+\"-prev\").prev().addClass(t.bulletActiveClass+\"-prev-prev\"),v.next().addClass(t.bulletActiveClass+\"-next\").next().addClass(t.bulletActiveClass+\"-next-next\");else u.prev().addClass(t.bulletActiveClass+\"-prev\").prev().addClass(t.bulletActiveClass+\"-prev-prev\"),v.next().addClass(t.bulletActiveClass+\"-next\").next().addClass(t.bulletActiveClass+\"-next-next\")}}if(t.dynamicBullets){var g=Math.min(h.length,t.dynamicMainBullets+4),b=(this.pagination.bulletSize*g-this.pagination.bulletSize)/2-d*this.pagination.bulletSize,w=e?\"right\":\"left\";h.css(this.isHorizontal()?w:\"top\",b+\"px\")}}if(\"fraction\"===t.type&&(a.find(\".\"+t.currentClass).text(t.formatFractionCurrent(i+1)),a.find(\".\"+t.totalClass).text(t.formatFractionTotal(r))),\"progressbar\"===t.type){var y;y=t.progressbarOpposite?this.isHorizontal()?\"vertical\":\"horizontal\":this.isHorizontal()?\"horizontal\":\"vertical\";var x=(i+1)/r,E=1,T=1;\"horizontal\"===y?E=x:T=x,a.find(\".\"+t.progressbarFillClass).transform(\"translate3d(0,0,0) scaleX(\"+E+\") scaleY(\"+T+\")\").transition(this.params.speed)}\"custom\"===t.type&&t.renderCustom?(a.html(t.renderCustom(this,i+1,r)),this.emit(\"paginationRender\",this,a[0])):this.emit(\"paginationUpdate\",this,a[0]),a[this.params.watchOverflow&&this.isLocked?\"addClass\":\"removeClass\"](t.lockClass)}},render:function(){var e=this.params.pagination;if(e.el&&this.pagination.el&&this.pagination.$el&&0!==this.pagination.$el.length){var t=this.virtual&&this.params.virtual.enabled?this.virtual.slides.length:this.slides.length,i=this.pagination.$el,s=\"\";if(\"bullets\"===e.type){for(var a=this.params.loop?Math.ceil((t-2*this.loopedSlides)/this.params.slidesPerGroup):this.snapGrid.length,r=0;r<a;r+=1)e.renderBullet?s+=e.renderBullet.call(this,r,e.bulletClass):s+=\"<\"+e.bulletElement+' class=\"'+e.bulletClass+'\"></'+e.bulletElement+\">\";i.html(s),this.pagination.bullets=i.find(\".\"+e.bulletClass)}\"fraction\"===e.type&&(s=e.renderFraction?e.renderFraction.call(this,e.currentClass,e.totalClass):'<span class=\"'+e.currentClass+'\"></span> / <span class=\"'+e.totalClass+'\"></span>',i.html(s)),\"progressbar\"===e.type&&(s=e.renderProgressbar?e.renderProgressbar.call(this,e.progressbarFillClass):'<span class=\"'+e.progressbarFillClass+'\"></span>',i.html(s)),\"custom\"!==e.type&&this.emit(\"paginationRender\",this.pagination.$el[0])}},init:function(){var e=this,t=e.params.pagination;if(t.el){var i=n(t.el);0!==i.length&&(e.params.uniqueNavElements&&\"string\"==typeof t.el&&i.length>1&&(i=e.$el.find(t.el)),\"bullets\"===t.type&&t.clickable&&i.addClass(t.clickableClass),i.addClass(t.modifierClass+t.type),\"bullets\"===t.type&&t.dynamicBullets&&(i.addClass(\"\"+t.modifierClass+t.type+\"-dynamic\"),e.pagination.dynamicBulletIndex=0,t.dynamicMainBullets<1&&(t.dynamicMainBullets=1)),\"progressbar\"===t.type&&t.progressbarOpposite&&i.addClass(t.progressbarOppositeClass),t.clickable&&i.on(\"click\",\".\"+t.bulletClass,(function(t){t.preventDefault();var i=n(this).index()*e.params.slidesPerGroup;e.params.loop&&(i+=e.loopedSlides),e.slideTo(i)})),d.extend(e.pagination,{$el:i,el:i[0]}))}},destroy:function(){var e=this.params.pagination;if(e.el&&this.pagination.el&&this.pagination.$el&&0!==this.pagination.$el.length){var t=this.pagination.$el;t.removeClass(e.hiddenClass),t.removeClass(e.modifierClass+e.type),this.pagination.bullets&&this.pagination.bullets.removeClass(e.bulletActiveClass),e.clickable&&t.off(\"click\",\".\"+e.bulletClass)}}},le={setTranslate:function(){if(this.params.scrollbar.el&&this.scrollbar.el){var e=this.scrollbar,t=this.rtlTranslate,i=this.progress,s=e.dragSize,a=e.trackSize,r=e.$dragEl,n=e.$el,o=this.params.scrollbar,l=s,d=(a-s)*i;t?(d=-d)>0?(l=s-d,d=0):-d+s>a&&(l=a+d):d<0?(l=s+d,d=0):d+s>a&&(l=a-d),this.isHorizontal()?(r.transform(\"translate3d(\"+d+\"px, 0, 0)\"),r[0].style.width=l+\"px\"):(r.transform(\"translate3d(0px, \"+d+\"px, 0)\"),r[0].style.height=l+\"px\"),o.hide&&(clearTimeout(this.scrollbar.timeout),n[0].style.opacity=1,this.scrollbar.timeout=setTimeout((function(){n[0].style.opacity=0,n.transition(400)}),1e3))}},setTransition:function(e){this.params.scrollbar.el&&this.scrollbar.el&&this.scrollbar.$dragEl.transition(e)},updateSize:function(){if(this.params.scrollbar.el&&this.scrollbar.el){var e=this.scrollbar,t=e.$dragEl,i=e.$el;t[0].style.width=\"\",t[0].style.height=\"\";var s,a=this.isHorizontal()?i[0].offsetWidth:i[0].offsetHeight,r=this.size/this.virtualSize,n=r*(a/this.size);s=\"auto\"===this.params.scrollbar.dragSize?a*r:parseInt(this.params.scrollbar.dragSize,10),this.isHorizontal()?t[0].style.width=s+\"px\":t[0].style.height=s+\"px\",i[0].style.display=r>=1?\"none\":\"\",this.params.scrollbar.hide&&(i[0].style.opacity=0),d.extend(e,{trackSize:a,divider:r,moveDivider:n,dragSize:s}),e.$el[this.params.watchOverflow&&this.isLocked?\"addClass\":\"removeClass\"](this.params.scrollbar.lockClass)}},getPointerPosition:function(e){return this.isHorizontal()?\"touchstart\"===e.type||\"touchmove\"===e.type?e.targetTouches[0].clientX:e.clientX:\"touchstart\"===e.type||\"touchmove\"===e.type?e.targetTouches[0].clientY:e.clientY},setDragPosition:function(e){var t,i=this.scrollbar,s=this.rtlTranslate,a=i.$el,r=i.dragSize,n=i.trackSize,o=i.dragStartPos;t=(i.getPointerPosition(e)-a.offset()[this.isHorizontal()?\"left\":\"top\"]-(null!==o?o:r/2))/(n-r),t=Math.max(Math.min(t,1),0),s&&(t=1-t);var l=this.minTranslate()+(this.maxTranslate()-this.minTranslate())*t;this.updateProgress(l),this.setTranslate(l),this.updateActiveIndex(),this.updateSlidesClasses()},onDragStart:function(e){var t=this.params.scrollbar,i=this.scrollbar,s=this.$wrapperEl,a=i.$el,r=i.$dragEl;this.scrollbar.isTouched=!0,this.scrollbar.dragStartPos=e.target===r[0]||e.target===r?i.getPointerPosition(e)-e.target.getBoundingClientRect()[this.isHorizontal()?\"left\":\"top\"]:null,e.preventDefault(),e.stopPropagation(),s.transition(100),r.transition(100),i.setDragPosition(e),clearTimeout(this.scrollbar.dragTimeout),a.transition(0),t.hide&&a.css(\"opacity\",1),this.params.cssMode&&this.$wrapperEl.css(\"scroll-snap-type\",\"none\"),this.emit(\"scrollbarDragStart\",e)},onDragMove:function(e){var t=this.scrollbar,i=this.$wrapperEl,s=t.$el,a=t.$dragEl;this.scrollbar.isTouched&&(e.preventDefault?e.preventDefault():e.returnValue=!1,t.setDragPosition(e),i.transition(0),s.transition(0),a.transition(0),this.emit(\"scrollbarDragMove\",e))},onDragEnd:function(e){var t=this.params.scrollbar,i=this.scrollbar,s=this.$wrapperEl,a=i.$el;this.scrollbar.isTouched&&(this.scrollbar.isTouched=!1,this.params.cssMode&&(this.$wrapperEl.css(\"scroll-snap-type\",\"\"),s.transition(\"\")),t.hide&&(clearTimeout(this.scrollbar.dragTimeout),this.scrollbar.dragTimeout=d.nextTick((function(){a.css(\"opacity\",0),a.transition(400)}),1e3)),this.emit(\"scrollbarDragEnd\",e),t.snapOnRelease&&this.slideToClosest())},enableDraggable:function(){if(this.params.scrollbar.el){var e=this.scrollbar,t=this.touchEventsTouch,s=this.touchEventsDesktop,a=this.params,r=e.$el[0],n=!(!h.passiveListener||!a.passiveListeners)&&{passive:!1,capture:!1},o=!(!h.passiveListener||!a.passiveListeners)&&{passive:!0,capture:!1};h.touch?(r.addEventListener(t.start,this.scrollbar.onDragStart,n),r.addEventListener(t.move,this.scrollbar.onDragMove,n),r.addEventListener(t.end,this.scrollbar.onDragEnd,o)):(r.addEventListener(s.start,this.scrollbar.onDragStart,n),i.addEventListener(s.move,this.scrollbar.onDragMove,n),i.addEventListener(s.end,this.scrollbar.onDragEnd,o))}},disableDraggable:function(){if(this.params.scrollbar.el){var e=this.scrollbar,t=this.touchEventsTouch,s=this.touchEventsDesktop,a=this.params,r=e.$el[0],n=!(!h.passiveListener||!a.passiveListeners)&&{passive:!1,capture:!1},o=!(!h.passiveListener||!a.passiveListeners)&&{passive:!0,capture:!1};h.touch?(r.removeEventListener(t.start,this.scrollbar.onDragStart,n),r.removeEventListener(t.move,this.scrollbar.onDragMove,n),r.removeEventListener(t.end,this.scrollbar.onDragEnd,o)):(r.removeEventListener(s.start,this.scrollbar.onDragStart,n),i.removeEventListener(s.move,this.scrollbar.onDragMove,n),i.removeEventListener(s.end,this.scrollbar.onDragEnd,o))}},init:function(){if(this.params.scrollbar.el){var e=this.scrollbar,t=this.$el,i=this.params.scrollbar,s=n(i.el);this.params.uniqueNavElements&&\"string\"==typeof i.el&&s.length>1&&1===t.find(i.el).length&&(s=t.find(i.el));var a=s.find(\".\"+this.params.scrollbar.dragClass);0===a.length&&(a=n('<div class=\"'+this.params.scrollbar.dragClass+'\"></div>'),s.append(a)),d.extend(e,{$el:s,el:s[0],$dragEl:a,dragEl:a[0]}),i.draggable&&e.enableDraggable()}},destroy:function(){this.scrollbar.disableDraggable()}},de={setTransform:function(e,t){var i=this.rtl,s=n(e),a=i?-1:1,r=s.attr(\"data-swiper-parallax\")||\"0\",o=s.attr(\"data-swiper-parallax-x\"),l=s.attr(\"data-swiper-parallax-y\"),d=s.attr(\"data-swiper-parallax-scale\"),h=s.attr(\"data-swiper-parallax-opacity\");if(o||l?(o=o||\"0\",l=l||\"0\"):this.isHorizontal()?(o=r,l=\"0\"):(l=r,o=\"0\"),o=o.indexOf(\"%\")>=0?parseInt(o,10)*t*a+\"%\":o*t*a+\"px\",l=l.indexOf(\"%\")>=0?parseInt(l,10)*t+\"%\":l*t+\"px\",null!=h){var p=h-(h-1)*(1-Math.abs(t));s[0].style.opacity=p}if(null==d)s.transform(\"translate3d(\"+o+\", \"+l+\", 0px)\");else{var c=d-(d-1)*(1-Math.abs(t));s.transform(\"translate3d(\"+o+\", \"+l+\", 0px) scale(\"+c+\")\")}},setTranslate:function(){var e=this,t=e.$el,i=e.slides,s=e.progress,a=e.snapGrid;t.children(\"[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]\").each((function(t,i){e.parallax.setTransform(i,s)})),i.each((function(t,i){var r=i.progress;e.params.slidesPerGroup>1&&\"auto\"!==e.params.slidesPerView&&(r+=Math.ceil(t/2)-s*(a.length-1)),r=Math.min(Math.max(r,-1),1),n(i).find(\"[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]\").each((function(t,i){e.parallax.setTransform(i,r)}))}))},setTransition:function(e){void 0===e&&(e=this.params.speed);this.$el.find(\"[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]\").each((function(t,i){var s=n(i),a=parseInt(s.attr(\"data-swiper-parallax-duration\"),10)||e;0===e&&(a=0),s.transition(a)}))}},he={getDistanceBetweenTouches:function(e){if(e.targetTouches.length<2)return 1;var t=e.targetTouches[0].pageX,i=e.targetTouches[0].pageY,s=e.targetTouches[1].pageX,a=e.targetTouches[1].pageY;return Math.sqrt(Math.pow(s-t,2)+Math.pow(a-i,2))},onGestureStart:function(e){var t=this.params.zoom,i=this.zoom,s=i.gesture;if(i.fakeGestureTouched=!1,i.fakeGestureMoved=!1,!h.gestures){if(\"touchstart\"!==e.type||\"touchstart\"===e.type&&e.targetTouches.length<2)return;i.fakeGestureTouched=!0,s.scaleStart=he.getDistanceBetweenTouches(e)}s.$slideEl&&s.$slideEl.length||(s.$slideEl=n(e.target).closest(\".\"+this.params.slideClass),0===s.$slideEl.length&&(s.$slideEl=this.slides.eq(this.activeIndex)),s.$imageEl=s.$slideEl.find(\"img, svg, canvas, picture, .swiper-zoom-target\"),s.$imageWrapEl=s.$imageEl.parent(\".\"+t.containerClass),s.maxRatio=s.$imageWrapEl.attr(\"data-swiper-zoom\")||t.maxRatio,0!==s.$imageWrapEl.length)?(s.$imageEl&&s.$imageEl.transition(0),this.zoom.isScaling=!0):s.$imageEl=void 0},onGestureChange:function(e){var t=this.params.zoom,i=this.zoom,s=i.gesture;if(!h.gestures){if(\"touchmove\"!==e.type||\"touchmove\"===e.type&&e.targetTouches.length<2)return;i.fakeGestureMoved=!0,s.scaleMove=he.getDistanceBetweenTouches(e)}s.$imageEl&&0!==s.$imageEl.length&&(i.scale=h.gestures?e.scale*i.currentScale:s.scaleMove/s.scaleStart*i.currentScale,i.scale>s.maxRatio&&(i.scale=s.maxRatio-1+Math.pow(i.scale-s.maxRatio+1,.5)),i.scale<t.minRatio&&(i.scale=t.minRatio+1-Math.pow(t.minRatio-i.scale+1,.5)),s.$imageEl.transform(\"translate3d(0,0,0) scale(\"+i.scale+\")\"))},onGestureEnd:function(e){var t=this.params.zoom,i=this.zoom,s=i.gesture;if(!h.gestures){if(!i.fakeGestureTouched||!i.fakeGestureMoved)return;if(\"touchend\"!==e.type||\"touchend\"===e.type&&e.changedTouches.length<2&&!A.android)return;i.fakeGestureTouched=!1,i.fakeGestureMoved=!1}s.$imageEl&&0!==s.$imageEl.length&&(i.scale=Math.max(Math.min(i.scale,s.maxRatio),t.minRatio),s.$imageEl.transition(this.params.speed).transform(\"translate3d(0,0,0) scale(\"+i.scale+\")\"),i.currentScale=i.scale,i.isScaling=!1,1===i.scale&&(s.$slideEl=void 0))},onTouchStart:function(e){var t=this.zoom,i=t.gesture,s=t.image;i.$imageEl&&0!==i.$imageEl.length&&(s.isTouched||(A.android&&e.cancelable&&e.preventDefault(),s.isTouched=!0,s.touchesStart.x=\"touchstart\"===e.type?e.targetTouches[0].pageX:e.pageX,s.touchesStart.y=\"touchstart\"===e.type?e.targetTouches[0].pageY:e.pageY))},onTouchMove:function(e){var t=this.zoom,i=t.gesture,s=t.image,a=t.velocity;if(i.$imageEl&&0!==i.$imageEl.length&&(this.allowClick=!1,s.isTouched&&i.$slideEl)){s.isMoved||(s.width=i.$imageEl[0].offsetWidth,s.height=i.$imageEl[0].offsetHeight,s.startX=d.getTranslate(i.$imageWrapEl[0],\"x\")||0,s.startY=d.getTranslate(i.$imageWrapEl[0],\"y\")||0,i.slideWidth=i.$slideEl[0].offsetWidth,i.slideHeight=i.$slideEl[0].offsetHeight,i.$imageWrapEl.transition(0),this.rtl&&(s.startX=-s.startX,s.startY=-s.startY));var r=s.width*t.scale,n=s.height*t.scale;if(!(r<i.slideWidth&&n<i.slideHeight)){if(s.minX=Math.min(i.slideWidth/2-r/2,0),s.maxX=-s.minX,s.minY=Math.min(i.slideHeight/2-n/2,0),s.maxY=-s.minY,s.touchesCurrent.x=\"touchmove\"===e.type?e.targetTouches[0].pageX:e.pageX,s.touchesCurrent.y=\"touchmove\"===e.type?e.targetTouches[0].pageY:e.pageY,!s.isMoved&&!t.isScaling){if(this.isHorizontal()&&(Math.floor(s.minX)===Math.floor(s.startX)&&s.touchesCurrent.x<s.touchesStart.x||Math.floor(s.maxX)===Math.floor(s.startX)&&s.touchesCurrent.x>s.touchesStart.x))return void(s.isTouched=!1);if(!this.isHorizontal()&&(Math.floor(s.minY)===Math.floor(s.startY)&&s.touchesCurrent.y<s.touchesStart.y||Math.floor(s.maxY)===Math.floor(s.startY)&&s.touchesCurrent.y>s.touchesStart.y))return void(s.isTouched=!1)}e.cancelable&&e.preventDefault(),e.stopPropagation(),s.isMoved=!0,s.currentX=s.touchesCurrent.x-s.touchesStart.x+s.startX,s.currentY=s.touchesCurrent.y-s.touchesStart.y+s.startY,s.currentX<s.minX&&(s.currentX=s.minX+1-Math.pow(s.minX-s.currentX+1,.8)),s.currentX>s.maxX&&(s.currentX=s.maxX-1+Math.pow(s.currentX-s.maxX+1,.8)),s.currentY<s.minY&&(s.currentY=s.minY+1-Math.pow(s.minY-s.currentY+1,.8)),s.currentY>s.maxY&&(s.currentY=s.maxY-1+Math.pow(s.currentY-s.maxY+1,.8)),a.prevPositionX||(a.prevPositionX=s.touchesCurrent.x),a.prevPositionY||(a.prevPositionY=s.touchesCurrent.y),a.prevTime||(a.prevTime=Date.now()),a.x=(s.touchesCurrent.x-a.prevPositionX)/(Date.now()-a.prevTime)/2,a.y=(s.touchesCurrent.y-a.prevPositionY)/(Date.now()-a.prevTime)/2,Math.abs(s.touchesCurrent.x-a.prevPositionX)<2&&(a.x=0),Math.abs(s.touchesCurrent.y-a.prevPositionY)<2&&(a.y=0),a.prevPositionX=s.touchesCurrent.x,a.prevPositionY=s.touchesCurrent.y,a.prevTime=Date.now(),i.$imageWrapEl.transform(\"translate3d(\"+s.currentX+\"px, \"+s.currentY+\"px,0)\")}}},onTouchEnd:function(){var e=this.zoom,t=e.gesture,i=e.image,s=e.velocity;if(t.$imageEl&&0!==t.$imageEl.length){if(!i.isTouched||!i.isMoved)return i.isTouched=!1,void(i.isMoved=!1);i.isTouched=!1,i.isMoved=!1;var a=300,r=300,n=s.x*a,o=i.currentX+n,l=s.y*r,d=i.currentY+l;0!==s.x&&(a=Math.abs((o-i.currentX)/s.x)),0!==s.y&&(r=Math.abs((d-i.currentY)/s.y));var h=Math.max(a,r);i.currentX=o,i.currentY=d;var p=i.width*e.scale,c=i.height*e.scale;i.minX=Math.min(t.slideWidth/2-p/2,0),i.maxX=-i.minX,i.minY=Math.min(t.slideHeight/2-c/2,0),i.maxY=-i.minY,i.currentX=Math.max(Math.min(i.currentX,i.maxX),i.minX),i.currentY=Math.max(Math.min(i.currentY,i.maxY),i.minY),t.$imageWrapEl.transition(h).transform(\"translate3d(\"+i.currentX+\"px, \"+i.currentY+\"px,0)\")}},onTransitionEnd:function(){var e=this.zoom,t=e.gesture;t.$slideEl&&this.previousIndex!==this.activeIndex&&(t.$imageEl&&t.$imageEl.transform(\"translate3d(0,0,0) scale(1)\"),t.$imageWrapEl&&t.$imageWrapEl.transform(\"translate3d(0,0,0)\"),e.scale=1,e.currentScale=1,t.$slideEl=void 0,t.$imageEl=void 0,t.$imageWrapEl=void 0)},toggle:function(e){var t=this.zoom;t.scale&&1!==t.scale?t.out():t.in(e)},in:function(e){var t,i,s,a,r,n,o,l,d,h,p,c,u,v,f,m,g=this.zoom,b=this.params.zoom,w=g.gesture,y=g.image;(w.$slideEl||(this.params.virtual&&this.params.virtual.enabled&&this.virtual?w.$slideEl=this.$wrapperEl.children(\".\"+this.params.slideActiveClass):w.$slideEl=this.slides.eq(this.activeIndex),w.$imageEl=w.$slideEl.find(\"img, svg, canvas, picture, .swiper-zoom-target\"),w.$imageWrapEl=w.$imageEl.parent(\".\"+b.containerClass)),w.$imageEl&&0!==w.$imageEl.length)&&(w.$slideEl.addClass(\"\"+b.zoomedSlideClass),void 0===y.touchesStart.x&&e?(t=\"touchend\"===e.type?e.changedTouches[0].pageX:e.pageX,i=\"touchend\"===e.type?e.changedTouches[0].pageY:e.pageY):(t=y.touchesStart.x,i=y.touchesStart.y),g.scale=w.$imageWrapEl.attr(\"data-swiper-zoom\")||b.maxRatio,g.currentScale=w.$imageWrapEl.attr(\"data-swiper-zoom\")||b.maxRatio,e?(f=w.$slideEl[0].offsetWidth,m=w.$slideEl[0].offsetHeight,s=w.$slideEl.offset().left+f/2-t,a=w.$slideEl.offset().top+m/2-i,o=w.$imageEl[0].offsetWidth,l=w.$imageEl[0].offsetHeight,d=o*g.scale,h=l*g.scale,u=-(p=Math.min(f/2-d/2,0)),v=-(c=Math.min(m/2-h/2,0)),(r=s*g.scale)<p&&(r=p),r>u&&(r=u),(n=a*g.scale)<c&&(n=c),n>v&&(n=v)):(r=0,n=0),w.$imageWrapEl.transition(300).transform(\"translate3d(\"+r+\"px, \"+n+\"px,0)\"),w.$imageEl.transition(300).transform(\"translate3d(0,0,0) scale(\"+g.scale+\")\"))},out:function(){var e=this.zoom,t=this.params.zoom,i=e.gesture;i.$slideEl||(this.params.virtual&&this.params.virtual.enabled&&this.virtual?i.$slideEl=this.$wrapperEl.children(\".\"+this.params.slideActiveClass):i.$slideEl=this.slides.eq(this.activeIndex),i.$imageEl=i.$slideEl.find(\"img, svg, canvas, picture, .swiper-zoom-target\"),i.$imageWrapEl=i.$imageEl.parent(\".\"+t.containerClass)),i.$imageEl&&0!==i.$imageEl.length&&(e.scale=1,e.currentScale=1,i.$imageWrapEl.transition(300).transform(\"translate3d(0,0,0)\"),i.$imageEl.transition(300).transform(\"translate3d(0,0,0) scale(1)\"),i.$slideEl.removeClass(\"\"+t.zoomedSlideClass),i.$slideEl=void 0)},enable:function(){var e=this.zoom;if(!e.enabled){e.enabled=!0;var t=!(\"touchstart\"!==this.touchEvents.start||!h.passiveListener||!this.params.passiveListeners)&&{passive:!0,capture:!1},i=!h.passiveListener||{passive:!1,capture:!0},s=\".\"+this.params.slideClass;h.gestures?(this.$wrapperEl.on(\"gesturestart\",s,e.onGestureStart,t),this.$wrapperEl.on(\"gesturechange\",s,e.onGestureChange,t),this.$wrapperEl.on(\"gestureend\",s,e.onGestureEnd,t)):\"touchstart\"===this.touchEvents.start&&(this.$wrapperEl.on(this.touchEvents.start,s,e.onGestureStart,t),this.$wrapperEl.on(this.touchEvents.move,s,e.onGestureChange,i),this.$wrapperEl.on(this.touchEvents.end,s,e.onGestureEnd,t),this.touchEvents.cancel&&this.$wrapperEl.on(this.touchEvents.cancel,s,e.onGestureEnd,t)),this.$wrapperEl.on(this.touchEvents.move,\".\"+this.params.zoom.containerClass,e.onTouchMove,i)}},disable:function(){var e=this.zoom;if(e.enabled){this.zoom.enabled=!1;var t=!(\"touchstart\"!==this.touchEvents.start||!h.passiveListener||!this.params.passiveListeners)&&{passive:!0,capture:!1},i=!h.passiveListener||{passive:!1,capture:!0},s=\".\"+this.params.slideClass;h.gestures?(this.$wrapperEl.off(\"gesturestart\",s,e.onGestureStart,t),this.$wrapperEl.off(\"gesturechange\",s,e.onGestureChange,t),this.$wrapperEl.off(\"gestureend\",s,e.onGestureEnd,t)):\"touchstart\"===this.touchEvents.start&&(this.$wrapperEl.off(this.touchEvents.start,s,e.onGestureStart,t),this.$wrapperEl.off(this.touchEvents.move,s,e.onGestureChange,i),this.$wrapperEl.off(this.touchEvents.end,s,e.onGestureEnd,t),this.touchEvents.cancel&&this.$wrapperEl.off(this.touchEvents.cancel,s,e.onGestureEnd,t)),this.$wrapperEl.off(this.touchEvents.move,\".\"+this.params.zoom.containerClass,e.onTouchMove,i)}}},pe={loadInSlide:function(e,t){void 0===t&&(t=!0);var i=this,s=i.params.lazy;if(void 0!==e&&0!==i.slides.length){var a=i.virtual&&i.params.virtual.enabled?i.$wrapperEl.children(\".\"+i.params.slideClass+'[data-swiper-slide-index=\"'+e+'\"]'):i.slides.eq(e),r=a.find(\".\"+s.elementClass+\":not(.\"+s.loadedClass+\"):not(.\"+s.loadingClass+\")\");!a.hasClass(s.elementClass)||a.hasClass(s.loadedClass)||a.hasClass(s.loadingClass)||(r=r.add(a[0])),0!==r.length&&r.each((function(e,r){var o=n(r);o.addClass(s.loadingClass);var l=o.attr(\"data-background\"),d=o.attr(\"data-src\"),h=o.attr(\"data-srcset\"),p=o.attr(\"data-sizes\"),c=o.parent(\"picture\");i.loadImage(o[0],d||l,h,p,!1,(function(){if(null!=i&&i&&(!i||i.params)&&!i.destroyed){if(l?(o.css(\"background-image\",'url(\"'+l+'\")'),o.removeAttr(\"data-background\")):(h&&(o.attr(\"srcset\",h),o.removeAttr(\"data-srcset\")),p&&(o.attr(\"sizes\",p),o.removeAttr(\"data-sizes\")),c.length&&c.children(\"source\").each((function(e,t){var i=n(t);i.attr(\"data-srcset\")&&(i.attr(\"srcset\",i.attr(\"data-srcset\")),i.removeAttr(\"data-srcset\"))})),d&&(o.attr(\"src\",d),o.removeAttr(\"data-src\"))),o.addClass(s.loadedClass).removeClass(s.loadingClass),a.find(\".\"+s.preloaderClass).remove(),i.params.loop&&t){var e=a.attr(\"data-swiper-slide-index\");if(a.hasClass(i.params.slideDuplicateClass)){var r=i.$wrapperEl.children('[data-swiper-slide-index=\"'+e+'\"]:not(.'+i.params.slideDuplicateClass+\")\");i.lazy.loadInSlide(r.index(),!1)}else{var u=i.$wrapperEl.children(\".\"+i.params.slideDuplicateClass+'[data-swiper-slide-index=\"'+e+'\"]');i.lazy.loadInSlide(u.index(),!1)}}i.emit(\"lazyImageReady\",a[0],o[0]),i.params.autoHeight&&i.updateAutoHeight()}})),i.emit(\"lazyImageLoad\",a[0],o[0])}))}},load:function(){var e=this,t=e.$wrapperEl,i=e.params,s=e.slides,a=e.activeIndex,r=e.virtual&&i.virtual.enabled,o=i.lazy,l=i.slidesPerView;function d(e){if(r){if(t.children(\".\"+i.slideClass+'[data-swiper-slide-index=\"'+e+'\"]').length)return!0}else if(s[e])return!0;return!1}function h(e){return r?n(e).attr(\"data-swiper-slide-index\"):n(e).index()}if(\"auto\"===l&&(l=0),e.lazy.initialImageLoaded||(e.lazy.initialImageLoaded=!0),e.params.watchSlidesVisibility)t.children(\".\"+i.slideVisibleClass).each((function(t,i){var s=r?n(i).attr(\"data-swiper-slide-index\"):n(i).index();e.lazy.loadInSlide(s)}));else if(l>1)for(var p=a;p<a+l;p+=1)d(p)&&e.lazy.loadInSlide(p);else e.lazy.loadInSlide(a);if(o.loadPrevNext)if(l>1||o.loadPrevNextAmount&&o.loadPrevNextAmount>1){for(var c=o.loadPrevNextAmount,u=l,v=Math.min(a+u+Math.max(c,u),s.length),f=Math.max(a-Math.max(u,c),0),m=a+l;m<v;m+=1)d(m)&&e.lazy.loadInSlide(m);for(var g=f;g<a;g+=1)d(g)&&e.lazy.loadInSlide(g)}else{var b=t.children(\".\"+i.slideNextClass);b.length>0&&e.lazy.loadInSlide(h(b));var w=t.children(\".\"+i.slidePrevClass);w.length>0&&e.lazy.loadInSlide(h(w))}}},ce={LinearSpline:function(e,t){var i,s,a,r,n,o=function(e,t){for(s=-1,i=e.length;i-s>1;)e[a=i+s>>1]<=t?s=a:i=a;return i};return this.x=e,this.y=t,this.lastIndex=e.length-1,this.interpolate=function(e){return e?(n=o(this.x,e),r=n-1,(e-this.x[r])*(this.y[n]-this.y[r])/(this.x[n]-this.x[r])+this.y[r]):0},this},getInterpolateFunction:function(e){this.controller.spline||(this.controller.spline=this.params.loop?new ce.LinearSpline(this.slidesGrid,e.slidesGrid):new ce.LinearSpline(this.snapGrid,e.snapGrid))},setTranslate:function(e,t){var i,s,a=this,r=a.controller.control;function n(e){var t=a.rtlTranslate?-a.translate:a.translate;\"slide\"===a.params.controller.by&&(a.controller.getInterpolateFunction(e),s=-a.controller.spline.interpolate(-t)),s&&\"container\"!==a.params.controller.by||(i=(e.maxTranslate()-e.minTranslate())/(a.maxTranslate()-a.minTranslate()),s=(t-a.minTranslate())*i+e.minTranslate()),a.params.controller.inverse&&(s=e.maxTranslate()-s),e.updateProgress(s),e.setTranslate(s,a),e.updateActiveIndex(),e.updateSlidesClasses()}if(Array.isArray(r))for(var o=0;o<r.length;o+=1)r[o]!==t&&r[o]instanceof j&&n(r[o]);else r instanceof j&&t!==r&&n(r)},setTransition:function(e,t){var i,s=this,a=s.controller.control;function r(t){t.setTransition(e,s),0!==e&&(t.transitionStart(),t.params.autoHeight&&d.nextTick((function(){t.updateAutoHeight()})),t.$wrapperEl.transitionEnd((function(){a&&(t.params.loop&&\"slide\"===s.params.controller.by&&t.loopFix(),t.transitionEnd())})))}if(Array.isArray(a))for(i=0;i<a.length;i+=1)a[i]!==t&&a[i]instanceof j&&r(a[i]);else a instanceof j&&t!==a&&r(a)}},ue={makeElFocusable:function(e){return e.attr(\"tabIndex\",\"0\"),e},makeElNotFocusable:function(e){return e.attr(\"tabIndex\",\"-1\"),e},addElRole:function(e,t){return e.attr(\"role\",t),e},addElLabel:function(e,t){return e.attr(\"aria-label\",t),e},disableEl:function(e){return e.attr(\"aria-disabled\",!0),e},enableEl:function(e){return e.attr(\"aria-disabled\",!1),e},onEnterKey:function(e){var t=this.params.a11y;if(13===e.keyCode){var i=n(e.target);this.navigation&&this.navigation.$nextEl&&i.is(this.navigation.$nextEl)&&(this.isEnd&&!this.params.loop||this.slideNext(),this.isEnd?this.a11y.notify(t.lastSlideMessage):this.a11y.notify(t.nextSlideMessage)),this.navigation&&this.navigation.$prevEl&&i.is(this.navigation.$prevEl)&&(this.isBeginning&&!this.params.loop||this.slidePrev(),this.isBeginning?this.a11y.notify(t.firstSlideMessage):this.a11y.notify(t.prevSlideMessage)),this.pagination&&i.is(\".\"+this.params.pagination.bulletClass)&&i[0].click()}},notify:function(e){var t=this.a11y.liveRegion;0!==t.length&&(t.html(\"\"),t.html(e))},updateNavigation:function(){if(!this.params.loop&&this.navigation){var e=this.navigation,t=e.$nextEl,i=e.$prevEl;i&&i.length>0&&(this.isBeginning?(this.a11y.disableEl(i),this.a11y.makeElNotFocusable(i)):(this.a11y.enableEl(i),this.a11y.makeElFocusable(i))),t&&t.length>0&&(this.isEnd?(this.a11y.disableEl(t),this.a11y.makeElNotFocusable(t)):(this.a11y.enableEl(t),this.a11y.makeElFocusable(t)))}},updatePagination:function(){var e=this,t=e.params.a11y;e.pagination&&e.params.pagination.clickable&&e.pagination.bullets&&e.pagination.bullets.length&&e.pagination.bullets.each((function(i,s){var a=n(s);e.a11y.makeElFocusable(a),e.a11y.addElRole(a,\"button\"),e.a11y.addElLabel(a,t.paginationBulletMessage.replace(/\\{\\{index\\}\\}/,a.index()+1))}))},init:function(){this.$el.append(this.a11y.liveRegion);var e,t,i=this.params.a11y;this.navigation&&this.navigation.$nextEl&&(e=this.navigation.$nextEl),this.navigation&&this.navigation.$prevEl&&(t=this.navigation.$prevEl),e&&(this.a11y.makeElFocusable(e),this.a11y.addElRole(e,\"button\"),this.a11y.addElLabel(e,i.nextSlideMessage),e.on(\"keydown\",this.a11y.onEnterKey)),t&&(this.a11y.makeElFocusable(t),this.a11y.addElRole(t,\"button\"),this.a11y.addElLabel(t,i.prevSlideMessage),t.on(\"keydown\",this.a11y.onEnterKey)),this.pagination&&this.params.pagination.clickable&&this.pagination.bullets&&this.pagination.bullets.length&&this.pagination.$el.on(\"keydown\",\".\"+this.params.pagination.bulletClass,this.a11y.onEnterKey)},destroy:function(){var e,t;this.a11y.liveRegion&&this.a11y.liveRegion.length>0&&this.a11y.liveRegion.remove(),this.navigation&&this.navigation.$nextEl&&(e=this.navigation.$nextEl),this.navigation&&this.navigation.$prevEl&&(t=this.navigation.$prevEl),e&&e.off(\"keydown\",this.a11y.onEnterKey),t&&t.off(\"keydown\",this.a11y.onEnterKey),this.pagination&&this.params.pagination.clickable&&this.pagination.bullets&&this.pagination.bullets.length&&this.pagination.$el.off(\"keydown\",\".\"+this.params.pagination.bulletClass,this.a11y.onEnterKey)}},ve={init:function(){if(this.params.history){if(!a.history||!a.history.pushState)return this.params.history.enabled=!1,void(this.params.hashNavigation.enabled=!0);var e=this.history;e.initialized=!0,e.paths=ve.getPathValues(),(e.paths.key||e.paths.value)&&(e.scrollToSlide(0,e.paths.value,this.params.runCallbacksOnInit),this.params.history.replaceState||a.addEventListener(\"popstate\",this.history.setHistoryPopState))}},destroy:function(){this.params.history.replaceState||a.removeEventListener(\"popstate\",this.history.setHistoryPopState)},setHistoryPopState:function(){this.history.paths=ve.getPathValues(),this.history.scrollToSlide(this.params.speed,this.history.paths.value,!1)},getPathValues:function(){var e=a.location.pathname.slice(1).split(\"/\").filter((function(e){return\"\"!==e})),t=e.length;return{key:e[t-2],value:e[t-1]}},setHistory:function(e,t){if(this.history.initialized&&this.params.history.enabled){var i=this.slides.eq(t),s=ve.slugify(i.attr(\"data-history\"));a.location.pathname.includes(e)||(s=e+\"/\"+s);var r=a.history.state;r&&r.value===s||(this.params.history.replaceState?a.history.replaceState({value:s},null,s):a.history.pushState({value:s},null,s))}},slugify:function(e){return e.toString().replace(/\\s+/g,\"-\").replace(/[^\\w-]+/g,\"\").replace(/--+/g,\"-\").replace(/^-+/,\"\").replace(/-+$/,\"\")},scrollToSlide:function(e,t,i){if(t)for(var s=0,a=this.slides.length;s<a;s+=1){var r=this.slides.eq(s);if(ve.slugify(r.attr(\"data-history\"))===t&&!r.hasClass(this.params.slideDuplicateClass)){var n=r.index();this.slideTo(n,e,i)}}else this.slideTo(0,e,i)}},fe={onHashCange:function(){this.emit(\"hashChange\");var e=i.location.hash.replace(\"#\",\"\");if(e!==this.slides.eq(this.activeIndex).attr(\"data-hash\")){var t=this.$wrapperEl.children(\".\"+this.params.slideClass+'[data-hash=\"'+e+'\"]').index();if(void 0===t)return;this.slideTo(t)}},setHash:function(){if(this.hashNavigation.initialized&&this.params.hashNavigation.enabled)if(this.params.hashNavigation.replaceState&&a.history&&a.history.replaceState)a.history.replaceState(null,null,\"#\"+this.slides.eq(this.activeIndex).attr(\"data-hash\")||\"\"),this.emit(\"hashSet\");else{var e=this.slides.eq(this.activeIndex),t=e.attr(\"data-hash\")||e.attr(\"data-history\");i.location.hash=t||\"\",this.emit(\"hashSet\")}},init:function(){if(!(!this.params.hashNavigation.enabled||this.params.history&&this.params.history.enabled)){this.hashNavigation.initialized=!0;var e=i.location.hash.replace(\"#\",\"\");if(e)for(var t=0,s=this.slides.length;t<s;t+=1){var r=this.slides.eq(t);if((r.attr(\"data-hash\")||r.attr(\"data-history\"))===e&&!r.hasClass(this.params.slideDuplicateClass)){var o=r.index();this.slideTo(o,0,this.params.runCallbacksOnInit,!0)}}this.params.hashNavigation.watchState&&n(a).on(\"hashchange\",this.hashNavigation.onHashCange)}},destroy:function(){this.params.hashNavigation.watchState&&n(a).off(\"hashchange\",this.hashNavigation.onHashCange)}},me={run:function(){var e=this,t=e.slides.eq(e.activeIndex),i=e.params.autoplay.delay;t.attr(\"data-swiper-autoplay\")&&(i=t.attr(\"data-swiper-autoplay\")||e.params.autoplay.delay),clearTimeout(e.autoplay.timeout),e.autoplay.timeout=d.nextTick((function(){e.params.autoplay.reverseDirection?e.params.loop?(e.loopFix(),e.slidePrev(e.params.speed,!0,!0),e.emit(\"autoplay\")):e.isBeginning?e.params.autoplay.stopOnLastSlide?e.autoplay.stop():(e.slideTo(e.slides.length-1,e.params.speed,!0,!0),e.emit(\"autoplay\")):(e.slidePrev(e.params.speed,!0,!0),e.emit(\"autoplay\")):e.params.loop?(e.loopFix(),e.slideNext(e.params.speed,!0,!0),e.emit(\"autoplay\")):e.isEnd?e.params.autoplay.stopOnLastSlide?e.autoplay.stop():(e.slideTo(0,e.params.speed,!0,!0),e.emit(\"autoplay\")):(e.slideNext(e.params.speed,!0,!0),e.emit(\"autoplay\")),e.params.cssMode&&e.autoplay.running&&e.autoplay.run()}),i)},start:function(){return void 0===this.autoplay.timeout&&(!this.autoplay.running&&(this.autoplay.running=!0,this.emit(\"autoplayStart\"),this.autoplay.run(),!0))},stop:function(){return!!this.autoplay.running&&(void 0!==this.autoplay.timeout&&(this.autoplay.timeout&&(clearTimeout(this.autoplay.timeout),this.autoplay.timeout=void 0),this.autoplay.running=!1,this.emit(\"autoplayStop\"),!0))},pause:function(e){this.autoplay.running&&(this.autoplay.paused||(this.autoplay.timeout&&clearTimeout(this.autoplay.timeout),this.autoplay.paused=!0,0!==e&&this.params.autoplay.waitForTransition?(this.$wrapperEl[0].addEventListener(\"transitionend\",this.autoplay.onTransitionEnd),this.$wrapperEl[0].addEventListener(\"webkitTransitionEnd\",this.autoplay.onTransitionEnd)):(this.autoplay.paused=!1,this.autoplay.run())))}},ge={setTranslate:function(){for(var e=this.slides,t=0;t<e.length;t+=1){var i=this.slides.eq(t),s=-i[0].swiperSlideOffset;this.params.virtualTranslate||(s-=this.translate);var a=0;this.isHorizontal()||(a=s,s=0);var r=this.params.fadeEffect.crossFade?Math.max(1-Math.abs(i[0].progress),0):1+Math.min(Math.max(i[0].progress,-1),0);i.css({opacity:r}).transform(\"translate3d(\"+s+\"px, \"+a+\"px, 0px)\")}},setTransition:function(e){var t=this,i=t.slides,s=t.$wrapperEl;if(i.transition(e),t.params.virtualTranslate&&0!==e){var a=!1;i.transitionEnd((function(){if(!a&&t&&!t.destroyed){a=!0,t.animating=!1;for(var e=[\"webkitTransitionEnd\",\"transitionend\"],i=0;i<e.length;i+=1)s.trigger(e[i])}}))}}},be={setTranslate:function(){var e,t=this.$el,i=this.$wrapperEl,s=this.slides,a=this.width,r=this.height,o=this.rtlTranslate,l=this.size,d=this.params.cubeEffect,h=this.isHorizontal(),p=this.virtual&&this.params.virtual.enabled,c=0;d.shadow&&(h?(0===(e=i.find(\".swiper-cube-shadow\")).length&&(e=n('<div class=\"swiper-cube-shadow\"></div>'),i.append(e)),e.css({height:a+\"px\"})):0===(e=t.find(\".swiper-cube-shadow\")).length&&(e=n('<div class=\"swiper-cube-shadow\"></div>'),t.append(e)));for(var u=0;u<s.length;u+=1){var v=s.eq(u),f=u;p&&(f=parseInt(v.attr(\"data-swiper-slide-index\"),10));var m=90*f,g=Math.floor(m/360);o&&(m=-m,g=Math.floor(-m/360));var b=Math.max(Math.min(v[0].progress,1),-1),w=0,y=0,x=0;f%4==0?(w=4*-g*l,x=0):(f-1)%4==0?(w=0,x=4*-g*l):(f-2)%4==0?(w=l+4*g*l,x=l):(f-3)%4==0&&(w=-l,x=3*l+4*l*g),o&&(w=-w),h||(y=w,w=0);var E=\"rotateX(\"+(h?0:-m)+\"deg) rotateY(\"+(h?m:0)+\"deg) translate3d(\"+w+\"px, \"+y+\"px, \"+x+\"px)\";if(b<=1&&b>-1&&(c=90*f+90*b,o&&(c=90*-f-90*b)),v.transform(E),d.slideShadows){var T=h?v.find(\".swiper-slide-shadow-left\"):v.find(\".swiper-slide-shadow-top\"),S=h?v.find(\".swiper-slide-shadow-right\"):v.find(\".swiper-slide-shadow-bottom\");0===T.length&&(T=n('<div class=\"swiper-slide-shadow-'+(h?\"left\":\"top\")+'\"></div>'),v.append(T)),0===S.length&&(S=n('<div class=\"swiper-slide-shadow-'+(h?\"right\":\"bottom\")+'\"></div>'),v.append(S)),T.length&&(T[0].style.opacity=Math.max(-b,0)),S.length&&(S[0].style.opacity=Math.max(b,0))}}if(i.css({\"-webkit-transform-origin\":\"50% 50% -\"+l/2+\"px\",\"-moz-transform-origin\":\"50% 50% -\"+l/2+\"px\",\"-ms-transform-origin\":\"50% 50% -\"+l/2+\"px\",\"transform-origin\":\"50% 50% -\"+l/2+\"px\"}),d.shadow)if(h)e.transform(\"translate3d(0px, \"+(a/2+d.shadowOffset)+\"px, \"+-a/2+\"px) rotateX(90deg) rotateZ(0deg) scale(\"+d.shadowScale+\")\");else{var C=Math.abs(c)-90*Math.floor(Math.abs(c)/90),M=1.5-(Math.sin(2*C*Math.PI/360)/2+Math.cos(2*C*Math.PI/360)/2),P=d.shadowScale,z=d.shadowScale/M,k=d.shadowOffset;e.transform(\"scale3d(\"+P+\", 1, \"+z+\") translate3d(0px, \"+(r/2+k)+\"px, \"+-r/2/z+\"px) rotateX(-90deg)\")}var $=_.isSafari||_.isWebView?-l/2:0;i.transform(\"translate3d(0px,0,\"+$+\"px) rotateX(\"+(this.isHorizontal()?0:c)+\"deg) rotateY(\"+(this.isHorizontal()?-c:0)+\"deg)\")},setTransition:function(e){var t=this.$el;this.slides.transition(e).find(\".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left\").transition(e),this.params.cubeEffect.shadow&&!this.isHorizontal()&&t.find(\".swiper-cube-shadow\").transition(e)}},we={setTranslate:function(){for(var e=this.slides,t=this.rtlTranslate,i=0;i<e.length;i+=1){var s=e.eq(i),a=s[0].progress;this.params.flipEffect.limitRotation&&(a=Math.max(Math.min(s[0].progress,1),-1));var r=-180*a,o=0,l=-s[0].swiperSlideOffset,d=0;if(this.isHorizontal()?t&&(r=-r):(d=l,l=0,o=-r,r=0),s[0].style.zIndex=-Math.abs(Math.round(a))+e.length,this.params.flipEffect.slideShadows){var h=this.isHorizontal()?s.find(\".swiper-slide-shadow-left\"):s.find(\".swiper-slide-shadow-top\"),p=this.isHorizontal()?s.find(\".swiper-slide-shadow-right\"):s.find(\".swiper-slide-shadow-bottom\");0===h.length&&(h=n('<div class=\"swiper-slide-shadow-'+(this.isHorizontal()?\"left\":\"top\")+'\"></div>'),s.append(h)),0===p.length&&(p=n('<div class=\"swiper-slide-shadow-'+(this.isHorizontal()?\"right\":\"bottom\")+'\"></div>'),s.append(p)),h.length&&(h[0].style.opacity=Math.max(-a,0)),p.length&&(p[0].style.opacity=Math.max(a,0))}s.transform(\"translate3d(\"+l+\"px, \"+d+\"px, 0px) rotateX(\"+o+\"deg) rotateY(\"+r+\"deg)\")}},setTransition:function(e){var t=this,i=t.slides,s=t.activeIndex,a=t.$wrapperEl;if(i.transition(e).find(\".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left\").transition(e),t.params.virtualTranslate&&0!==e){var r=!1;i.eq(s).transitionEnd((function(){if(!r&&t&&!t.destroyed){r=!0,t.animating=!1;for(var e=[\"webkitTransitionEnd\",\"transitionend\"],i=0;i<e.length;i+=1)a.trigger(e[i])}}))}}},ye={setTranslate:function(){for(var e=this.width,t=this.height,i=this.slides,s=this.$wrapperEl,a=this.slidesSizesGrid,r=this.params.coverflowEffect,o=this.isHorizontal(),l=this.translate,d=o?e/2-l:t/2-l,p=o?r.rotate:-r.rotate,c=r.depth,u=0,v=i.length;u<v;u+=1){var f=i.eq(u),m=a[u],g=(d-f[0].swiperSlideOffset-m/2)/m*r.modifier,b=o?p*g:0,w=o?0:p*g,y=-c*Math.abs(g),x=r.stretch;\"string\"==typeof x&&-1!==x.indexOf(\"%\")&&(x=parseFloat(r.stretch)/100*m);var E=o?0:x*g,T=o?x*g:0,S=1-(1-r.scale)*Math.abs(g);Math.abs(T)<.001&&(T=0),Math.abs(E)<.001&&(E=0),Math.abs(y)<.001&&(y=0),Math.abs(b)<.001&&(b=0),Math.abs(w)<.001&&(w=0),Math.abs(S)<.001&&(S=0);var C=\"translate3d(\"+T+\"px,\"+E+\"px,\"+y+\"px)  rotateX(\"+w+\"deg) rotateY(\"+b+\"deg) scale(\"+S+\")\";if(f.transform(C),f[0].style.zIndex=1-Math.abs(Math.round(g)),r.slideShadows){var M=o?f.find(\".swiper-slide-shadow-left\"):f.find(\".swiper-slide-shadow-top\"),P=o?f.find(\".swiper-slide-shadow-right\"):f.find(\".swiper-slide-shadow-bottom\");0===M.length&&(M=n('<div class=\"swiper-slide-shadow-'+(o?\"left\":\"top\")+'\"></div>'),f.append(M)),0===P.length&&(P=n('<div class=\"swiper-slide-shadow-'+(o?\"right\":\"bottom\")+'\"></div>'),f.append(P)),M.length&&(M[0].style.opacity=g>0?g:0),P.length&&(P[0].style.opacity=-g>0?-g:0)}}(h.pointerEvents||h.prefixedPointerEvents)&&(s[0].style.perspectiveOrigin=d+\"px 50%\")},setTransition:function(e){this.slides.transition(e).find(\".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left\").transition(e)}},xe={init:function(){var e=this.params.thumbs,t=this.constructor;e.swiper instanceof t?(this.thumbs.swiper=e.swiper,d.extend(this.thumbs.swiper.originalParams,{watchSlidesProgress:!0,slideToClickedSlide:!1}),d.extend(this.thumbs.swiper.params,{watchSlidesProgress:!0,slideToClickedSlide:!1})):d.isObject(e.swiper)&&(this.thumbs.swiper=new t(d.extend({},e.swiper,{watchSlidesVisibility:!0,watchSlidesProgress:!0,slideToClickedSlide:!1})),this.thumbs.swiperCreated=!0),this.thumbs.swiper.$el.addClass(this.params.thumbs.thumbsContainerClass),this.thumbs.swiper.on(\"tap\",this.thumbs.onThumbClick)},onThumbClick:function(){var e=this.thumbs.swiper;if(e){var t=e.clickedIndex,i=e.clickedSlide;if(!(i&&n(i).hasClass(this.params.thumbs.slideThumbActiveClass)||null==t)){var s;if(s=e.params.loop?parseInt(n(e.clickedSlide).attr(\"data-swiper-slide-index\"),10):t,this.params.loop){var a=this.activeIndex;this.slides.eq(a).hasClass(this.params.slideDuplicateClass)&&(this.loopFix(),this._clientLeft=this.$wrapperEl[0].clientLeft,a=this.activeIndex);var r=this.slides.eq(a).prevAll('[data-swiper-slide-index=\"'+s+'\"]').eq(0).index(),o=this.slides.eq(a).nextAll('[data-swiper-slide-index=\"'+s+'\"]').eq(0).index();s=void 0===r?o:void 0===o?r:o-a<a-r?o:r}this.slideTo(s)}}},update:function(e){var t=this.thumbs.swiper;if(t){var i=\"auto\"===t.params.slidesPerView?t.slidesPerViewDynamic():t.params.slidesPerView,s=this.params.thumbs.autoScrollOffset,a=s&&!t.params.loop;if(this.realIndex!==t.realIndex||a){var r,n,o=t.activeIndex;if(t.params.loop){t.slides.eq(o).hasClass(t.params.slideDuplicateClass)&&(t.loopFix(),t._clientLeft=t.$wrapperEl[0].clientLeft,o=t.activeIndex);var l=t.slides.eq(o).prevAll('[data-swiper-slide-index=\"'+this.realIndex+'\"]').eq(0).index(),d=t.slides.eq(o).nextAll('[data-swiper-slide-index=\"'+this.realIndex+'\"]').eq(0).index();r=void 0===l?d:void 0===d?l:d-o==o-l?o:d-o<o-l?d:l,n=this.activeIndex>this.previousIndex?\"next\":\"prev\"}else n=(r=this.realIndex)>this.previousIndex?\"next\":\"prev\";a&&(r+=\"next\"===n?s:-1*s),t.visibleSlidesIndexes&&t.visibleSlidesIndexes.indexOf(r)<0&&(t.params.centeredSlides?r=r>o?r-Math.floor(i/2)+1:r+Math.floor(i/2)-1:r>o&&(r=r-i+1),t.slideTo(r,e?0:void 0))}var h=1,p=this.params.thumbs.slideThumbActiveClass;if(this.params.slidesPerView>1&&!this.params.centeredSlides&&(h=this.params.slidesPerView),this.params.thumbs.multipleActiveThumbs||(h=1),h=Math.floor(h),t.slides.removeClass(p),t.params.loop||t.params.virtual&&t.params.virtual.enabled)for(var c=0;c<h;c+=1)t.$wrapperEl.children('[data-swiper-slide-index=\"'+(this.realIndex+c)+'\"]').addClass(p);else for(var u=0;u<h;u+=1)t.slides.eq(this.realIndex+u).addClass(p)}}},Ee=[K,U,Z,Q,ee,ie,ae,{name:\"mousewheel\",params:{mousewheel:{enabled:!1,releaseOnEdges:!1,invert:!1,forceToAxis:!1,sensitivity:1,eventsTarged:\"container\"}},create:function(){d.extend(this,{mousewheel:{enabled:!1,enable:re.enable.bind(this),disable:re.disable.bind(this),handle:re.handle.bind(this),handleMouseEnter:re.handleMouseEnter.bind(this),handleMouseLeave:re.handleMouseLeave.bind(this),animateSlider:re.animateSlider.bind(this),releaseScroll:re.releaseScroll.bind(this),lastScrollTime:d.now(),lastEventBeforeSnap:void 0,recentWheelEvents:[]}})},on:{init:function(){!this.params.mousewheel.enabled&&this.params.cssMode&&this.mousewheel.disable(),this.params.mousewheel.enabled&&this.mousewheel.enable()},destroy:function(){this.params.cssMode&&this.mousewheel.enable(),this.mousewheel.enabled&&this.mousewheel.disable()}}},{name:\"navigation\",params:{navigation:{nextEl:null,prevEl:null,hideOnClick:!1,disabledClass:\"swiper-button-disabled\",hiddenClass:\"swiper-button-hidden\",lockClass:\"swiper-button-lock\"}},create:function(){d.extend(this,{navigation:{init:ne.init.bind(this),update:ne.update.bind(this),destroy:ne.destroy.bind(this),onNextClick:ne.onNextClick.bind(this),onPrevClick:ne.onPrevClick.bind(this)}})},on:{init:function(){this.navigation.init(),this.navigation.update()},toEdge:function(){this.navigation.update()},fromEdge:function(){this.navigation.update()},destroy:function(){this.navigation.destroy()},click:function(e){var t,i=this.navigation,s=i.$nextEl,a=i.$prevEl;!this.params.navigation.hideOnClick||n(e.target).is(a)||n(e.target).is(s)||(s?t=s.hasClass(this.params.navigation.hiddenClass):a&&(t=a.hasClass(this.params.navigation.hiddenClass)),!0===t?this.emit(\"navigationShow\",this):this.emit(\"navigationHide\",this),s&&s.toggleClass(this.params.navigation.hiddenClass),a&&a.toggleClass(this.params.navigation.hiddenClass))}}},{name:\"pagination\",params:{pagination:{el:null,bulletElement:\"span\",clickable:!1,hideOnClick:!1,renderBullet:null,renderProgressbar:null,renderFraction:null,renderCustom:null,progressbarOpposite:!1,type:\"bullets\",dynamicBullets:!1,dynamicMainBullets:1,formatFractionCurrent:function(e){return e},formatFractionTotal:function(e){return e},bulletClass:\"swiper-pagination-bullet\",bulletActiveClass:\"swiper-pagination-bullet-active\",modifierClass:\"swiper-pagination-\",currentClass:\"swiper-pagination-current\",totalClass:\"swiper-pagination-total\",hiddenClass:\"swiper-pagination-hidden\",progressbarFillClass:\"swiper-pagination-progressbar-fill\",progressbarOppositeClass:\"swiper-pagination-progressbar-opposite\",clickableClass:\"swiper-pagination-clickable\",lockClass:\"swiper-pagination-lock\"}},create:function(){d.extend(this,{pagination:{init:oe.init.bind(this),render:oe.render.bind(this),update:oe.update.bind(this),destroy:oe.destroy.bind(this),dynamicBulletIndex:0}})},on:{init:function(){this.pagination.init(),this.pagination.render(),this.pagination.update()},activeIndexChange:function(){(this.params.loop||void 0===this.snapIndex)&&this.pagination.update()},snapIndexChange:function(){this.params.loop||this.pagination.update()},slidesLengthChange:function(){this.params.loop&&(this.pagination.render(),this.pagination.update())},snapGridLengthChange:function(){this.params.loop||(this.pagination.render(),this.pagination.update())},destroy:function(){this.pagination.destroy()},click:function(e){this.params.pagination.el&&this.params.pagination.hideOnClick&&this.pagination.$el.length>0&&!n(e.target).hasClass(this.params.pagination.bulletClass)&&(!0===this.pagination.$el.hasClass(this.params.pagination.hiddenClass)?this.emit(\"paginationShow\",this):this.emit(\"paginationHide\",this),this.pagination.$el.toggleClass(this.params.pagination.hiddenClass))}}},{name:\"scrollbar\",params:{scrollbar:{el:null,dragSize:\"auto\",hide:!1,draggable:!1,snapOnRelease:!0,lockClass:\"swiper-scrollbar-lock\",dragClass:\"swiper-scrollbar-drag\"}},create:function(){d.extend(this,{scrollbar:{init:le.init.bind(this),destroy:le.destroy.bind(this),updateSize:le.updateSize.bind(this),setTranslate:le.setTranslate.bind(this),setTransition:le.setTransition.bind(this),enableDraggable:le.enableDraggable.bind(this),disableDraggable:le.disableDraggable.bind(this),setDragPosition:le.setDragPosition.bind(this),getPointerPosition:le.getPointerPosition.bind(this),onDragStart:le.onDragStart.bind(this),onDragMove:le.onDragMove.bind(this),onDragEnd:le.onDragEnd.bind(this),isTouched:!1,timeout:null,dragTimeout:null}})},on:{init:function(){this.scrollbar.init(),this.scrollbar.updateSize(),this.scrollbar.setTranslate()},update:function(){this.scrollbar.updateSize()},resize:function(){this.scrollbar.updateSize()},observerUpdate:function(){this.scrollbar.updateSize()},setTranslate:function(){this.scrollbar.setTranslate()},setTransition:function(e){this.scrollbar.setTransition(e)},destroy:function(){this.scrollbar.destroy()}}},{name:\"parallax\",params:{parallax:{enabled:!1}},create:function(){d.extend(this,{parallax:{setTransform:de.setTransform.bind(this),setTranslate:de.setTranslate.bind(this),setTransition:de.setTransition.bind(this)}})},on:{beforeInit:function(){this.params.parallax.enabled&&(this.params.watchSlidesProgress=!0,this.originalParams.watchSlidesProgress=!0)},init:function(){this.params.parallax.enabled&&this.parallax.setTranslate()},setTranslate:function(){this.params.parallax.enabled&&this.parallax.setTranslate()},setTransition:function(e){this.params.parallax.enabled&&this.parallax.setTransition(e)}}},{name:\"zoom\",params:{zoom:{enabled:!1,maxRatio:3,minRatio:1,toggle:!0,containerClass:\"swiper-zoom-container\",zoomedSlideClass:\"swiper-slide-zoomed\"}},create:function(){var e=this,t={enabled:!1,scale:1,currentScale:1,isScaling:!1,gesture:{$slideEl:void 0,slideWidth:void 0,slideHeight:void 0,$imageEl:void 0,$imageWrapEl:void 0,maxRatio:3},image:{isTouched:void 0,isMoved:void 0,currentX:void 0,currentY:void 0,minX:void 0,minY:void 0,maxX:void 0,maxY:void 0,width:void 0,height:void 0,startX:void 0,startY:void 0,touchesStart:{},touchesCurrent:{}},velocity:{x:void 0,y:void 0,prevPositionX:void 0,prevPositionY:void 0,prevTime:void 0}};\"onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out\".split(\" \").forEach((function(i){t[i]=he[i].bind(e)})),d.extend(e,{zoom:t});var i=1;Object.defineProperty(e.zoom,\"scale\",{get:function(){return i},set:function(t){if(i!==t){var s=e.zoom.gesture.$imageEl?e.zoom.gesture.$imageEl[0]:void 0,a=e.zoom.gesture.$slideEl?e.zoom.gesture.$slideEl[0]:void 0;e.emit(\"zoomChange\",t,s,a)}i=t}})},on:{init:function(){this.params.zoom.enabled&&this.zoom.enable()},destroy:function(){this.zoom.disable()},touchStart:function(e){this.zoom.enabled&&this.zoom.onTouchStart(e)},touchEnd:function(e){this.zoom.enabled&&this.zoom.onTouchEnd(e)},doubleTap:function(e){this.params.zoom.enabled&&this.zoom.enabled&&this.params.zoom.toggle&&this.zoom.toggle(e)},transitionEnd:function(){this.zoom.enabled&&this.params.zoom.enabled&&this.zoom.onTransitionEnd()},slideChange:function(){this.zoom.enabled&&this.params.zoom.enabled&&this.params.cssMode&&this.zoom.onTransitionEnd()}}},{name:\"lazy\",params:{lazy:{enabled:!1,loadPrevNext:!1,loadPrevNextAmount:1,loadOnTransitionStart:!1,elementClass:\"swiper-lazy\",loadingClass:\"swiper-lazy-loading\",loadedClass:\"swiper-lazy-loaded\",preloaderClass:\"swiper-lazy-preloader\"}},create:function(){d.extend(this,{lazy:{initialImageLoaded:!1,load:pe.load.bind(this),loadInSlide:pe.loadInSlide.bind(this)}})},on:{beforeInit:function(){this.params.lazy.enabled&&this.params.preloadImages&&(this.params.preloadImages=!1)},init:function(){this.params.lazy.enabled&&!this.params.loop&&0===this.params.initialSlide&&this.lazy.load()},scroll:function(){this.params.freeMode&&!this.params.freeModeSticky&&this.lazy.load()},resize:function(){this.params.lazy.enabled&&this.lazy.load()},scrollbarDragMove:function(){this.params.lazy.enabled&&this.lazy.load()},transitionStart:function(){this.params.lazy.enabled&&(this.params.lazy.loadOnTransitionStart||!this.params.lazy.loadOnTransitionStart&&!this.lazy.initialImageLoaded)&&this.lazy.load()},transitionEnd:function(){this.params.lazy.enabled&&!this.params.lazy.loadOnTransitionStart&&this.lazy.load()},slideChange:function(){this.params.lazy.enabled&&this.params.cssMode&&this.lazy.load()}}},{name:\"controller\",params:{controller:{control:void 0,inverse:!1,by:\"slide\"}},create:function(){d.extend(this,{controller:{control:this.params.controller.control,getInterpolateFunction:ce.getInterpolateFunction.bind(this),setTranslate:ce.setTranslate.bind(this),setTransition:ce.setTransition.bind(this)}})},on:{update:function(){this.controller.control&&this.controller.spline&&(this.controller.spline=void 0,delete this.controller.spline)},resize:function(){this.controller.control&&this.controller.spline&&(this.controller.spline=void 0,delete this.controller.spline)},observerUpdate:function(){this.controller.control&&this.controller.spline&&(this.controller.spline=void 0,delete this.controller.spline)},setTranslate:function(e,t){this.controller.control&&this.controller.setTranslate(e,t)},setTransition:function(e,t){this.controller.control&&this.controller.setTransition(e,t)}}},{name:\"a11y\",params:{a11y:{enabled:!0,notificationClass:\"swiper-notification\",prevSlideMessage:\"Previous slide\",nextSlideMessage:\"Next slide\",firstSlideMessage:\"This is the first slide\",lastSlideMessage:\"This is the last slide\",paginationBulletMessage:\"Go to slide {{index}}\"}},create:function(){var e=this;d.extend(e,{a11y:{liveRegion:n('<span class=\"'+e.params.a11y.notificationClass+'\" aria-live=\"assertive\" aria-atomic=\"true\"></span>')}}),Object.keys(ue).forEach((function(t){e.a11y[t]=ue[t].bind(e)}))},on:{init:function(){this.params.a11y.enabled&&(this.a11y.init(),this.a11y.updateNavigation())},toEdge:function(){this.params.a11y.enabled&&this.a11y.updateNavigation()},fromEdge:function(){this.params.a11y.enabled&&this.a11y.updateNavigation()},paginationUpdate:function(){this.params.a11y.enabled&&this.a11y.updatePagination()},destroy:function(){this.params.a11y.enabled&&this.a11y.destroy()}}},{name:\"history\",params:{history:{enabled:!1,replaceState:!1,key:\"slides\"}},create:function(){d.extend(this,{history:{init:ve.init.bind(this),setHistory:ve.setHistory.bind(this),setHistoryPopState:ve.setHistoryPopState.bind(this),scrollToSlide:ve.scrollToSlide.bind(this),destroy:ve.destroy.bind(this)}})},on:{init:function(){this.params.history.enabled&&this.history.init()},destroy:function(){this.params.history.enabled&&this.history.destroy()},transitionEnd:function(){this.history.initialized&&this.history.setHistory(this.params.history.key,this.activeIndex)},slideChange:function(){this.history.initialized&&this.params.cssMode&&this.history.setHistory(this.params.history.key,this.activeIndex)}}},{name:\"hash-navigation\",params:{hashNavigation:{enabled:!1,replaceState:!1,watchState:!1}},create:function(){d.extend(this,{hashNavigation:{initialized:!1,init:fe.init.bind(this),destroy:fe.destroy.bind(this),setHash:fe.setHash.bind(this),onHashCange:fe.onHashCange.bind(this)}})},on:{init:function(){this.params.hashNavigation.enabled&&this.hashNavigation.init()},destroy:function(){this.params.hashNavigation.enabled&&this.hashNavigation.destroy()},transitionEnd:function(){this.hashNavigation.initialized&&this.hashNavigation.setHash()},slideChange:function(){this.hashNavigation.initialized&&this.params.cssMode&&this.hashNavigation.setHash()}}},{name:\"autoplay\",params:{autoplay:{enabled:!1,delay:3e3,waitForTransition:!0,disableOnInteraction:!0,stopOnLastSlide:!1,reverseDirection:!1}},create:function(){var e=this;d.extend(e,{autoplay:{running:!1,paused:!1,run:me.run.bind(e),start:me.start.bind(e),stop:me.stop.bind(e),pause:me.pause.bind(e),onVisibilityChange:function(){\"hidden\"===document.visibilityState&&e.autoplay.running&&e.autoplay.pause(),\"visible\"===document.visibilityState&&e.autoplay.paused&&(e.autoplay.run(),e.autoplay.paused=!1)},onTransitionEnd:function(t){e&&!e.destroyed&&e.$wrapperEl&&t.target===this&&(e.$wrapperEl[0].removeEventListener(\"transitionend\",e.autoplay.onTransitionEnd),e.$wrapperEl[0].removeEventListener(\"webkitTransitionEnd\",e.autoplay.onTransitionEnd),e.autoplay.paused=!1,e.autoplay.running?e.autoplay.run():e.autoplay.stop())}}})},on:{init:function(){this.params.autoplay.enabled&&(this.autoplay.start(),document.addEventListener(\"visibilitychange\",this.autoplay.onVisibilityChange))},beforeTransitionStart:function(e,t){this.autoplay.running&&(t||!this.params.autoplay.disableOnInteraction?this.autoplay.pause(e):this.autoplay.stop())},sliderFirstMove:function(){this.autoplay.running&&(this.params.autoplay.disableOnInteraction?this.autoplay.stop():this.autoplay.pause())},touchEnd:function(){this.params.cssMode&&this.autoplay.paused&&!this.params.autoplay.disableOnInteraction&&this.autoplay.run()},destroy:function(){this.autoplay.running&&this.autoplay.stop(),document.removeEventListener(\"visibilitychange\",this.autoplay.onVisibilityChange)}}},{name:\"effect-fade\",params:{fadeEffect:{crossFade:!1}},create:function(){d.extend(this,{fadeEffect:{setTranslate:ge.setTranslate.bind(this),setTransition:ge.setTransition.bind(this)}})},on:{beforeInit:function(){if(\"fade\"===this.params.effect){this.classNames.push(this.params.containerModifierClass+\"fade\");var e={slidesPerView:1,slidesPerColumn:1,slidesPerGroup:1,watchSlidesProgress:!0,spaceBetween:0,virtualTranslate:!0};d.extend(this.params,e),d.extend(this.originalParams,e)}},setTranslate:function(){\"fade\"===this.params.effect&&this.fadeEffect.setTranslate()},setTransition:function(e){\"fade\"===this.params.effect&&this.fadeEffect.setTransition(e)}}},{name:\"effect-cube\",params:{cubeEffect:{slideShadows:!0,shadow:!0,shadowOffset:20,shadowScale:.94}},create:function(){d.extend(this,{cubeEffect:{setTranslate:be.setTranslate.bind(this),setTransition:be.setTransition.bind(this)}})},on:{beforeInit:function(){if(\"cube\"===this.params.effect){this.classNames.push(this.params.containerModifierClass+\"cube\"),this.classNames.push(this.params.containerModifierClass+\"3d\");var e={slidesPerView:1,slidesPerColumn:1,slidesPerGroup:1,watchSlidesProgress:!0,resistanceRatio:0,spaceBetween:0,centeredSlides:!1,virtualTranslate:!0};d.extend(this.params,e),d.extend(this.originalParams,e)}},setTranslate:function(){\"cube\"===this.params.effect&&this.cubeEffect.setTranslate()},setTransition:function(e){\"cube\"===this.params.effect&&this.cubeEffect.setTransition(e)}}},{name:\"effect-flip\",params:{flipEffect:{slideShadows:!0,limitRotation:!0}},create:function(){d.extend(this,{flipEffect:{setTranslate:we.setTranslate.bind(this),setTransition:we.setTransition.bind(this)}})},on:{beforeInit:function(){if(\"flip\"===this.params.effect){this.classNames.push(this.params.containerModifierClass+\"flip\"),this.classNames.push(this.params.containerModifierClass+\"3d\");var e={slidesPerView:1,slidesPerColumn:1,slidesPerGroup:1,watchSlidesProgress:!0,spaceBetween:0,virtualTranslate:!0};d.extend(this.params,e),d.extend(this.originalParams,e)}},setTranslate:function(){\"flip\"===this.params.effect&&this.flipEffect.setTranslate()},setTransition:function(e){\"flip\"===this.params.effect&&this.flipEffect.setTransition(e)}}},{name:\"effect-coverflow\",params:{coverflowEffect:{rotate:50,stretch:0,depth:100,scale:1,modifier:1,slideShadows:!0}},create:function(){d.extend(this,{coverflowEffect:{setTranslate:ye.setTranslate.bind(this),setTransition:ye.setTransition.bind(this)}})},on:{beforeInit:function(){\"coverflow\"===this.params.effect&&(this.classNames.push(this.params.containerModifierClass+\"coverflow\"),this.classNames.push(this.params.containerModifierClass+\"3d\"),this.params.watchSlidesProgress=!0,this.originalParams.watchSlidesProgress=!0)},setTranslate:function(){\"coverflow\"===this.params.effect&&this.coverflowEffect.setTranslate()},setTransition:function(e){\"coverflow\"===this.params.effect&&this.coverflowEffect.setTransition(e)}}},{name:\"thumbs\",params:{thumbs:{swiper:null,multipleActiveThumbs:!0,autoScrollOffset:0,slideThumbActiveClass:\"swiper-slide-thumb-active\",thumbsContainerClass:\"swiper-container-thumbs\"}},create:function(){d.extend(this,{thumbs:{swiper:null,init:xe.init.bind(this),update:xe.update.bind(this),onThumbClick:xe.onThumbClick.bind(this)}})},on:{beforeInit:function(){var e=this.params.thumbs;e&&e.swiper&&(this.thumbs.init(),this.thumbs.update(!0))},slideChange:function(){this.thumbs.swiper&&this.thumbs.update()},update:function(){this.thumbs.swiper&&this.thumbs.update()},resize:function(){this.thumbs.swiper&&this.thumbs.update()},observerUpdate:function(){this.thumbs.swiper&&this.thumbs.update()},setTransition:function(e){var t=this.thumbs.swiper;t&&t.setTransition(e)},beforeDestroy:function(){var e=this.thumbs.swiper;e&&this.thumbs.swiperCreated&&e&&e.destroy()}}}];return void 0===j.use&&(j.use=j.Class.use,j.installModule=j.Class.installModule),j.use(Ee),j}));\n//# sourceMappingURL=swiper.min.js.map\n","Amasty_ShopbyBase/js/chosen/chosen.jquery.js":"// phpcs:ignoreFile\n/* eslint-disable */\n/*!\nChosen, a Select Box Enhancer for jQuery and Prototype\nby Patrick Filler for Harvest, http://getharvest.com\n\nVersion 1.8.7\nFull source at https://github.com/harvesthq/chosen\nCopyright (c) 2011-2018 Harvest http://getharvest.com\n\nMIT License, https://github.com/harvesthq/chosen/blob/master/LICENSE.md\nThis file is generated by `grunt build`, do not edit it by hand.\n*/\ndefine([\n  \"jquery\"\n], function (jQuery) {\n    (function() {\n        var $, AbstractChosen, Chosen, SelectParser,\n            bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n            extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n            hasProp = {}.hasOwnProperty;\n\n        SelectParser = (function() {\n            function SelectParser() {\n                this.options_index = 0;\n                this.parsed = [];\n            }\n\n            SelectParser.prototype.add_node = function(child) {\n                if (child.nodeName.toUpperCase() === \"OPTGROUP\") {\n                    return this.add_group(child);\n                } else {\n                    return this.add_option(child);\n                }\n            };\n\n            SelectParser.prototype.add_group = function(group) {\n                var group_position, i, len, option, ref, results1;\n                group_position = this.parsed.length;\n                this.parsed.push({\n                    array_index: group_position,\n                    group: true,\n                    label: group.label,\n                    title: group.title ? group.title : void 0,\n                    children: 0,\n                    disabled: group.disabled,\n                    classes: group.className\n                });\n                ref = group.childNodes;\n                results1 = [];\n                for (i = 0, len = ref.length; i < len; i++) {\n                    option = ref[i];\n                    results1.push(this.add_option(option, group_position, group.disabled));\n                }\n                return results1;\n            };\n\n            SelectParser.prototype.add_option = function(option, group_position, group_disabled) {\n                if (option.nodeName.toUpperCase() === \"OPTION\") {\n                    if (option.text !== \"\") {\n                        if (group_position != null) {\n                            this.parsed[group_position].children += 1;\n                        }\n                        this.parsed.push({\n                            array_index: this.parsed.length,\n                            options_index: this.options_index,\n                            value: option.value,\n                            text: option.text,\n                            html: option.innerHTML,\n                            title: option.title ? option.title : void 0,\n                            selected: option.selected,\n                            disabled: group_disabled === true ? group_disabled : option.disabled,\n                            group_array_index: group_position,\n                            group_label: group_position != null ? this.parsed[group_position].label : null,\n                            classes: option.className,\n                            style: option.style.cssText\n                        });\n                    } else {\n                        this.parsed.push({\n                            array_index: this.parsed.length,\n                            options_index: this.options_index,\n                            empty: true\n                        });\n                    }\n                    return this.options_index += 1;\n                }\n            };\n\n            return SelectParser;\n\n        })();\n\n        SelectParser.select_to_array = function(select) {\n            var child, i, len, parser, ref;\n            parser = new SelectParser();\n            ref = select.childNodes;\n            for (i = 0, len = ref.length; i < len; i++) {\n                child = ref[i];\n                parser.add_node(child);\n            }\n            return parser.parsed;\n        };\n\n        AbstractChosen = (function() {\n            function AbstractChosen(form_field, options1) {\n                this.form_field = form_field;\n                this.options = options1 != null ? options1 : {};\n                this.label_click_handler = bind(this.label_click_handler, this);\n                if (!AbstractChosen.browser_is_supported()) {\n                    return;\n                }\n                this.is_multiple = this.form_field.multiple;\n                this.set_default_text();\n                this.set_default_values();\n                this.setup();\n                this.set_up_html();\n                this.register_observers();\n                this.on_ready();\n            }\n\n            AbstractChosen.prototype.set_default_values = function() {\n                this.click_test_action = (function(_this) {\n                    return function(evt) {\n                        return _this.test_active_click(evt);\n                    };\n                })(this);\n                this.activate_action = (function(_this) {\n                    return function(evt) {\n                        return _this.activate_field(evt);\n                    };\n                })(this);\n                this.active_field = false;\n                this.mouse_on_container = false;\n                this.results_showing = false;\n                this.result_highlighted = null;\n                this.is_rtl = this.options.rtl || /\\bchosen-rtl\\b/.test(this.form_field.className);\n                this.allow_single_deselect = (this.options.allow_single_deselect != null) && (this.form_field.options[0] != null) && this.form_field.options[0].text === \"\" ? this.options.allow_single_deselect : false;\n                this.disable_search_threshold = this.options.disable_search_threshold || 0;\n                this.disable_search = this.options.disable_search || false;\n                this.enable_split_word_search = this.options.enable_split_word_search != null ? this.options.enable_split_word_search : true;\n                this.group_search = this.options.group_search != null ? this.options.group_search : true;\n                this.search_contains = this.options.search_contains || false;\n                this.single_backstroke_delete = this.options.single_backstroke_delete != null ? this.options.single_backstroke_delete : true;\n                this.max_selected_options = this.options.max_selected_options || Infinity;\n                this.inherit_select_classes = this.options.inherit_select_classes || false;\n                this.display_selected_options = this.options.display_selected_options != null ? this.options.display_selected_options : true;\n                this.display_disabled_options = this.options.display_disabled_options != null ? this.options.display_disabled_options : true;\n                this.include_group_label_in_selected = this.options.include_group_label_in_selected || false;\n                this.max_shown_results = this.options.max_shown_results || Number.POSITIVE_INFINITY;\n                this.case_sensitive_search = this.options.case_sensitive_search || false;\n                return this.hide_results_on_select = this.options.hide_results_on_select != null ? this.options.hide_results_on_select : true;\n            };\n\n            AbstractChosen.prototype.set_default_text = function() {\n                if (this.form_field.getAttribute(\"data-placeholder\")) {\n                    this.default_text = this.form_field.getAttribute(\"data-placeholder\");\n                } else if (this.is_multiple) {\n                    this.default_text = this.options.placeholder_text_multiple || this.options.placeholder_text || AbstractChosen.default_multiple_text;\n                } else {\n                    this.default_text = this.options.placeholder_text_single || this.options.placeholder_text || AbstractChosen.default_single_text;\n                }\n                this.default_text = this.escape_html(this.default_text);\n                return this.results_none_found = this.form_field.getAttribute(\"data-no_results_text\") || this.options.no_results_text || AbstractChosen.default_no_result_text;\n            };\n\n            AbstractChosen.prototype.choice_label = function(item) {\n                if (this.include_group_label_in_selected && (item.group_label != null)) {\n                    return \"<b class='group-name'>\" + (this.escape_html(item.group_label)) + \"</b>\" + item.html;\n                } else {\n                    return item.html;\n                }\n            };\n\n            AbstractChosen.prototype.mouse_enter = function() {\n                return this.mouse_on_container = true;\n            };\n\n            AbstractChosen.prototype.mouse_leave = function() {\n                return this.mouse_on_container = false;\n            };\n\n            AbstractChosen.prototype.input_focus = function(evt) {\n                if (this.is_multiple) {\n                    if (!this.active_field) {\n                        return setTimeout(((function(_this) {\n                            return function() {\n                                return _this.container_mousedown();\n                            };\n                        })(this)), 50);\n                    }\n                } else {\n                    if (!this.active_field) {\n                        return this.activate_field();\n                    }\n                }\n            };\n\n            AbstractChosen.prototype.input_blur = function(evt) {\n                if (!this.mouse_on_container) {\n                    this.active_field = false;\n                    return setTimeout(((function(_this) {\n                        return function() {\n                            return _this.blur_test();\n                        };\n                    })(this)), 100);\n                }\n            };\n\n            AbstractChosen.prototype.label_click_handler = function(evt) {\n                if (this.is_multiple) {\n                    return this.container_mousedown(evt);\n                } else {\n                    return this.activate_field();\n                }\n            };\n\n            AbstractChosen.prototype.results_option_build = function(options) {\n                var content, data, data_content, i, len, ref, shown_results;\n                content = '';\n                shown_results = 0;\n                ref = this.results_data;\n                for (i = 0, len = ref.length; i < len; i++) {\n                    data = ref[i];\n                    data_content = '';\n                    if (data.group) {\n                        data_content = this.result_add_group(data);\n                    } else {\n                        data_content = this.result_add_option(data);\n                    }\n                    if (data_content !== '') {\n                        shown_results++;\n                        content += data_content;\n                    }\n                    if (options != null ? options.first : void 0) {\n                        if (data.selected && this.is_multiple) {\n                            this.choice_build(data);\n                        } else if (data.selected && !this.is_multiple) {\n                            this.single_set_selected_text(this.choice_label(data));\n                        }\n                    }\n                    if (shown_results >= this.max_shown_results) {\n                        break;\n                    }\n                }\n                return content;\n            };\n\n            AbstractChosen.prototype.result_add_option = function(option) {\n                var classes, option_el;\n                if (!option.search_match) {\n                    return '';\n                }\n                if (!this.include_option_in_results(option)) {\n                    return '';\n                }\n                classes = [];\n                if (!option.disabled && !(option.selected && this.is_multiple)) {\n                    classes.push(\"active-result\");\n                }\n                if (option.disabled && !(option.selected && this.is_multiple)) {\n                    classes.push(\"disabled-result\");\n                }\n                if (option.selected) {\n                    classes.push(\"result-selected\");\n                }\n                if (option.group_array_index != null) {\n                    classes.push(\"group-option\");\n                }\n                if (option.classes !== \"\") {\n                    classes.push(option.classes);\n                }\n                option_el = document.createElement(\"li\");\n                option_el.className = classes.join(\" \");\n                if (option.style) {\n                    option_el.style.cssText = option.style;\n                }\n                option_el.setAttribute(\"data-option-array-index\", option.array_index);\n                option_el.innerHTML = option.highlighted_html || option.html;\n                if (option.title) {\n                    option_el.title = option.title;\n                }\n                return this.outerHTML(option_el);\n            };\n\n            AbstractChosen.prototype.result_add_group = function(group) {\n                var classes, group_el;\n                if (!(group.search_match || group.group_match)) {\n                    return '';\n                }\n                if (!(group.active_options > 0)) {\n                    return '';\n                }\n                classes = [];\n                classes.push(\"group-result\");\n                if (group.classes) {\n                    classes.push(group.classes);\n                }\n                group_el = document.createElement(\"li\");\n                group_el.className = classes.join(\" \");\n                group_el.innerHTML = group.highlighted_html || this.escape_html(group.label);\n                if (group.title) {\n                    group_el.title = group.title;\n                }\n                return this.outerHTML(group_el);\n            };\n\n            AbstractChosen.prototype.results_update_field = function() {\n                this.set_default_text();\n                if (!this.is_multiple) {\n                    this.results_reset_cleanup();\n                }\n                this.result_clear_highlight();\n                this.results_build();\n                if (this.results_showing) {\n                    return this.winnow_results();\n                }\n            };\n\n            AbstractChosen.prototype.reset_single_select_options = function() {\n                var i, len, ref, result, results1;\n                ref = this.results_data;\n                results1 = [];\n                for (i = 0, len = ref.length; i < len; i++) {\n                    result = ref[i];\n                    if (result.selected) {\n                        results1.push(result.selected = false);\n                    } else {\n                        results1.push(void 0);\n                    }\n                }\n                return results1;\n            };\n\n            AbstractChosen.prototype.results_toggle = function() {\n                if (this.results_showing) {\n                    return this.results_hide();\n                } else {\n                    return this.results_show();\n                }\n            };\n\n            AbstractChosen.prototype.results_search = function(evt) {\n                if (this.results_showing) {\n                    return this.winnow_results();\n                } else {\n                    return this.results_show();\n                }\n            };\n\n            AbstractChosen.prototype.winnow_results = function(options) {\n                var escapedQuery, fix, i, len, option, prefix, query, ref, regex, results, results_group, search_match, startpos, suffix, text;\n                this.no_results_clear();\n                results = 0;\n                query = this.get_search_text();\n                escapedQuery = query.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\");\n                regex = this.get_search_regex(escapedQuery);\n                ref = this.results_data;\n                for (i = 0, len = ref.length; i < len; i++) {\n                    option = ref[i];\n                    option.search_match = false;\n                    results_group = null;\n                    search_match = null;\n                    option.highlighted_html = '';\n                    if (this.include_option_in_results(option)) {\n                        if (option.group) {\n                            option.group_match = false;\n                            option.active_options = 0;\n                        }\n                        if ((option.group_array_index != null) && this.results_data[option.group_array_index]) {\n                            results_group = this.results_data[option.group_array_index];\n                            if (results_group.active_options === 0 && results_group.search_match) {\n                                results += 1;\n                            }\n                            results_group.active_options += 1;\n                        }\n                        text = option.group ? option.label : option.text;\n                        if (!(option.group && !this.group_search)) {\n                            search_match = this.search_string_match(text, regex);\n                            option.search_match = search_match != null;\n                            if (option.search_match && !option.group) {\n                                results += 1;\n                            }\n                            if (option.search_match) {\n                                if (query.length) {\n                                    startpos = search_match.index;\n                                    prefix = text.slice(0, startpos);\n                                    fix = text.slice(startpos, startpos + query.length);\n                                    suffix = text.slice(startpos + query.length);\n                                    option.highlighted_html = (this.escape_html(prefix)) + \"<em>\" + (this.escape_html(fix)) + \"</em>\" + (this.escape_html(suffix));\n                                }\n                                if (results_group != null) {\n                                    results_group.group_match = true;\n                                }\n                            } else if ((option.group_array_index != null) && this.results_data[option.group_array_index].search_match) {\n                                option.search_match = true;\n                            }\n                        }\n                    }\n                }\n                this.result_clear_highlight();\n                if (results < 1 && query.length) {\n                    this.update_results_content(\"\");\n                    return this.no_results(query);\n                } else {\n                    this.update_results_content(this.results_option_build());\n                    if (!(options != null ? options.skip_highlight : void 0)) {\n                        return this.winnow_results_set_highlight();\n                    }\n                }\n            };\n\n            AbstractChosen.prototype.get_search_regex = function(escaped_search_string) {\n                var regex_flag, regex_string;\n                regex_string = this.search_contains ? escaped_search_string : \"(^|\\\\s|\\\\b)\" + escaped_search_string + \"[^\\\\s]*\";\n                if (!(this.enable_split_word_search || this.search_contains)) {\n                    regex_string = \"^\" + regex_string;\n                }\n                regex_flag = this.case_sensitive_search ? \"\" : \"i\";\n                return new RegExp(regex_string, regex_flag);\n            };\n\n            AbstractChosen.prototype.search_string_match = function(search_string, regex) {\n                var match;\n                match = regex.exec(search_string);\n                if (!this.search_contains && (match != null ? match[1] : void 0)) {\n                    match.index += 1;\n                }\n                return match;\n            };\n\n            AbstractChosen.prototype.choices_count = function() {\n                var i, len, option, ref;\n                if (this.selected_option_count != null) {\n                    return this.selected_option_count;\n                }\n                this.selected_option_count = 0;\n                ref = this.form_field.options;\n                for (i = 0, len = ref.length; i < len; i++) {\n                    option = ref[i];\n                    if (option.selected) {\n                        this.selected_option_count += 1;\n                    }\n                }\n                return this.selected_option_count;\n            };\n\n            AbstractChosen.prototype.choices_click = function(evt) {\n                evt.preventDefault();\n                this.activate_field();\n                if (!(this.results_showing || this.is_disabled)) {\n                    return this.results_show();\n                }\n            };\n\n            AbstractChosen.prototype.keydown_checker = function(evt) {\n                var ref, stroke;\n                stroke = (ref = evt.which) != null ? ref : evt.keyCode;\n                this.search_field_scale();\n                if (stroke !== 8 && this.pending_backstroke) {\n                    this.clear_backstroke();\n                }\n                switch (stroke) {\n                    case 8:\n                        this.backstroke_length = this.get_search_field_value().length;\n                        break;\n                    case 9:\n                        if (this.results_showing && !this.is_multiple) {\n                            this.result_select(evt);\n                        }\n                        this.mouse_on_container = false;\n                        break;\n                    case 13:\n                        if (this.results_showing) {\n                            evt.preventDefault();\n                        }\n                        break;\n                    case 27:\n                        if (this.results_showing) {\n                            evt.preventDefault();\n                        }\n                        break;\n                    case 32:\n                        if (this.disable_search) {\n                            evt.preventDefault();\n                        }\n                        break;\n                    case 38:\n                        evt.preventDefault();\n                        this.keyup_arrow();\n                        break;\n                    case 40:\n                        evt.preventDefault();\n                        this.keydown_arrow();\n                        break;\n                }\n            };\n\n            AbstractChosen.prototype.keyup_checker = function(evt) {\n                var ref, stroke;\n                stroke = (ref = evt.which) != null ? ref : evt.keyCode;\n                this.search_field_scale();\n                switch (stroke) {\n                    case 8:\n                        if (this.is_multiple && this.backstroke_length < 1 && this.choices_count() > 0) {\n                            this.keydown_backstroke();\n                        } else if (!this.pending_backstroke) {\n                            this.result_clear_highlight();\n                            this.results_search();\n                        }\n                        break;\n                    case 13:\n                        evt.preventDefault();\n                        if (this.results_showing) {\n                            this.result_select(evt);\n                        }\n                        break;\n                    case 27:\n                        if (this.results_showing) {\n                            this.results_hide();\n                        }\n                        break;\n                    case 9:\n                    case 16:\n                    case 17:\n                    case 18:\n                    case 38:\n                    case 40:\n                    case 91:\n                        break;\n                    default:\n                        this.results_search();\n                        break;\n                }\n            };\n\n            AbstractChosen.prototype.clipboard_event_checker = function(evt) {\n                if (this.is_disabled) {\n                    return;\n                }\n                return setTimeout(((function(_this) {\n                    return function() {\n                        return _this.results_search();\n                    };\n                })(this)), 50);\n            };\n\n            AbstractChosen.prototype.container_width = function() {\n                if (this.options.width != null) {\n                    return this.options.width;\n                } else {\n                    return this.form_field.offsetWidth + \"px\";\n                }\n            };\n\n            AbstractChosen.prototype.include_option_in_results = function(option) {\n                if (this.is_multiple && (!this.display_selected_options && option.selected)) {\n                    return false;\n                }\n                if (!this.display_disabled_options && option.disabled) {\n                    return false;\n                }\n                if (option.empty) {\n                    return false;\n                }\n                return true;\n            };\n\n            AbstractChosen.prototype.search_results_touchstart = function(evt) {\n                this.touch_started = true;\n                return this.search_results_mouseover(evt);\n            };\n\n            AbstractChosen.prototype.search_results_touchmove = function(evt) {\n                this.touch_started = false;\n                return this.search_results_mouseout(evt);\n            };\n\n            AbstractChosen.prototype.search_results_touchend = function(evt) {\n                if (this.touch_started) {\n                    return this.search_results_mouseup(evt);\n                }\n            };\n\n            AbstractChosen.prototype.outerHTML = function(element) {\n                var tmp;\n                if (element.outerHTML) {\n                    return element.outerHTML;\n                }\n                tmp = document.createElement(\"div\");\n                tmp.appendChild(element);\n                return tmp.innerHTML;\n            };\n\n            AbstractChosen.prototype.get_single_html = function() {\n                return \"<a class=\\\"chosen-single chosen-default\\\">\\n  <span>\" + this.default_text + \"</span>\\n  <div><b></b></div>\\n</a>\\n<div class=\\\"chosen-drop\\\">\\n  <div class=\\\"chosen-search\\\">\\n    <input class=\\\"chosen-search-input\\\" type=\\\"text\\\" autocomplete=\\\"off\\\" />\\n  </div>\\n  <ul class=\\\"chosen-results\\\"></ul>\\n</div>\";\n            };\n\n            AbstractChosen.prototype.get_multi_html = function() {\n                return \"<ul class=\\\"chosen-choices\\\">\\n  <li class=\\\"search-field\\\">\\n    <input class=\\\"chosen-search-input\\\" type=\\\"text\\\" autocomplete=\\\"off\\\" value=\\\"\" + this.default_text + \"\\\" />\\n  </li>\\n</ul>\\n<div class=\\\"chosen-drop\\\">\\n  <ul class=\\\"chosen-results\\\"></ul>\\n</div>\";\n            };\n\n            AbstractChosen.prototype.get_no_results_html = function(terms) {\n                return \"<li class=\\\"no-results\\\">\\n  \" + this.results_none_found + \" <span>\" + (this.escape_html(terms)) + \"</span>\\n</li>\";\n            };\n\n            AbstractChosen.browser_is_supported = function() {\n                if (\"Microsoft Internet Explorer\" === window.navigator.appName) {\n                    return document.documentMode >= 8;\n                }\n                if (/iP(od|hone)/i.test(window.navigator.userAgent) || /IEMobile/i.test(window.navigator.userAgent) || /Windows Phone/i.test(window.navigator.userAgent) || /BlackBerry/i.test(window.navigator.userAgent) || /BB10/i.test(window.navigator.userAgent) || /Android.*Mobile/i.test(window.navigator.userAgent)) {\n                    return false;\n                }\n                return true;\n            };\n\n            AbstractChosen.default_multiple_text = \"Select Some Options\";\n\n            AbstractChosen.default_single_text = \"Select an Option\";\n\n            AbstractChosen.default_no_result_text = \"No results match\";\n\n            return AbstractChosen;\n\n        })();\n\n        $ = jQuery;\n\n        $.fn.extend({\n            chosen: function(options) {\n                if (!AbstractChosen.browser_is_supported()) {\n                    return this;\n                }\n                return this.each(function(input_field) {\n                    var $this, chosen;\n                    $this = $(this);\n                    chosen = $this.data('chosen');\n                    if (options === 'destroy') {\n                        if (chosen instanceof Chosen) {\n                            chosen.destroy();\n                        }\n                        return;\n                    }\n                    if (!(chosen instanceof Chosen)) {\n                        $this.data('chosen', new Chosen(this, options));\n                    }\n                });\n            }\n        });\n\n        Chosen = (function(superClass) {\n            extend(Chosen, superClass);\n\n            function Chosen() {\n                return Chosen.__super__.constructor.apply(this, arguments);\n            }\n\n            Chosen.prototype.setup = function() {\n                this.form_field_jq = $(this.form_field);\n                return this.current_selectedIndex = this.form_field.selectedIndex;\n            };\n\n            Chosen.prototype.set_up_html = function() {\n                var container_classes, container_props;\n                container_classes = [\"chosen-container\"];\n                container_classes.push(\"chosen-container-\" + (this.is_multiple ? \"multi\" : \"single\"));\n                if (this.inherit_select_classes && this.form_field.className) {\n                    container_classes.push(this.form_field.className);\n                }\n                if (this.is_rtl) {\n                    container_classes.push(\"chosen-rtl\");\n                }\n                container_props = {\n                    'class': container_classes.join(' '),\n                    'title': this.form_field.title\n                };\n                if (this.form_field.id.length) {\n                    container_props.id = this.form_field.id.replace(/[^\\w]/g, '_') + \"_chosen\";\n                }\n                this.container = $(\"<div>\", container_props);\n                this.container.width(this.container_width());\n                if (this.is_multiple) {\n                    this.container.html(this.get_multi_html());\n                } else {\n                    this.container.html(this.get_single_html());\n                }\n                this.form_field_jq.hide().after(this.container);\n                this.dropdown = this.container.find('div.chosen-drop').first();\n                this.search_field = this.container.find('input').first();\n                this.search_results = this.container.find('ul.chosen-results').first();\n                this.search_field_scale();\n                this.search_no_results = this.container.find('li.no-results').first();\n                if (this.is_multiple) {\n                    this.search_choices = this.container.find('ul.chosen-choices').first();\n                    this.search_container = this.container.find('li.search-field').first();\n                } else {\n                    this.search_container = this.container.find('div.chosen-search').first();\n                    this.selected_item = this.container.find('.chosen-single').first();\n                }\n                this.results_build();\n                this.set_tab_index();\n                return this.set_label_behavior();\n            };\n\n            Chosen.prototype.on_ready = function() {\n                return this.form_field_jq.trigger(\"chosen:ready\", {\n                    chosen: this\n                });\n            };\n\n            Chosen.prototype.register_observers = function() {\n                this.container.on('touchstart.chosen', (function(_this) {\n                    return function(evt) {\n                        _this.container_mousedown(evt);\n                    };\n                })(this));\n                this.container.on('touchend.chosen', (function(_this) {\n                    return function(evt) {\n                        _this.container_mouseup(evt);\n                    };\n                })(this));\n                this.container.on('mousedown.chosen', (function(_this) {\n                    return function(evt) {\n                        _this.container_mousedown(evt);\n                    };\n                })(this));\n                this.container.on('mouseup.chosen', (function(_this) {\n                    return function(evt) {\n                        _this.container_mouseup(evt);\n                    };\n                })(this));\n                this.container.on('mouseenter.chosen', (function(_this) {\n                    return function(evt) {\n                        _this.mouse_enter(evt);\n                    };\n                })(this));\n                this.container.on('mouseleave.chosen', (function(_this) {\n                    return function(evt) {\n                        _this.mouse_leave(evt);\n                    };\n                })(this));\n                this.search_results.on('mouseup.chosen', (function(_this) {\n                    return function(evt) {\n                        _this.search_results_mouseup(evt);\n                    };\n                })(this));\n                this.search_results.on('mouseover.chosen', (function(_this) {\n                    return function(evt) {\n                        _this.search_results_mouseover(evt);\n                    };\n                })(this));\n                this.search_results.on('mouseout.chosen', (function(_this) {\n                    return function(evt) {\n                        _this.search_results_mouseout(evt);\n                    };\n                })(this));\n                this.search_results.on('mousewheel.chosen DOMMouseScroll.chosen', (function(_this) {\n                    return function(evt) {\n                        _this.search_results_mousewheel(evt);\n                    };\n                })(this));\n                this.search_results.on('touchstart.chosen', (function(_this) {\n                    return function(evt) {\n                        _this.search_results_touchstart(evt);\n                    };\n                })(this));\n                this.search_results.on('touchmove.chosen', (function(_this) {\n                    return function(evt) {\n                        _this.search_results_touchmove(evt);\n                    };\n                })(this));\n                this.search_results.on('touchend.chosen', (function(_this) {\n                    return function(evt) {\n                        _this.search_results_touchend(evt);\n                    };\n                })(this));\n                this.form_field_jq.on(\"chosen:updated.chosen\", (function(_this) {\n                    return function(evt) {\n                        _this.results_update_field(evt);\n                    };\n                })(this));\n                this.form_field_jq.on(\"chosen:activate.chosen\", (function(_this) {\n                    return function(evt) {\n                        _this.activate_field(evt);\n                    };\n                })(this));\n                this.form_field_jq.on(\"chosen:open.chosen\", (function(_this) {\n                    return function(evt) {\n                        _this.container_mousedown(evt);\n                    };\n                })(this));\n                this.form_field_jq.on(\"chosen:close.chosen\", (function(_this) {\n                    return function(evt) {\n                        _this.close_field(evt);\n                    };\n                })(this));\n                this.search_field.on('blur.chosen', (function(_this) {\n                    return function(evt) {\n                        _this.input_blur(evt);\n                    };\n                })(this));\n                this.search_field.on('keyup.chosen', (function(_this) {\n                    return function(evt) {\n                        _this.keyup_checker(evt);\n                    };\n                })(this));\n                this.search_field.on('keydown.chosen', (function(_this) {\n                    return function(evt) {\n                        _this.keydown_checker(evt);\n                    };\n                })(this));\n                this.search_field.on('focus.chosen', (function(_this) {\n                    return function(evt) {\n                        _this.input_focus(evt);\n                    };\n                })(this));\n                this.search_field.on('cut.chosen', (function(_this) {\n                    return function(evt) {\n                        _this.clipboard_event_checker(evt);\n                    };\n                })(this));\n                this.search_field.on('paste.chosen', (function(_this) {\n                    return function(evt) {\n                        _this.clipboard_event_checker(evt);\n                    };\n                })(this));\n                if (this.is_multiple) {\n                    return this.search_choices.on('click.chosen', (function(_this) {\n                        return function(evt) {\n                            _this.choices_click(evt);\n                        };\n                    })(this));\n                } else {\n                    return this.container.on('click.chosen', function(evt) {\n                        evt.preventDefault();\n                    });\n                }\n            };\n\n            Chosen.prototype.destroy = function() {\n                $(this.container[0].ownerDocument).off('click.chosen', this.click_test_action);\n                if (this.form_field_label.length > 0) {\n                    this.form_field_label.off('click.chosen');\n                }\n                if (this.search_field[0].tabIndex) {\n                    this.form_field_jq[0].tabIndex = this.search_field[0].tabIndex;\n                }\n                this.container.remove();\n                this.form_field_jq.removeData('chosen');\n                return this.form_field_jq.show();\n            };\n\n            Chosen.prototype.search_field_disabled = function() {\n                this.is_disabled = this.form_field.disabled || this.form_field_jq.parents('fieldset').is(':disabled');\n                this.container.toggleClass('chosen-disabled', this.is_disabled);\n                this.search_field[0].disabled = this.is_disabled;\n                if (!this.is_multiple) {\n                    this.selected_item.off('focus.chosen', this.activate_field);\n                }\n                if (this.is_disabled) {\n                    return this.close_field();\n                } else if (!this.is_multiple) {\n                    return this.selected_item.on('focus.chosen', this.activate_field);\n                }\n            };\n\n            Chosen.prototype.container_mousedown = function(evt) {\n                var ref;\n                if (this.is_disabled) {\n                    return;\n                }\n                if (evt && ((ref = evt.type) === 'mousedown' || ref === 'touchstart') && !this.results_showing) {\n                    evt.preventDefault();\n                }\n                if (!((evt != null) && ($(evt.target)).hasClass(\"search-choice-close\"))) {\n                    if (!this.active_field) {\n                        if (this.is_multiple) {\n                            this.search_field.val(\"\");\n                        }\n                        $(this.container[0].ownerDocument).on('click.chosen', this.click_test_action);\n                        this.results_show();\n                    } else if (!this.is_multiple && evt && (($(evt.target)[0] === this.selected_item[0]) || $(evt.target).parents(\"a.chosen-single\").length)) {\n                        evt.preventDefault();\n                        this.results_toggle();\n                    }\n                    return this.activate_field();\n                }\n            };\n\n            Chosen.prototype.container_mouseup = function(evt) {\n                if (evt.target.nodeName === \"ABBR\" && !this.is_disabled) {\n                    return this.results_reset(evt);\n                }\n            };\n\n            Chosen.prototype.search_results_mousewheel = function(evt) {\n                var delta;\n                if (evt.originalEvent) {\n                    delta = evt.originalEvent.deltaY || -evt.originalEvent.wheelDelta || evt.originalEvent.detail;\n                }\n                if (delta != null) {\n                    evt.preventDefault();\n                    if (evt.type === 'DOMMouseScroll') {\n                        delta = delta * 40;\n                    }\n                    return this.search_results.scrollTop(delta + this.search_results.scrollTop());\n                }\n            };\n\n            Chosen.prototype.blur_test = function(evt) {\n                if (!this.active_field && this.container.hasClass(\"chosen-container-active\")) {\n                    return this.close_field();\n                }\n            };\n\n            Chosen.prototype.close_field = function() {\n                $(this.container[0].ownerDocument).off(\"click.chosen\", this.click_test_action);\n                this.active_field = false;\n                this.results_hide();\n                this.container.removeClass(\"chosen-container-active\");\n                this.clear_backstroke();\n                this.show_search_field_default();\n                this.search_field_scale();\n                return this.search_field.blur();\n            };\n\n            Chosen.prototype.activate_field = function() {\n                if (this.is_disabled) {\n                    return;\n                }\n                this.container.addClass(\"chosen-container-active\");\n                this.active_field = true;\n                this.search_field.val(this.search_field.val());\n                return this.search_field.focus();\n            };\n\n            Chosen.prototype.test_active_click = function(evt) {\n                var active_container;\n                active_container = $(evt.target).closest('.chosen-container');\n                if (active_container.length && this.container[0] === active_container[0]) {\n                    return this.active_field = true;\n                } else {\n                    return this.close_field();\n                }\n            };\n\n            Chosen.prototype.results_build = function() {\n                this.parsing = true;\n                this.selected_option_count = null;\n                this.results_data = SelectParser.select_to_array(this.form_field);\n                if (this.is_multiple) {\n                    this.search_choices.find(\"li.search-choice\").remove();\n                } else {\n                    this.single_set_selected_text();\n                    if (this.disable_search || this.form_field.options.length <= this.disable_search_threshold) {\n                        this.search_field[0].readOnly = true;\n                        this.container.addClass(\"chosen-container-single-nosearch\");\n                    } else {\n                        this.search_field[0].readOnly = false;\n                        this.container.removeClass(\"chosen-container-single-nosearch\");\n                    }\n                }\n                this.update_results_content(this.results_option_build({\n                    first: true\n                }));\n                this.search_field_disabled();\n                this.show_search_field_default();\n                this.search_field_scale();\n                return this.parsing = false;\n            };\n\n            Chosen.prototype.result_do_highlight = function(el) {\n                var high_bottom, high_top, maxHeight, visible_bottom, visible_top;\n                if (el.length) {\n                    this.result_clear_highlight();\n                    this.result_highlight = el;\n                    this.result_highlight.addClass(\"highlighted\");\n                    maxHeight = parseInt(this.search_results.css(\"maxHeight\"), 10);\n                    visible_top = this.search_results.scrollTop();\n                    visible_bottom = maxHeight + visible_top;\n                    high_top = this.result_highlight.position().top + this.search_results.scrollTop();\n                    high_bottom = high_top + this.result_highlight.outerHeight();\n                    if (high_bottom >= visible_bottom) {\n                        return this.search_results.scrollTop((high_bottom - maxHeight) > 0 ? high_bottom - maxHeight : 0);\n                    } else if (high_top < visible_top) {\n                        return this.search_results.scrollTop(high_top);\n                    }\n                }\n            };\n\n            Chosen.prototype.result_clear_highlight = function() {\n                if (this.result_highlight) {\n                    this.result_highlight.removeClass(\"highlighted\");\n                }\n                return this.result_highlight = null;\n            };\n\n            Chosen.prototype.results_show = function() {\n                if (this.is_multiple && this.max_selected_options <= this.choices_count()) {\n                    this.form_field_jq.trigger(\"chosen:maxselected\", {\n                        chosen: this\n                    });\n                    return false;\n                }\n                this.container.addClass(\"chosen-with-drop\");\n                this.results_showing = true;\n                this.search_field.focus();\n                this.search_field.val(this.get_search_field_value());\n                this.winnow_results();\n                return this.form_field_jq.trigger(\"chosen:showing_dropdown\", {\n                    chosen: this\n                });\n            };\n\n            Chosen.prototype.update_results_content = function(content) {\n                return this.search_results.html(content);\n            };\n\n            Chosen.prototype.results_hide = function() {\n                if (this.results_showing) {\n                    this.result_clear_highlight();\n                    this.container.removeClass(\"chosen-with-drop\");\n                    this.form_field_jq.trigger(\"chosen:hiding_dropdown\", {\n                        chosen: this\n                    });\n                }\n                return this.results_showing = false;\n            };\n\n            Chosen.prototype.set_tab_index = function(el) {\n                var ti;\n                if (this.form_field.tabIndex) {\n                    ti = this.form_field.tabIndex;\n                    this.form_field.tabIndex = -1;\n                    return this.search_field[0].tabIndex = ti;\n                }\n            };\n\n            Chosen.prototype.set_label_behavior = function() {\n                this.form_field_label = this.form_field_jq.parents(\"label\");\n                if (!this.form_field_label.length && this.form_field.id.length) {\n                    this.form_field_label = $(\"label[for='\" + this.form_field.id + \"']\");\n                }\n                if (this.form_field_label.length > 0) {\n                    return this.form_field_label.on('click.chosen', this.label_click_handler);\n                }\n            };\n\n            Chosen.prototype.show_search_field_default = function() {\n                if (this.is_multiple && this.choices_count() < 1 && !this.active_field) {\n                    this.search_field.val(this.default_text);\n                    return this.search_field.addClass(\"default\");\n                } else {\n                    this.search_field.val(\"\");\n                    return this.search_field.removeClass(\"default\");\n                }\n            };\n\n            Chosen.prototype.search_results_mouseup = function(evt) {\n                var target;\n                target = $(evt.target).hasClass(\"active-result\") ? $(evt.target) : $(evt.target).parents(\".active-result\").first();\n                if (target.length) {\n                    this.result_highlight = target;\n                    this.result_select(evt);\n                    return this.search_field.focus();\n                }\n            };\n\n            Chosen.prototype.search_results_mouseover = function(evt) {\n                var target;\n                target = $(evt.target).hasClass(\"active-result\") ? $(evt.target) : $(evt.target).parents(\".active-result\").first();\n                if (target) {\n                    return this.result_do_highlight(target);\n                }\n            };\n\n            Chosen.prototype.search_results_mouseout = function(evt) {\n                if ($(evt.target).hasClass(\"active-result\") || $(evt.target).parents('.active-result').first()) {\n                    return this.result_clear_highlight();\n                }\n            };\n\n            Chosen.prototype.choice_build = function(item) {\n                var choice, close_link;\n                choice = $('<li>', {\n                    \"class\": \"search-choice\"\n                }).html(\"<span>\" + (this.choice_label(item)) + \"</span>\");\n                if (item.disabled) {\n                    choice.addClass('search-choice-disabled');\n                } else {\n                    close_link = $('<a />', {\n                        \"class\": 'search-choice-close',\n                        'data-option-array-index': item.array_index\n                    });\n                    close_link.on('click.chosen', (function(_this) {\n                        return function(evt) {\n                            return _this.choice_destroy_link_click(evt);\n                        };\n                    })(this));\n                    choice.append(close_link);\n                }\n                return this.search_container.before(choice);\n            };\n\n            Chosen.prototype.choice_destroy_link_click = function(evt) {\n                evt.preventDefault();\n                evt.stopPropagation();\n                if (!this.is_disabled) {\n                    return this.choice_destroy($(evt.target));\n                }\n            };\n\n            Chosen.prototype.choice_destroy = function(link) {\n                if (this.result_deselect(link[0].getAttribute(\"data-option-array-index\"))) {\n                    if (this.active_field) {\n                        this.search_field.focus();\n                    } else {\n                        this.show_search_field_default();\n                    }\n                    if (this.is_multiple && this.choices_count() > 0 && this.get_search_field_value().length < 1) {\n                        this.results_hide();\n                    }\n                    link.parents('li').first().remove();\n                    return this.search_field_scale();\n                }\n            };\n\n            Chosen.prototype.results_reset = function() {\n                this.reset_single_select_options();\n                this.form_field.options[0].selected = true;\n                this.single_set_selected_text();\n                this.show_search_field_default();\n                this.results_reset_cleanup();\n                this.trigger_form_field_change();\n                if (this.active_field) {\n                    return this.results_hide();\n                }\n            };\n\n            Chosen.prototype.results_reset_cleanup = function() {\n                this.current_selectedIndex = this.form_field.selectedIndex;\n                return this.selected_item.find(\"abbr\").remove();\n            };\n\n            Chosen.prototype.result_select = function(evt) {\n                var high, item;\n                if (this.result_highlight) {\n                    high = this.result_highlight;\n                    this.result_clear_highlight();\n                    if (this.is_multiple && this.max_selected_options <= this.choices_count()) {\n                        this.form_field_jq.trigger(\"chosen:maxselected\", {\n                            chosen: this\n                        });\n                        return false;\n                    }\n                    if (this.is_multiple) {\n                        high.removeClass(\"active-result\");\n                    } else {\n                        this.reset_single_select_options();\n                    }\n                    high.addClass(\"result-selected\");\n                    item = this.results_data[high[0].getAttribute(\"data-option-array-index\")];\n                    item.selected = true;\n                    this.form_field.options[item.options_index].selected = true;\n                    this.selected_option_count = null;\n                    if (this.is_multiple) {\n                        this.choice_build(item);\n                    } else {\n                        this.single_set_selected_text(this.choice_label(item));\n                    }\n                    if (this.is_multiple && (!this.hide_results_on_select || (evt.metaKey || evt.ctrlKey))) {\n                        if (evt.metaKey || evt.ctrlKey) {\n                            this.winnow_results({\n                                skip_highlight: true\n                            });\n                        } else {\n                            this.search_field.val(\"\");\n                            this.winnow_results();\n                        }\n                    } else {\n                        this.results_hide();\n                        this.show_search_field_default();\n                    }\n                    if (this.is_multiple || this.form_field.selectedIndex !== this.current_selectedIndex) {\n                        this.trigger_form_field_change({\n                            selected: this.form_field.options[item.options_index].value\n                        });\n                    }\n                    this.current_selectedIndex = this.form_field.selectedIndex;\n                    evt.preventDefault();\n                    return this.search_field_scale();\n                }\n            };\n\n            Chosen.prototype.single_set_selected_text = function(text) {\n                if (text == null) {\n                    text = this.default_text;\n                }\n                if (text === this.default_text) {\n                    this.selected_item.addClass(\"chosen-default\");\n                } else {\n                    this.single_deselect_control_build();\n                    this.selected_item.removeClass(\"chosen-default\");\n                }\n                return this.selected_item.find(\"span\").html(text);\n            };\n\n            Chosen.prototype.result_deselect = function(pos) {\n                var result_data;\n                result_data = this.results_data[pos];\n                if (!this.form_field.options[result_data.options_index].disabled) {\n                    result_data.selected = false;\n                    this.form_field.options[result_data.options_index].selected = false;\n                    this.selected_option_count = null;\n                    this.result_clear_highlight();\n                    if (this.results_showing) {\n                        this.winnow_results();\n                    }\n                    this.trigger_form_field_change({\n                        deselected: this.form_field.options[result_data.options_index].value\n                    });\n                    this.search_field_scale();\n                    return true;\n                } else {\n                    return false;\n                }\n            };\n\n            Chosen.prototype.single_deselect_control_build = function() {\n                if (!this.allow_single_deselect) {\n                    return;\n                }\n                if (!this.selected_item.find(\"abbr\").length) {\n                    this.selected_item.find(\"span\").first().after(\"<abbr class=\\\"search-choice-close\\\"></abbr>\");\n                }\n                return this.selected_item.addClass(\"chosen-single-with-deselect\");\n            };\n\n            Chosen.prototype.get_search_field_value = function() {\n                return this.search_field.val();\n            };\n\n            Chosen.prototype.get_search_text = function() {\n                return $.trim(this.get_search_field_value());\n            };\n\n            Chosen.prototype.escape_html = function(text) {\n                return $('<div>').text(text).html();\n            };\n\n            Chosen.prototype.winnow_results_set_highlight = function() {\n                var do_high, selected_results;\n                selected_results = !this.is_multiple ? this.search_results.find(\".result-selected.active-result\") : [];\n                do_high = selected_results.length ? selected_results.first() : this.search_results.find(\".active-result\").first();\n                if (do_high != null) {\n                    return this.result_do_highlight(do_high);\n                }\n            };\n\n            Chosen.prototype.no_results = function(terms) {\n                var no_results_html;\n                no_results_html = this.get_no_results_html(terms);\n                this.search_results.append(no_results_html);\n                return this.form_field_jq.trigger(\"chosen:no_results\", {\n                    chosen: this\n                });\n            };\n\n            Chosen.prototype.no_results_clear = function() {\n                return this.search_results.find(\".no-results\").remove();\n            };\n\n            Chosen.prototype.keydown_arrow = function() {\n                var next_sib;\n                if (this.results_showing && this.result_highlight) {\n                    next_sib = this.result_highlight.nextAll(\"li.active-result\").first();\n                    if (next_sib) {\n                        return this.result_do_highlight(next_sib);\n                    }\n                } else {\n                    return this.results_show();\n                }\n            };\n\n            Chosen.prototype.keyup_arrow = function() {\n                var prev_sibs;\n                if (!this.results_showing && !this.is_multiple) {\n                    return this.results_show();\n                } else if (this.result_highlight) {\n                    prev_sibs = this.result_highlight.prevAll(\"li.active-result\");\n                    if (prev_sibs.length) {\n                        return this.result_do_highlight(prev_sibs.first());\n                    } else {\n                        if (this.choices_count() > 0) {\n                            this.results_hide();\n                        }\n                        return this.result_clear_highlight();\n                    }\n                }\n            };\n\n            Chosen.prototype.keydown_backstroke = function() {\n                var next_available_destroy;\n                if (this.pending_backstroke) {\n                    this.choice_destroy(this.pending_backstroke.find(\"a\").first());\n                    return this.clear_backstroke();\n                } else {\n                    next_available_destroy = this.search_container.siblings(\"li.search-choice\").last();\n                    if (next_available_destroy.length && !next_available_destroy.hasClass(\"search-choice-disabled\")) {\n                        this.pending_backstroke = next_available_destroy;\n                        if (this.single_backstroke_delete) {\n                            return this.keydown_backstroke();\n                        } else {\n                            return this.pending_backstroke.addClass(\"search-choice-focus\");\n                        }\n                    }\n                }\n            };\n\n            Chosen.prototype.clear_backstroke = function() {\n                if (this.pending_backstroke) {\n                    this.pending_backstroke.removeClass(\"search-choice-focus\");\n                }\n                return this.pending_backstroke = null;\n            };\n\n            Chosen.prototype.search_field_scale = function() {\n                var div, i, len, style, style_block, styles, width;\n                if (!this.is_multiple) {\n                    return;\n                }\n                style_block = {\n                    position: 'absolute',\n                    left: '-1000px',\n                    top: '-1000px',\n                    display: 'none',\n                    whiteSpace: 'pre'\n                };\n                styles = ['fontSize', 'fontStyle', 'fontWeight', 'fontFamily', 'lineHeight', 'textTransform', 'letterSpacing'];\n                for (i = 0, len = styles.length; i < len; i++) {\n                    style = styles[i];\n                    style_block[style] = this.search_field.css(style);\n                }\n                div = $('<div>').css(style_block);\n                div.text(this.get_search_field_value());\n                $('body').append(div);\n                width = div.width() + 25;\n                div.remove();\n                if (this.container.is(':visible')) {\n                    width = Math.min(this.container.outerWidth() - 10, width);\n                }\n                return this.search_field.width(width);\n            };\n\n            Chosen.prototype.trigger_form_field_change = function(extra) {\n                this.form_field_jq.trigger(\"input\", extra);\n                return this.form_field_jq.trigger(\"change\", extra);\n            };\n\n            return Chosen;\n\n        })(AbstractChosen);\n\n    }).call(this);\n});\n","Amasty_ShopbyBase/js/components/am-tooltip-init.js":"/**\n * Amasty init mage tooltip widget\n */\n\ndefine([\n    'jquery',\n    'mage/tooltip'\n], function ($) {\n    'use strict';\n\n    $.widget('am.brandsTooltipInit', {\n        options: {\n            additionalClasses: '',\n            position: {\n                my: null,\n                at: null,\n                collision: null\n            },\n            selector: null\n        },\n        classes: {\n            tooltip: 'amshopby-brand-tooltip',\n            arrow: 'arrow'\n        },\n\n        /**\n         * @inheritDoc\n         */\n        _create: function () {\n            var self = this,\n                current;\n\n            $(this.element).tooltip({\n                position: {\n                    my: self.options.position.my || 'left bottom',\n                    at: self.options.position.at || 'right top',\n                    collision: self.options.position.collision || 'flip flip',\n                    using: function (position, feedback) {\n                        $(this).css(position);\n\n                        $('<div>')\n                            .addClass(self.classes.arrow)\n                            .addClass(feedback.vertical)\n                            .addClass(feedback.horizontal)\n                            .appendTo(this);\n                    }\n                },\n                tooltipClass: self.classes.tooltip + ' ' + self.options.additionalClasses,\n                content: function () {\n                    current = $(this).is(self.options.selector) ? $(this) : $(this).parent();\n\n                    return current.data('tooltip-content');\n                }\n            });\n        }\n    });\n\n    return $.am.brandsTooltipInit;\n});\n","Magento_Weee/js/tax-toggle.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'jquery'\n], function ($) {\n    'use strict';\n\n    /**\n     * @param {Object} config\n     * @param {jQuery.Event} e\n     */\n    function onToggle(config, e) {\n        var elem = $(e.currentTarget),\n            expandedClassName = config.expandedClassName || 'cart-tax-total-expanded';\n\n        elem.toggleClass(expandedClassName);\n\n        $(config.itemTaxId).toggle();\n    }\n\n    return function (data, el) {\n        $(el).on('click', onToggle.bind(null, data));\n    };\n});\n","Magento_Weee/js/price/adjustment.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'Magento_Ui/js/grid/columns/column'\n], function (Element) {\n    'use strict';\n\n    return Element.extend({\n        defaults: {\n            bodyTmpl: 'Magento_Weee/price/adjustment',\n            dataSource: '${ $.parentName }.provider',\n            //Weee configuration constants can be configured from backend\n            inclFptWithDesc: 1,//show FPT and description\n            inclFpt: 0, //show FPT attribute\n            exclFpt: 2, //do not show FPT\n            bothFptPrices: 3 //show price without FPT and with FPT and with description\n        },\n\n        /**\n         * Get Weee attributes.\n         *\n         * @param {Object} row\n         * @return {HTMLElement} Weee html\n         */\n        getWeeeAttributes: function (row) {\n            return row['price_info']['extension_attributes']['weee_attributes'];\n        },\n\n        /**\n         * Get Weee without Tax attributes.\n         *\n         * @param {Object} taxAmount\n         * @return {HTMLElement} Weee html\n         */\n        getWeeeTaxWithoutTax: function (taxAmount) {\n            return taxAmount['amount_excl_tax'];\n        },\n\n        /**\n         * UnsanitizedHtml version of getWeeeTaxWithoutTax.\n         *\n         * @param {Object} taxAmount\n         * @return {HTMLElement} Weee html\n         */\n        getWeeeTaxWithoutTaxUnsanitizedHtml: function (taxAmount) {\n            return this.getWeeeTaxWithoutTax(taxAmount);\n        },\n\n        /**\n         * Get Weee with Tax attributes.\n         *\n         * @param {Object} taxAmount\n         * @return {HTMLElement} Weee html\n         */\n        getWeeeTaxWithTax: function (taxAmount) {\n            return taxAmount['tax_amount_incl_tax'];\n        },\n\n        /**\n         * UnsanitizedHtml version of getWeeeTaxWithTax.\n         *\n         * @param {Object} taxAmount\n         * @return {HTMLElement} Weee html\n         */\n        getWeeeTaxWithTaxUnsanitizedHtml: function (taxAmount) {\n            return this.getWeeeTaxWithTax(taxAmount);\n        },\n\n        /**\n         * Get Weee Tax name.\n         *\n         * @param {String} taxAmount\n         * @return {String} Weee name\n         */\n        getWeeTaxAttributeName: function (taxAmount) {\n            return taxAmount['attribute_code'];\n        },\n\n        /**\n         * Set price type.\n         *\n         * @param {String} priceType\n         * @return {Object}\n         */\n        setPriceType: function (priceType) {\n            this.taxPriceType = priceType;\n\n            return this;\n        },\n\n        /**\n         * Check if Weee Tax must be shown.\n         *\n         * @param {Object} row\n         * @return {Boolean}\n         */\n        isShown: function (row) {\n            return row['price_info']['extension_attributes']['weee_attributes'].length;\n        },\n\n        /**\n         * Get Weee final price.\n         *\n         * @param {Object} row\n         * @return {HTMLElement} Weee final price html\n         */\n        getWeeeAdjustment: function (row) {\n            return row['price_info']['extension_attributes']['weee_adjustment'];\n        },\n\n        /**\n         * UnsanitizedHtml version of getWeeeAdjustment.\n         *\n         * @param {Object} row\n         * @return {HTMLElement} Weee final price html\n         */\n        getWeeeAdjustmentUnsanitizedHtml: function (row) {\n            return this.getWeeeAdjustment(row);\n        },\n\n        /**\n         * Return whether display setting is to display price including FPT only.\n         *\n         * @return {Boolean}\n         */\n        displayPriceInclFpt: function () {\n            return +this.source.data.displayWeee === this.inclFpt;\n        },\n\n        /**\n         * Return whether display setting is to display\n         * price including FPT and FPT description.\n         *\n         * @return {Boolean}\n         */\n        displayPriceInclFptDescr: function () {\n            return +this.source.data.displayWeee === this.inclFptWithDesc;\n        },\n\n        /**\n         * Return whether display setting is to display price\n         * excluding FPT but including FPT description and final price.\n         *\n         * @return {Boolean}\n         */\n        displayPriceExclFptDescr: function () {\n            return +this.source.data.displayWeee === this.exclFpt;\n        },\n\n        /**\n         * Return whether display setting is to display price excluding FPT.\n         *\n         * @return {Boolean}\n         */\n        displayPriceExclFpt: function () {\n            return +this.source.data.displayWeee === this.bothFptPrices;\n        },\n\n        /**\n         * Return whether display setting is to display price excluding tax.\n         *\n         * @return {Boolean}\n         */\n        displayPriceExclTax: function () {\n            return +this.source.data.displayTaxes === this.inclFptWithDesc;\n        },\n\n        /**\n         * Return whether display setting is to display price including tax.\n         *\n         * @return {Boolean}\n         */\n        displayPriceInclTax: function () {\n            return +this.source.data.displayTaxes === this.exclFpt;\n        },\n\n        /**\n         * Return whether display setting is to display\n         * both price including tax and price excluding tax.\n         *\n         * @return {Boolean}\n         */\n        displayBothPricesTax: function () {\n            return +this.source.data.displayTaxes === this.bothFptPrices;\n        }\n    });\n});\n","Magento_Weee/js/view/cart/totals/weee.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'Magento_Weee/js/view/checkout/summary/weee'\n], function (Component) {\n    'use strict';\n\n    return Component.extend({\n\n        /**\n         * @override\n         */\n        isFullMode: function () {\n            return true;\n        }\n    });\n});\n","Magento_Weee/js/view/checkout/summary/weee.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\n/**\n * @api\n */\n\ndefine([\n    'Magento_Checkout/js/view/summary/abstract-total',\n    'Magento_Checkout/js/model/quote',\n    'Magento_Checkout/js/model/totals',\n    'Magento_Catalog/js/price-utils'\n], function (Component, quote, totals) {\n    'use strict';\n\n    return Component.extend({\n        defaults: {\n            template: 'Magento_Weee/checkout/summary/weee'\n        },\n        isIncludedInSubtotal: window.checkoutConfig.isIncludedInSubtotal,\n        totals: totals.totals,\n\n        /**\n         * @returns {Number}\n         */\n        getWeeeTaxSegment: function () {\n            var weee = totals.getSegment('weee_tax') || totals.getSegment('weee');\n\n            if (weee !== null && weee.hasOwnProperty('value')) {\n                return weee.value;\n            }\n\n            return 0;\n        },\n\n        /**\n         * Get weee value\n         * @returns {String}\n         */\n        getValue: function () {\n            return this.getFormattedPrice(this.getWeeeTaxSegment());\n        },\n\n        /**\n         * Weee display flag\n         * @returns {Boolean}\n         */\n        isDisplayed: function () {\n            return this.isFullMode() && this.getWeeeTaxSegment() > 0;\n        }\n    });\n});\n","Magento_Weee/js/view/checkout/summary/item/price/row_excl_tax.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\n/**\n * @api\n */\n\ndefine([\n    'Magento_Weee/js/view/checkout/summary/item/price/weee'\n], function (weee) {\n    'use strict';\n\n    return weee.extend({\n        defaults: {\n            template: 'Magento_Weee/checkout/summary/item/price/row_excl_tax'\n        },\n\n        /**\n         * @param {Object} item\n         * @return {Number}\n         */\n        getFinalRowDisplayPriceExclTax: function (item) {\n            var rowTotalExclTax = parseFloat(item['row_total']);\n\n            if (!window.checkoutConfig.getIncludeWeeeFlag) {\n                rowTotalExclTax += parseFloat(item['qty']) *\n                    parseFloat(item['weee_tax_applied_amount']);\n            }\n\n            return rowTotalExclTax;\n        },\n\n        /**\n         * @param {Object} item\n         * @return {Number}\n         */\n        getRowDisplayPriceExclTax: function (item) {\n            var rowTotalExclTax = parseFloat(item['row_total']);\n\n            if (window.checkoutConfig.getIncludeWeeeFlag) {\n                rowTotalExclTax += this.getRowWeeeTaxExclTax(item);\n            }\n\n            return rowTotalExclTax;\n        },\n\n        /**\n         * @param {Object} item\n         * @return {Number}\n         */\n        getRowWeeeTaxExclTax: function (item) {\n            var totalWeeeTaxExclTaxApplied = 0,\n                weeeTaxAppliedAmounts;\n\n            if (item['weee_tax_applied']) {\n                weeeTaxAppliedAmounts = JSON.parse(item['weee_tax_applied']);\n                weeeTaxAppliedAmounts.forEach(function (weeeTaxAppliedAmount) {\n                    totalWeeeTaxExclTaxApplied += parseFloat(Math.max(weeeTaxAppliedAmount['row_amount'], 0));\n                });\n            }\n\n            return totalWeeeTaxExclTaxApplied;\n        }\n\n    });\n});\n","Magento_Weee/js/view/checkout/summary/item/price/row_incl_tax.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\n/**\n * @api\n */\n\ndefine([\n    'Magento_Weee/js/view/checkout/summary/item/price/weee'\n], function (weee) {\n    'use strict';\n\n    return weee.extend({\n        defaults: {\n            template: 'Magento_Weee/checkout/summary/item/price/row_incl_tax',\n            displayArea: 'row_incl_tax'\n        },\n\n        /**\n         * @param {Object} item\n         * @return {Number}\n         */\n        getFinalRowDisplayPriceInclTax: function (item) {\n            var rowTotalInclTax = parseFloat(item['row_total_incl_tax']);\n\n            if (!window.checkoutConfig.getIncludeWeeeFlag) {\n                rowTotalInclTax += this.getRowWeeeTaxInclTax(item);\n            }\n\n            return rowTotalInclTax;\n        },\n\n        /**\n         * @param {Object} item\n         * @return {Number}\n         */\n        getRowDisplayPriceInclTax: function (item) {\n            var rowTotalInclTax = parseFloat(item['row_total_incl_tax']);\n\n            if (window.checkoutConfig.getIncludeWeeeFlag) {\n                rowTotalInclTax += this.getRowWeeeTaxInclTax(item);\n            }\n\n            return rowTotalInclTax;\n        },\n\n        /**\n         * @param {Object}item\n         * @return {Number}\n         */\n        getRowWeeeTaxInclTax: function (item) {\n            var totalWeeeTaxInclTaxApplied = 0,\n                weeeTaxAppliedAmounts;\n\n            if (item['weee_tax_applied']) {\n                weeeTaxAppliedAmounts = JSON.parse(item['weee_tax_applied']);\n                weeeTaxAppliedAmounts.forEach(function (weeeTaxAppliedAmount) {\n                    totalWeeeTaxInclTaxApplied += parseFloat(Math.max(weeeTaxAppliedAmount['row_amount_incl_tax'], 0));\n                });\n            }\n\n            return totalWeeeTaxInclTaxApplied;\n        }\n\n    });\n});\n","Magento_Weee/js/view/checkout/summary/item/price/weee.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\n/**\n * @api\n */\n\ndefine([\n    'Magento_Checkout/js/view/summary/abstract-total',\n    'Magento_Checkout/js/model/quote'\n], function (Component) {\n    'use strict';\n\n    return Component.extend({\n        /**\n         * @param {Object} item\n         * @return {Boolean}\n         */\n        isDisplayPriceWithWeeeDetails: function (item) {\n            if (!parseFloat(item['weee_tax_applied_amount']) || parseFloat(item['weee_tax_applied_amount'] <= 0)) {\n                return false;\n            }\n\n            return window.checkoutConfig.isDisplayPriceWithWeeeDetails;\n        },\n\n        /**\n         * @param {Object} item\n         * @return {Boolean}\n         */\n        isDisplayFinalPrice: function (item) {\n            if (!parseFloat(item['weee_tax_applied_amount'])) {\n                return false;\n            }\n\n            return window.checkoutConfig.isDisplayFinalPrice;\n        },\n\n        /**\n         * @param {Object} item\n         * @return {Array}\n         */\n        getWeeeTaxApplied: function (item) {\n            if (item['weee_tax_applied']) {\n                return JSON.parse(item['weee_tax_applied']);\n            }\n\n            return [];\n        }\n    });\n});\n","Magento_Swatches/js/swatch-renderer.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'jquery',\n    'underscore',\n    'mage/template',\n    'mage/smart-keyboard-handler',\n    'mage/translate',\n    'priceUtils',\n    'jquery-ui-modules/widget',\n    'jquery/jquery.parsequery',\n    'mage/validation/validation'\n], function ($, _, mageTemplate, keyboardHandler, $t, priceUtils) {\n    'use strict';\n\n    /**\n     * Extend form validation to support swatch accessibility\n     */\n    $.widget('mage.validation', $.mage.validation, {\n        /**\n         * Handle form with swatches validation. Focus on first invalid swatch block.\n         *\n         * @param {jQuery.Event} event\n         * @param {Object} validation\n         */\n        listenFormValidateHandler: function (event, validation) {\n            var swatchWrapper, firstActive, swatches, swatch, successList, errorList, firstSwatch;\n\n            this._superApply(arguments);\n\n            swatchWrapper = '.swatch-attribute-options';\n            swatches = $(event.target).find(swatchWrapper);\n\n            if (!swatches.length) {\n                return;\n            }\n\n            swatch = '.swatch-attribute';\n            firstActive = $(validation.errorList[0].element || []);\n            successList = validation.successList;\n            errorList = validation.errorList;\n            firstSwatch = $(firstActive).parent(swatch).find(swatchWrapper);\n\n            keyboardHandler.focus(swatches);\n\n            $.each(successList, function (index, item) {\n                $(item).parent(swatch).find(swatchWrapper).attr('aria-invalid', false);\n            });\n\n            $.each(errorList, function (index, item) {\n                $(item.element).parent(swatch).find(swatchWrapper).attr('aria-invalid', true);\n            });\n\n            if (firstSwatch.length) {\n                $(firstSwatch).trigger('focus');\n            }\n        }\n    });\n\n    /**\n     * Render tooltips by attributes (only to up).\n     * Required element attributes:\n     *  - data-option-type (integer, 0-3)\n     *  - data-option-label (string)\n     *  - data-option-tooltip-thumb\n     *  - data-option-tooltip-value\n     *  - data-thumb-width\n     *  - data-thumb-height\n     */\n    $.widget('mage.SwatchRendererTooltip', {\n        options: {\n            delay: 200,                             //how much ms before tooltip to show\n            tooltipClass: 'swatch-option-tooltip'  //configurable, but remember about css\n        },\n\n        /**\n         * @private\n         */\n        _init: function () {\n            var $widget = this,\n                $this = this.element,\n                $element = $('.' + $widget.options.tooltipClass),\n                timer,\n                type = parseInt($this.data('option-type'), 10),\n                label = $this.data('option-label'),\n                thumb = $this.data('option-tooltip-thumb'),\n                value = $this.data('option-tooltip-value'),\n                width = $this.data('thumb-width'),\n                height = $this.data('thumb-height'),\n                $image,\n                $title,\n                $corner;\n\n            if (!$element.length) {\n                $element = $('<div class=\"' +\n                    $widget.options.tooltipClass +\n                    '\"><div class=\"image\"></div><div class=\"title\"></div><div class=\"corner\"></div></div>'\n                );\n                $('body').append($element);\n            }\n\n            $image = $element.find('.image');\n            $title = $element.find('.title');\n            $corner = $element.find('.corner');\n\n            $this.on('mouseenter', function () {\n                if (!$this.hasClass('disabled')) {\n                    timer = setTimeout(\n                        function () {\n                            var leftOpt = null,\n                                leftCorner = 0,\n                                left,\n                                $window;\n\n                            if (type === 2) {\n                                // Image\n                                $image.css({\n                                    'background': 'url(\"' + thumb + '\") no-repeat center', //Background case\n                                    'background-size': 'initial',\n                                    'width': width + 'px',\n                                    'height': height + 'px'\n                                });\n                                $image.show();\n                            } else if (type === 1) {\n                                // Color\n                                $image.css({\n                                    background: value\n                                });\n                                $image.show();\n                            } else if (type === 0 || type === 3) {\n                                // Default\n                                $image.hide();\n                            }\n\n                            $title.text(label);\n\n                            leftOpt = $this.offset().left;\n                            left = leftOpt + $this.width() / 2 - $element.width() / 2;\n                            $window = $(window);\n\n                            // the numbers (5 and 5) is magick constants for offset from left or right page\n                            if (left < 0) {\n                                left = 5;\n                            } else if (left + $element.width() > $window.width()) {\n                                left = $window.width() - $element.width() - 5;\n                            }\n\n                            // the numbers (6,  3 and 18) is magick constants for offset tooltip\n                            leftCorner = 0;\n\n                            if ($element.width() < $this.width()) {\n                                leftCorner = $element.width() / 2 - 3;\n                            } else {\n                                leftCorner = (leftOpt > left ? leftOpt - left : left - leftOpt) + $this.width() / 2 - 6;\n                            }\n\n                            $corner.css({\n                                left: leftCorner\n                            });\n                            $element.css({\n                                left: left,\n                                top: $this.offset().top - $element.height() - $corner.height() - 18\n                            }).show();\n                        },\n                        $widget.options.delay\n                    );\n                }\n            });\n\n            $this.on('mouseleave', function () {\n                $element.hide();\n                clearTimeout(timer);\n            });\n\n            $(document).on('tap', function () {\n                $element.hide();\n                clearTimeout(timer);\n            });\n\n            $this.on('tap', function (event) {\n                event.stopPropagation();\n            });\n        }\n    });\n\n    /**\n     * Render swatch controls with options and use tooltips.\n     * Required two json:\n     *  - jsonConfig (magento's option config)\n     *  - jsonSwatchConfig (swatch's option config)\n     *\n     *  Tuning:\n     *  - numberToShow (show \"more\" button if options are more)\n     *  - onlySwatches (hide selectboxes)\n     *  - moreButtonText (text for \"more\" button)\n     *  - selectorProduct (selector for product container)\n     *  - selectorProductPrice (selector for change price)\n     */\n    $.widget('mage.SwatchRenderer', {\n        options: {\n            classes: {\n                attributeClass: 'swatch-attribute',\n                attributeLabelClass: 'swatch-attribute-label',\n                attributeSelectedOptionLabelClass: 'swatch-attribute-selected-option',\n                attributeOptionsWrapper: 'swatch-attribute-options',\n                attributeInput: 'swatch-input',\n                optionClass: 'swatch-option',\n                selectClass: 'swatch-select',\n                moreButton: 'swatch-more',\n                loader: 'swatch-option-loading'\n            },\n            // option's json config\n            jsonConfig: {},\n\n            // swatch's json config\n            jsonSwatchConfig: {},\n\n            // selector of parental block of prices and swatches (need to know where to seek for price block)\n            selectorProduct: '.product-info-main',\n\n            // selector of price wrapper (need to know where set price)\n            selectorProductPrice: '[data-role=priceBox]',\n\n            //selector of product images gallery wrapper\n            mediaGallerySelector: '[data-gallery-role=gallery-placeholder]',\n\n            // selector of category product tile wrapper\n            selectorProductTile: '.product-item',\n\n            // number of controls to show (false or zero = show all)\n            numberToShow: false,\n\n            // show only swatch controls\n            onlySwatches: false,\n\n            // enable label for control\n            enableControlLabel: true,\n\n            // control label id\n            controlLabelId: '',\n\n            // text for more button\n            moreButtonText: $t('More'),\n\n            // Callback url for media\n            mediaCallback: '',\n\n            // Local media cache\n            mediaCache: {},\n\n            // Cache for BaseProduct images. Needed when option unset\n            mediaGalleryInitial: [{}],\n\n            // Use ajax to get image data\n            useAjax: false,\n\n            /**\n             * Defines the mechanism of how images of a gallery should be\n             * updated when user switches between configurations of a product.\n             *\n             * As for now value of this option can be either 'replace' or 'prepend'.\n             *\n             * @type {String}\n             */\n            gallerySwitchStrategy: 'replace',\n\n            // whether swatches are rendered in product list or on product page\n            inProductList: false,\n\n            // sly-old-price block selector\n            slyOldPriceSelector: '.sly-old-price',\n\n            // tier prise selectors start\n            tierPriceTemplateSelector: '#tier-prices-template',\n            tierPriceBlockSelector: '[data-role=\"tier-price-block\"]',\n            tierPriceTemplate: '',\n            // tier prise selectors end\n\n            // A price label selector\n            normalPriceLabelSelector: '.product-info-main .normal-price .price-label',\n            qtyInfo: '#qty'\n        },\n\n        /**\n         * Get chosen product\n         *\n         * @returns int|null\n         */\n        getProduct: function () {\n            var products = this._CalcProducts();\n\n            return _.isArray(products) ? products[0] : null;\n        },\n\n        /**\n         * Get chosen product id\n         *\n         * @returns int|null\n         */\n        getProductId: function () {\n            var products = this._CalcProducts();\n\n            return _.isArray(products) && products.length === 1 ? products[0] : null;\n        },\n\n        /**\n         * @private\n         */\n        _init: function () {\n            // Don't render the same set of swatches twice\n            if ($(this.element).attr('data-rendered')) {\n                return;\n            }\n\n            $(this.element).attr('data-rendered', true);\n\n            if (_.isEmpty(this.options.jsonConfig.images)) {\n                this.options.useAjax = true;\n                // creates debounced variant of _LoadProductMedia()\n                // to use it in events handlers instead of _LoadProductMedia()\n                this._debouncedLoadProductMedia = _.debounce(this._LoadProductMedia.bind(this), 500);\n            }\n\n            this.options.tierPriceTemplate = $(this.options.tierPriceTemplateSelector).html();\n\n            if (this.options.jsonConfig !== '' && this.options.jsonSwatchConfig !== '') {\n                // store unsorted attributes\n                this.options.jsonConfig.mappedAttributes = _.clone(this.options.jsonConfig.attributes);\n                this._sortAttributes();\n                this._RenderControls();\n                this._setPreSelectedGallery();\n                $(this.element).trigger('swatch.initialized');\n            } else {\n                console.log('SwatchRenderer: No input data received');\n            }\n        },\n\n        /**\n         * @private\n         */\n        _sortAttributes: function () {\n            this.options.jsonConfig.attributes = _.sortBy(this.options.jsonConfig.attributes, function (attribute) {\n                return parseInt(attribute.position, 10);\n            });\n        },\n\n        /**\n         * @private\n         */\n        _create: function () {\n            var options = this.options,\n                gallery = $('[data-gallery-role=gallery-placeholder]', '.column.main'),\n                productData = this._determineProductData(),\n                $main = productData.isInProductView ?\n                    this.element.parents('.column.main') :\n                    this.element.parents('.product-item-info');\n\n            if (productData.isInProductView) {\n                gallery.data('gallery') ?\n                    this._onGalleryLoaded(gallery) :\n                    gallery.on('gallery:loaded', this._onGalleryLoaded.bind(this, gallery));\n            } else {\n                options.mediaGalleryInitial = [{\n                    'img': $main.find('.product-image-photo').attr('src')\n                }];\n            }\n\n            this.productForm = this.element.parents(this.options.selectorProductTile).find('form:first');\n            this.inProductList = this.productForm.length > 0;\n            $(this.options.qtyInfo).on('input', this._onQtyChanged.bind(this));\n        },\n\n        /**\n         * Determine product id and related data\n         *\n         * @returns {{productId: *, isInProductView: bool}}\n         * @private\n         */\n        _determineProductData: function () {\n            // Check if product is in a list of products.\n            var productId,\n                isInProductView = false;\n\n            productId = this.element.parents('.product-item-details')\n                    .find('.price-box.price-final_price').attr('data-product-id');\n\n            if (!productId) {\n                // Check individual product.\n                productId = $('[name=product]').val();\n                isInProductView = productId > 0;\n            }\n\n            return {\n                productId: productId,\n                isInProductView: isInProductView\n            };\n        },\n\n        /**\n         * Render controls\n         *\n         * @private\n         */\n        _RenderControls: function () {\n            var $widget = this,\n                container = this.element,\n                classes = this.options.classes,\n                chooseText = this.options.jsonConfig.chooseText,\n                showTooltip = this.options.showTooltip;\n\n            $widget.optionsMap = {};\n\n            $.each(this.options.jsonConfig.attributes, function () {\n                var item = this,\n                    controlLabelId = 'option-label-' + item.code + '-' + item.id,\n                    options = $widget._RenderSwatchOptions(item, controlLabelId),\n                    select = $widget._RenderSwatchSelect(item, chooseText),\n                    input = $widget._RenderFormInput(item),\n                    listLabel = '',\n                    label = '';\n\n                // Show only swatch controls\n                if ($widget.options.onlySwatches && !$widget.options.jsonSwatchConfig.hasOwnProperty(item.id)) {\n                    return;\n                }\n\n                if ($widget.options.enableControlLabel) {\n                    label +=\n                        '<span id=\"' + controlLabelId + '\" class=\"' + classes.attributeLabelClass + '\">' +\n                        $('<i></i>').text(item.label).html() +\n                        '</span>' +\n                        '<span class=\"' + classes.attributeSelectedOptionLabelClass + '\"></span>';\n                }\n\n                if ($widget.inProductList) {\n                    $widget.productForm.append(input);\n                    input = '';\n                    listLabel = 'aria-label=\"' + $('<i></i>').text(item.label).html() + '\"';\n                } else {\n                    listLabel = 'aria-labelledby=\"' + controlLabelId + '\"';\n                }\n\n                // Create new control\n                container.append(\n                    '<div class=\"' + classes.attributeClass + ' ' + item.code + '\" ' +\n                         'data-attribute-code=\"' + item.code + '\" ' +\n                         'data-attribute-id=\"' + item.id + '\">' +\n                        label +\n                        '<div aria-activedescendant=\"\" ' +\n                             'tabindex=\"0\" ' +\n                             'aria-invalid=\"false\" ' +\n                             'aria-required=\"true\" ' +\n                             'role=\"listbox\" ' + listLabel +\n                             'class=\"' + classes.attributeOptionsWrapper + ' clearfix\">' +\n                            options + select +\n                        '</div>' + input +\n                    '</div>'\n                );\n\n                $widget.optionsMap[item.id] = {};\n\n                // Aggregate options array to hash (key => value)\n                $.each(item.options, function () {\n                    if (this.products.length > 0) {\n                        $widget.optionsMap[item.id][this.id] = {\n                            price: parseInt(\n                                $widget.options.jsonConfig.optionPrices[this.products[0]].finalPrice.amount,\n                                10\n                            ),\n                            products: this.products\n                        };\n                    }\n                });\n            });\n\n            if (showTooltip === 1) {\n                // Connect Tooltip\n                container\n                    .find('[data-option-type=\"1\"], [data-option-type=\"2\"],' +\n                        ' [data-option-type=\"0\"], [data-option-type=\"3\"]')\n                    .SwatchRendererTooltip();\n            }\n\n            // Hide all elements below more button\n            $('.' + classes.moreButton).nextAll().hide();\n\n            // Handle events like click or change\n            $widget._EventListener();\n\n            // Rewind options\n            $widget._Rewind(container);\n\n            //Emulate click on all swatches from Request\n            $widget._EmulateSelected($.parseQuery());\n            $widget._EmulateSelected($widget._getSelectedAttributes());\n        },\n\n        /**\n         * Render swatch options by part of config\n         *\n         * @param {Object} config\n         * @param {String} controlId\n         * @returns {String}\n         * @private\n         */\n        _RenderSwatchOptions: function (config, controlId) {\n            var optionConfig = this.options.jsonSwatchConfig[config.id],\n                optionClass = this.options.classes.optionClass,\n                sizeConfig = this.options.jsonSwatchImageSizeConfig,\n                moreLimit = parseInt(this.options.numberToShow, 10),\n                moreClass = this.options.classes.moreButton,\n                moreText = this.options.moreButtonText,\n                countAttributes = 0,\n                html = '';\n\n            if (!this.options.jsonSwatchConfig.hasOwnProperty(config.id)) {\n                return '';\n            }\n\n            $.each(config.options, function (index) {\n                var id,\n                    type,\n                    value,\n                    thumb,\n                    label,\n                    width,\n                    height,\n                    attr,\n                    swatchImageWidth,\n                    swatchImageHeight;\n\n                if (!optionConfig.hasOwnProperty(this.id)) {\n                    return '';\n                }\n\n                // Add more button\n                if (moreLimit === countAttributes++) {\n                    html += '<a href=\"#\" class=\"' + moreClass + '\"><span>' + moreText + '</span></a>';\n                }\n\n                id = this.id;\n                type = parseInt(optionConfig[id].type, 10);\n                value = optionConfig[id].hasOwnProperty('value') ?\n                    $('<i></i>').text(optionConfig[id].value).html() : '';\n                thumb = optionConfig[id].hasOwnProperty('thumb') ? optionConfig[id].thumb : '';\n                width = _.has(sizeConfig, 'swatchThumb') ? sizeConfig.swatchThumb.width : 110;\n                height = _.has(sizeConfig, 'swatchThumb') ? sizeConfig.swatchThumb.height : 90;\n                label = this.label ? $('<i></i>').text(this.label).html() : '';\n                attr =\n                    ' id=\"' + controlId + '-item-' + id + '\"' +\n                    ' index=\"' + index + '\"' +\n                    ' aria-checked=\"false\"' +\n                    ' aria-describedby=\"' + controlId + '\"' +\n                    ' tabindex=\"0\"' +\n                    ' data-option-type=\"' + type + '\"' +\n                    ' data-option-id=\"' + id + '\"' +\n                    ' data-option-label=\"' + label + '\"' +\n                    ' aria-label=\"' + label + '\"' +\n                    ' role=\"option\"' +\n                    ' data-thumb-width=\"' + width + '\"' +\n                    ' data-thumb-height=\"' + height + '\"';\n\n                attr += thumb !== '' ? ' data-option-tooltip-thumb=\"' + thumb + '\"' : '';\n                attr += value !== '' ? ' data-option-tooltip-value=\"' + value + '\"' : '';\n\n                swatchImageWidth = _.has(sizeConfig, 'swatchImage') ? sizeConfig.swatchImage.width : 30;\n                swatchImageHeight = _.has(sizeConfig, 'swatchImage') ? sizeConfig.swatchImage.height : 20;\n\n                if (!this.hasOwnProperty('products') || this.products.length <= 0) {\n                    attr += ' data-option-empty=\"true\"';\n                }\n\n                if (type === 0) {\n                    // Text\n                    html += '<div class=\"' + optionClass + ' text\" ' + attr + '>' + (value ? value : label) +\n                        '</div>';\n                } else if (type === 1) {\n                    // Color\n                    html += '<div class=\"' + optionClass + ' color\" ' + attr +\n                        ' style=\"background: ' + value +\n                        ' no-repeat center; background-size: initial;\">' + '' +\n                        '</div>';\n                } else if (type === 2) {\n                    // Image\n                    html += '<div class=\"' + optionClass + ' image\" ' + attr +\n                        ' style=\"background: url(' + value + ') no-repeat center; background-size: initial;width:' +\n                        swatchImageWidth + 'px; height:' + swatchImageHeight + 'px\">' + '' +\n                        '</div>';\n                } else if (type === 3) {\n                    // Clear\n                    html += '<div class=\"' + optionClass + '\" ' + attr + '></div>';\n                } else {\n                    // Default\n                    html += '<div class=\"' + optionClass + '\" ' + attr + '>' + label + '</div>';\n                }\n            });\n\n            return html;\n        },\n\n        /**\n         * Render select by part of config\n         *\n         * @param {Object} config\n         * @param {String} chooseText\n         * @returns {String}\n         * @private\n         */\n        _RenderSwatchSelect: function (config, chooseText) {\n            var html;\n\n            if (this.options.jsonSwatchConfig.hasOwnProperty(config.id)) {\n                return '';\n            }\n\n            html =\n                '<select class=\"' + this.options.classes.selectClass + ' ' + config.code + '\">' +\n                '<option value=\"0\" data-option-id=\"0\">' + chooseText + '</option>';\n\n            $.each(config.options, function () {\n                var label = this.label,\n                    attr = ' value=\"' + this.id + '\" data-option-id=\"' + this.id + '\"';\n\n                if (!this.hasOwnProperty('products') || this.products.length <= 0) {\n                    attr += ' data-option-empty=\"true\"';\n                }\n\n                html += '<option ' + attr + '>' + label + '</option>';\n            });\n\n            html += '</select>';\n\n            return html;\n        },\n\n        /**\n         * Input for submit form.\n         * This control shouldn't have \"type=hidden\", \"display: none\" for validation work :(\n         *\n         * @param {Object} config\n         * @private\n         */\n        _RenderFormInput: function (config) {\n            return '<input class=\"' + this.options.classes.attributeInput + ' super-attribute-select\" ' +\n                'name=\"super_attribute[' + config.id + ']\" ' +\n                'type=\"text\" ' +\n                'value=\"\" ' +\n                'data-selector=\"super_attribute[' + config.id + ']\" ' +\n                'data-validate=\"{required: true}\" ' +\n                'aria-required=\"true\" ' +\n                'aria-invalid=\"false\">';\n        },\n\n        /**\n         * Event listener\n         *\n         * @private\n         */\n        _EventListener: function () {\n            var $widget = this,\n                options = this.options.classes,\n                target;\n\n            $widget.element.on('click', '.' + options.optionClass, function () {\n                return $widget._OnClick($(this), $widget);\n            });\n\n            $widget.element.on('change', '.' + options.selectClass, function () {\n                return $widget._OnChange($(this), $widget);\n            });\n\n            $widget.element.on('click', '.' + options.moreButton, function (e) {\n                e.preventDefault();\n\n                return $widget._OnMoreClick($(this));\n            });\n\n            $widget.element.on('keydown', function (e) {\n                if (e.which === 13) {\n                    target = $(e.target);\n\n                    if (target.is('.' + options.optionClass)) {\n                        return $widget._OnClick(target, $widget);\n                    } else if (target.is('.' + options.selectClass)) {\n                        return $widget._OnChange(target, $widget);\n                    } else if (target.is('.' + options.moreButton)) {\n                        e.preventDefault();\n\n                        return $widget._OnMoreClick(target);\n                    }\n                }\n            });\n        },\n\n        /**\n         * Load media gallery using ajax or json config.\n         *\n         * @private\n         */\n        _loadMedia: function () {\n            var $main = this.inProductList ?\n                    this.element.parents('.product-item-info') :\n                    this.element.parents('.column.main'),\n                images;\n\n            if (this.options.useAjax) {\n                this._debouncedLoadProductMedia();\n            }  else {\n                images = this.options.jsonConfig.images[this.getProduct()];\n\n                if (!images) {\n                    images = this.options.mediaGalleryInitial;\n                }\n                this.updateBaseImage(this._sortImages(images), $main, !this.inProductList);\n            }\n        },\n\n        /**\n         * Sorting images array\n         *\n         * @private\n         */\n        _sortImages: function (images) {\n            return _.sortBy(images, function (image) {\n                return parseInt(image.position, 10);\n            });\n        },\n\n        /**\n         * Event for swatch options\n         *\n         * @param {Object} $this\n         * @param {Object} $widget\n         * @private\n         */\n        _OnClick: function ($this, $widget) {\n            var $parent = $this.parents('.' + $widget.options.classes.attributeClass),\n                $wrapper = $this.parents('.' + $widget.options.classes.attributeOptionsWrapper),\n                $label = $parent.find('.' + $widget.options.classes.attributeSelectedOptionLabelClass),\n                attributeId = $parent.data('attribute-id'),\n                $input = $parent.find('.' + $widget.options.classes.attributeInput),\n                checkAdditionalData = JSON.parse(this.options.jsonSwatchConfig[attributeId]['additional_data']),\n                $priceBox = $widget.element.parents($widget.options.selectorProduct)\n                    .find(this.options.selectorProductPrice);\n\n            if ($widget.inProductList) {\n                $input = $widget.productForm.find(\n                    '.' + $widget.options.classes.attributeInput + '[name=\"super_attribute[' + attributeId + ']\"]'\n                );\n            }\n\n            if ($this.hasClass('disabled')) {\n                return;\n            }\n\n            if ($this.hasClass('selected')) {\n                $parent.removeAttr('data-option-selected').find('.selected').removeClass('selected');\n                $input.val('');\n                $label.text('');\n                $this.attr('aria-checked', false);\n            } else {\n                $parent.attr('data-option-selected', $this.data('option-id')).find('.selected').removeClass('selected');\n                $label.text($this.data('option-label'));\n                $input.val($this.data('option-id'));\n                $input.attr('data-attr-name', this._getAttributeCodeById(attributeId));\n                $this.addClass('selected');\n                $widget._toggleCheckedAttributes($this, $wrapper);\n            }\n\n            $widget._Rebuild();\n\n            if ($priceBox.is(':data(mage-priceBox)')) {\n                $widget._UpdatePrice();\n            }\n\n            $(document).trigger('updateMsrpPriceBlock',\n                [\n                    this._getSelectedOptionPriceIndex(),\n                    $widget.options.jsonConfig.optionPrices,\n                    $priceBox\n                ]);\n\n            if (parseInt(checkAdditionalData['update_product_preview_image'], 10) === 1) {\n                $widget._loadMedia();\n            }\n\n            $input.trigger('change');\n        },\n\n        /**\n         * Get selected option price index\n         *\n         * @return {String|undefined}\n         * @private\n         */\n        _getSelectedOptionPriceIndex: function () {\n            var allowedProduct = this._getAllowedProductWithMinPrice(this._CalcProducts());\n\n            if (_.isEmpty(allowedProduct)) {\n                return undefined;\n            }\n\n            return allowedProduct;\n        },\n\n        /**\n         * Get human readable attribute code (eg. size, color) by it ID from configuration\n         *\n         * @param {Number} attributeId\n         * @returns {*}\n         * @private\n         */\n        _getAttributeCodeById: function (attributeId) {\n            var attribute = this.options.jsonConfig.mappedAttributes[attributeId];\n\n            return attribute ? attribute.code : attributeId;\n        },\n\n        /**\n         * Toggle accessibility attributes\n         *\n         * @param {Object} $this\n         * @param {Object} $wrapper\n         * @private\n         */\n        _toggleCheckedAttributes: function ($this, $wrapper) {\n            $wrapper.attr('aria-activedescendant', $this.attr('id'))\n                    .find('.' + this.options.classes.optionClass).attr('aria-checked', false);\n            $this.attr('aria-checked', true);\n        },\n\n        /**\n         * Event for select\n         *\n         * @param {Object} $this\n         * @param {Object} $widget\n         * @private\n         */\n        _OnChange: function ($this, $widget) {\n            var $parent = $this.parents('.' + $widget.options.classes.attributeClass),\n                attributeId = $parent.data('attribute-id'),\n                $input = $parent.find('.' + $widget.options.classes.attributeInput);\n\n            if ($widget.productForm.length > 0) {\n                $input = $widget.productForm.find(\n                    '.' + $widget.options.classes.attributeInput + '[name=\"super_attribute[' + attributeId + ']\"]'\n                );\n            }\n\n            if ($this.val() > 0) {\n                $parent.attr('data-option-selected', $this.val());\n                $input.val($this.val());\n            } else {\n                $parent.removeAttr('data-option-selected');\n                $input.val('');\n            }\n\n            $widget._Rebuild();\n            $widget._UpdatePrice();\n            $widget._loadMedia();\n            $input.trigger('change');\n        },\n\n        /**\n         * Event for more switcher\n         *\n         * @param {Object} $this\n         * @private\n         */\n        _OnMoreClick: function ($this) {\n            $this.nextAll().show();\n            $this.trigger('blur').remove();\n        },\n\n        /**\n         * Rewind options for controls\n         *\n         * @private\n         */\n        _Rewind: function (controls) {\n            controls.find('div[data-option-id], option[data-option-id]')\n                .removeClass('disabled')\n                .prop('disabled', false);\n            controls.find('div[data-option-empty], option[data-option-empty]')\n                .attr('disabled', true)\n                .addClass('disabled')\n                .attr('tabindex', '-1');\n        },\n\n        /**\n         * Rebuild container\n         *\n         * @private\n         */\n        _Rebuild: function () {\n            var $widget = this,\n                controls = $widget.element.find('.' + $widget.options.classes.attributeClass + '[data-attribute-id]'),\n                selected = controls.filter('[data-option-selected]');\n\n            // Enable all options\n            $widget._Rewind(controls);\n\n            // done if nothing selected\n            if (selected.length <= 0) {\n                return;\n            }\n\n            // Disable not available options\n            controls.each(function () {\n                var $this = $(this),\n                    id = $this.data('attribute-id'),\n                    products = $widget._CalcProducts(id);\n\n                if (selected.length === 1 && selected.first().data('attribute-id') === id) {\n                    return;\n                }\n\n                $this.find('[data-option-id]').each(function () {\n                    var $element = $(this),\n                        option = $element.data('option-id');\n\n                    if (!$widget.optionsMap.hasOwnProperty(id) || !$widget.optionsMap[id].hasOwnProperty(option) ||\n                        $element.hasClass('selected') ||\n                        $element.is(':selected')) {\n                        return;\n                    }\n\n                    if (_.intersection(products, $widget.optionsMap[id][option].products).length <= 0) {\n                        $element.attr('disabled', true).addClass('disabled');\n                    }\n                });\n            });\n        },\n\n        /**\n         * Get selected product list\n         *\n         * @returns {Array}\n         * @private\n         */\n        _CalcProducts: function ($skipAttributeId) {\n            var $widget = this,\n                selectedOptions = '.' + $widget.options.classes.attributeClass + '[data-option-selected]',\n                products = [];\n\n            // Generate intersection of products\n            $widget.element.find(selectedOptions).each(function () {\n                var id = $(this).data('attribute-id'),\n                    option = $(this).attr('data-option-selected');\n\n                if ($skipAttributeId !== undefined && $skipAttributeId === id) {\n                    return;\n                }\n\n                if (!$widget.optionsMap.hasOwnProperty(id) || !$widget.optionsMap[id].hasOwnProperty(option)) {\n                    return;\n                }\n\n                if (products.length === 0) {\n                    products = $widget.optionsMap[id][option].products;\n                } else {\n                    products = _.intersection(products, $widget.optionsMap[id][option].products);\n                }\n            });\n\n            return products;\n        },\n\n        /**\n         * Update total price\n         *\n         * @private\n         */\n        _UpdatePrice: function () {\n            var $widget = this,\n                $product = $widget.element.parents($widget.options.selectorProduct),\n                $productPrice = $product.find(this.options.selectorProductPrice),\n                result = $widget._getNewPrices(),\n                tierPriceHtml,\n                isShow;\n\n            $productPrice.trigger(\n                'updatePrice',\n                {\n                    'prices': $widget._getPrices(result, $productPrice.priceBox('option').prices)\n                }\n            );\n\n            isShow = typeof result != 'undefined' && result.oldPrice.amount !== result.finalPrice.amount;\n\n            $productPrice.find('span:first').toggleClass('special-price', isShow);\n\n            $product.find(this.options.slyOldPriceSelector)[isShow ? 'show' : 'hide']();\n\n            if (typeof result != 'undefined' && result.tierPrices && result.tierPrices.length) {\n                if (this.options.tierPriceTemplate) {\n                    tierPriceHtml = mageTemplate(\n                        this.options.tierPriceTemplate,\n                        {\n                            'tierPrices': result.tierPrices,\n                            '$t': $t,\n                            'currencyFormat': this.options.jsonConfig.currencyFormat,\n                            'priceUtils': priceUtils\n                        }\n                    );\n                    $(this.options.tierPriceBlockSelector).html(tierPriceHtml).show();\n                }\n            } else {\n                $(this.options.tierPriceBlockSelector).hide();\n            }\n\n            $(this.options.normalPriceLabelSelector).hide();\n\n            _.each($('.' + this.options.classes.attributeOptionsWrapper), function (attribute) {\n                if ($(attribute).find('.' + this.options.classes.optionClass + '.selected').length === 0) {\n                    if ($(attribute).find('.' + this.options.classes.selectClass).length > 0) {\n                        _.each($(attribute).find('.' + this.options.classes.selectClass), function (dropdown) {\n                            if ($(dropdown).val() === '0') {\n                                $(this.options.normalPriceLabelSelector).show();\n                            }\n                        }.bind(this));\n                    } else {\n                        $(this.options.normalPriceLabelSelector).show();\n                    }\n                }\n            }.bind(this));\n        },\n\n        /**\n         * Get new prices for selected options\n         *\n         * @returns {*}\n         * @private\n         */\n        _getNewPrices: function () {\n            var $widget = this,\n                newPrices = $widget.options.jsonConfig.prices,\n                allowedProduct = this._getAllowedProductWithMinPrice(this._CalcProducts());\n\n            if (!_.isEmpty(allowedProduct)) {\n                newPrices = this.options.jsonConfig.optionPrices[allowedProduct];\n            }\n\n            return newPrices;\n        },\n\n        /**\n         * Get prices\n         *\n         * @param {Object} newPrices\n         * @param {Object} displayPrices\n         * @returns {*}\n         * @private\n         */\n        _getPrices: function (newPrices, displayPrices) {\n            var $widget = this;\n\n            if (_.isEmpty(newPrices)) {\n                newPrices = $widget._getNewPrices();\n            }\n            _.each(displayPrices, function (price, code) {\n\n                if (newPrices[code]) {\n                    displayPrices[code].amount = newPrices[code].amount - displayPrices[code].amount;\n                }\n            });\n\n            return displayPrices;\n        },\n\n        /**\n         * Get product with minimum price from selected options.\n         *\n         * @param {Array} allowedProducts\n         * @returns {String}\n         * @private\n         */\n        _getAllowedProductWithMinPrice: function (allowedProducts) {\n            var optionPrices = this.options.jsonConfig.optionPrices,\n                product = {},\n                optionFinalPrice, optionMinPrice;\n\n            _.each(allowedProducts, function (allowedProduct) {\n                optionFinalPrice = parseFloat(optionPrices[allowedProduct].finalPrice.amount);\n\n                if (_.isEmpty(product) || optionFinalPrice < optionMinPrice) {\n                    optionMinPrice = optionFinalPrice;\n                    product = allowedProduct;\n                }\n            }, this);\n\n            return product;\n        },\n\n        /**\n         * Gets all product media and change current to the needed one\n         *\n         * @private\n         */\n        _LoadProductMedia: function () {\n            var $widget = this,\n                $this = $widget.element,\n                productData = this._determineProductData(),\n                mediaCallData,\n                mediaCacheKey,\n\n                /**\n                 * Processes product media data\n                 *\n                 * @param {Object} data\n                 * @returns void\n                 */\n                mediaSuccessCallback = function (data) {\n                    if (!(mediaCacheKey in $widget.options.mediaCache)) {\n                        $widget.options.mediaCache[mediaCacheKey] = data;\n                    }\n                    $widget._ProductMediaCallback($this, data, productData.isInProductView);\n                    setTimeout(function () {\n                        $widget._DisableProductMediaLoader($this);\n                    }, 300);\n                };\n\n            if (!$widget.options.mediaCallback) {\n                return;\n            }\n\n            mediaCallData = {\n                'product_id': this.getProduct()\n            };\n\n            mediaCacheKey = JSON.stringify(mediaCallData);\n\n            if (mediaCacheKey in $widget.options.mediaCache) {\n                $widget._XhrKiller();\n                $widget._EnableProductMediaLoader($this);\n                mediaSuccessCallback($widget.options.mediaCache[mediaCacheKey]);\n            } else {\n                mediaCallData.isAjax = true;\n                $widget._XhrKiller();\n                $widget._EnableProductMediaLoader($this);\n                $widget.xhr = $.ajax({\n                    url: $widget.options.mediaCallback,\n                    cache: true,\n                    type: 'GET',\n                    dataType: 'json',\n                    data: mediaCallData,\n                    success: mediaSuccessCallback\n                }).done(function () {\n                    $widget._XhrKiller();\n                });\n            }\n        },\n\n        /**\n         * Enable loader\n         *\n         * @param {Object} $this\n         * @private\n         */\n        _EnableProductMediaLoader: function ($this) {\n            var $widget = this;\n\n            if ($('body.catalog-product-view').length > 0) {\n                $this.parents('.column.main').find('.photo.image')\n                    .addClass($widget.options.classes.loader);\n            } else {\n                //Category View\n                $this.parents('.product-item-info').find('.product-image-photo')\n                    .addClass($widget.options.classes.loader);\n            }\n        },\n\n        /**\n         * Disable loader\n         *\n         * @param {Object} $this\n         * @private\n         */\n        _DisableProductMediaLoader: function ($this) {\n            var $widget = this;\n\n            if ($('body.catalog-product-view').length > 0) {\n                $this.parents('.column.main').find('.photo.image')\n                    .removeClass($widget.options.classes.loader);\n            } else {\n                //Category View\n                $this.parents('.product-item-info').find('.product-image-photo')\n                    .removeClass($widget.options.classes.loader);\n            }\n        },\n\n        /**\n         * Callback for product media\n         *\n         * @param {Object} $this\n         * @param {String} response\n         * @param {Boolean} isInProductView\n         * @private\n         */\n        _ProductMediaCallback: function ($this, response, isInProductView) {\n            var $main = isInProductView ? $this.parents('.column.main') : $this.parents('.product-item-info'),\n                $widget = this,\n                images = [],\n\n                /**\n                 * Check whether object supported or not\n                 *\n                 * @param {Object} e\n                 * @returns {*|Boolean}\n                 */\n                support = function (e) {\n                    return e.hasOwnProperty('large') && e.hasOwnProperty('medium') && e.hasOwnProperty('small');\n                };\n\n            if (_.size($widget) < 1 || !support(response)) {\n                this.updateBaseImage(this.options.mediaGalleryInitial, $main, isInProductView);\n\n                return;\n            }\n\n            images.push({\n                full: response.large,\n                img: response.medium,\n                thumb: response.small,\n                isMain: true\n            });\n\n            if (response.hasOwnProperty('gallery')) {\n                $.each(response.gallery, function () {\n                    if (!support(this) || response.large === this.large) {\n                        return;\n                    }\n                    images.push({\n                        full: this.large,\n                        img: this.medium,\n                        thumb: this.small\n                    });\n                });\n            }\n\n            this.updateBaseImage(images, $main, isInProductView);\n        },\n\n        /**\n         * Check if images to update are initial and set their type\n         * @param {Array} images\n         */\n        _setImageType: function (images) {\n\n            images.map(function (img) {\n                if (!img.type) {\n                    img.type = 'image';\n                }\n            });\n\n            return images;\n        },\n\n        /**\n         * Update [gallery-placeholder] or [product-image-photo]\n         * @param {Array} images\n         * @param {jQuery} context\n         * @param {Boolean} isInProductView\n         */\n        updateBaseImage: function (images, context, isInProductView) {\n            var justAnImage = images[0],\n                initialImages = this.options.mediaGalleryInitial,\n                imagesToUpdate,\n                gallery = context.find(this.options.mediaGallerySelector).data('gallery'),\n                isInitial;\n\n            if (isInProductView) {\n                if (_.isUndefined(gallery)) {\n                    context.find(this.options.mediaGallerySelector).on('gallery:loaded', function () {\n                        this.updateBaseImage(images, context, isInProductView);\n                    }.bind(this));\n\n                    return;\n                }\n\n                imagesToUpdate = images.length ? this._setImageType($.extend(true, [], images)) : [];\n                isInitial = _.isEqual(imagesToUpdate, initialImages);\n\n                if (this.options.gallerySwitchStrategy === 'prepend' && !isInitial) {\n                    imagesToUpdate = imagesToUpdate.concat(initialImages);\n                }\n\n                imagesToUpdate = this._setImageIndex(imagesToUpdate);\n\n                gallery.updateData(imagesToUpdate);\n                this._addFotoramaVideoEvents(isInitial);\n            } else if (justAnImage && justAnImage.img) {\n                context.find('.product-image-photo').attr('src', justAnImage.img);\n            }\n        },\n\n        /**\n         * Add video events\n         *\n         * @param {Boolean} isInitial\n         * @private\n         */\n        _addFotoramaVideoEvents: function (isInitial) {\n            if (_.isUndefined($.mage.AddFotoramaVideoEvents)) {\n                return;\n            }\n\n            if (isInitial) {\n                $(this.options.mediaGallerySelector).AddFotoramaVideoEvents();\n\n                return;\n            }\n\n            $(this.options.mediaGallerySelector).AddFotoramaVideoEvents({\n                selectedOption: this.getProduct(),\n                dataMergeStrategy: this.options.gallerySwitchStrategy\n            });\n        },\n\n        /**\n         * Set correct indexes for image set.\n         *\n         * @param {Array} images\n         * @private\n         */\n        _setImageIndex: function (images) {\n            var length = images.length,\n                i;\n\n            for (i = 0; length > i; i++) {\n                images[i].i = i + 1;\n            }\n\n            return images;\n        },\n\n        /**\n         * Kill doubled AJAX requests\n         *\n         * @private\n         */\n        _XhrKiller: function () {\n            var $widget = this;\n\n            if ($widget.xhr !== undefined && $widget.xhr !== null) {\n                $widget.xhr.abort();\n                $widget.xhr = null;\n            }\n        },\n\n        /**\n         * Emulate mouse click on all swatches that should be selected\n         * @param {Object} [selectedAttributes]\n         * @private\n         */\n        _EmulateSelected: function (selectedAttributes) {\n            $.each(selectedAttributes, $.proxy(function (attributeCode, optionId) {\n                var elem = this.element.find('.' + this.options.classes.attributeClass +\n                    '[data-attribute-code=\"' + attributeCode + '\"] [data-option-id=\"' + optionId + '\"]'),\n                    parentInput = elem.parent();\n\n                if (elem.hasClass('selected')) {\n                    return;\n                }\n\n                if (parentInput.hasClass(this.options.classes.selectClass)) {\n                    parentInput.val(optionId);\n                    parentInput.trigger('change');\n                } else {\n                    elem.trigger('click');\n                }\n            }, this));\n        },\n\n        /**\n         * Emulate mouse click or selection change on all swatches that should be selected\n         * @param {Object} [selectedAttributes]\n         * @private\n         */\n        _EmulateSelectedByAttributeId: function (selectedAttributes) {\n            $.each(selectedAttributes, $.proxy(function (attributeId, optionId) {\n                var elem = this.element.find('.' + this.options.classes.attributeClass +\n                    '[data-attribute-id=\"' + attributeId + '\"] [data-option-id=\"' + optionId + '\"]'),\n                    parentInput = elem.parent();\n\n                if (elem.hasClass('selected')) {\n                    return;\n                }\n\n                if (parentInput.hasClass(this.options.classes.selectClass)) {\n                    parentInput.val(optionId);\n                    parentInput.trigger('change');\n                } else {\n                    elem.trigger('click');\n                }\n            }, this));\n        },\n\n        /**\n         * Get default options values settings with either URL query parameters\n         * @private\n         */\n        _getSelectedAttributes: function () {\n            var hashIndex = window.location.href.indexOf('#'),\n                selectedAttributes = {},\n                params;\n\n            if (hashIndex !== -1) {\n                params = $.parseQuery(window.location.href.substr(hashIndex + 1));\n\n                selectedAttributes = _.invert(_.mapObject(_.invert(params), function (attributeId) {\n                    var attribute = this.options.jsonConfig.mappedAttributes[attributeId];\n\n                    return attribute ? attribute.code : attributeId;\n                }.bind(this)));\n            }\n\n            return selectedAttributes;\n        },\n\n        /**\n         * Callback which fired after gallery gets initialized.\n         *\n         * @param {HTMLElement} element - DOM element associated with a gallery.\n         */\n        _onGalleryLoaded: function (element) {\n            var galleryObject = element.data('gallery');\n\n            this.options.mediaGalleryInitial = galleryObject.returnCurrentImages();\n        },\n\n        /**\n         * Sets mediaCache for cases when jsonConfig contains preSelectedGallery on layered navigation result pages\n         *\n         * @private\n         */\n        _setPreSelectedGallery: function () {\n            var mediaCallData;\n\n            if (this.options.jsonConfig.preSelectedGallery) {\n                mediaCallData = {\n                    'product_id': this.getProduct()\n                };\n\n                this.options.mediaCache[JSON.stringify(mediaCallData)] = this.options.jsonConfig.preSelectedGallery;\n            }\n        },\n\n        /**\n         * Callback for quantity change event.\n         */\n        _onQtyChanged: function () {\n            var $price = this.element.parents(this.options.selectorProduct)\n                .find(this.options.selectorProductPrice);\n\n            $price.trigger(\n                'updatePrice',\n                {\n                    'prices': this._getPrices(this._getNewPrices(), $price.priceBox('option').prices)\n                }\n            );\n        }\n    });\n\n    return $.mage.SwatchRenderer;\n});\n","Magento_Swatches/js/catalog-add-to-cart.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\nrequire([\n    'jquery'\n], function ($) {\n    'use strict';\n\n    /**\n     * Add selected swatch attributes to redirect url\n     *\n     * @see Magento_Catalog/js/catalog-add-to-cart\n     */\n    $('body').on('catalogCategoryAddToCartRedirect', function (event, data) {\n        $(data.form).find('[name*=\"super\"]').each(function (index, item) {\n            var $item = $(item),\n                attr;\n\n            if ($item.attr('data-attr-name')) {\n                attr = $item.attr('data-attr-name');\n            } else {\n                attr = $item.parent().attr('attribute-code');\n            }\n            data.redirectParameters.push(attr + '=' + $item.val());\n\n        });\n    });\n});\n","Magento_Swatches/js/configurable-customer-data.js":"require([\n    'jquery',\n    'Magento_ConfigurableProduct/js/options-updater'\n], function ($, Updater) {\n    'use strict';\n\n    var selectors = {\n            formSelector: '#product_addtocart_form',\n            swatchSelector: '.swatch-opt'\n        },\n        swatchWidgetName = 'mageSwatchRenderer',\n        widgetInitEvent = 'swatch.initialized',\n\n    /**\n    * Sets all configurable swatch attribute's selected values\n    */\n    updateSwatchOptions = function () {\n        var swatchWidget = $(selectors.swatchSelector).data(swatchWidgetName);\n\n        if (!swatchWidget || !swatchWidget._EmulateSelectedByAttributeId) {\n            return;\n        }\n        swatchWidget._EmulateSelectedByAttributeId(this.productOptions);\n    },\n    updater = new Updater(widgetInitEvent, updateSwatchOptions);\n\n    updater.listen();\n});\n","PayPal_Braintree/js/form-builder.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine(\n    [\n        'jquery',\n        'underscore',\n        'mage/template'\n    ],\n    function ($, _, mageTemplate) {\n        'use strict';\n\n        return {\n\n            /**\n             * @param {Object} formData\n             * @returns {*|jQuery}\n             */\n            build: function (formData) {\n                var formTmpl = mageTemplate('<form action=\"<%= data.action %>\"' +\n                    ' method=\"POST\" hidden enctype=\"application/x-www-form-urlencoded\">' +\n                        '<% _.each(data.fields, function(val, key){ %>' +\n                            '<input value=\\'<%= val %>\\' name=\"<%= key %>\" type=\"hidden\">' +\n                        '<% }); %>' +\n                    '</form>');\n\n                return $(formTmpl({\n                    data: {\n                        action: formData.action,\n                        fields: formData.fields\n                    }\n                })).appendTo($('[data-container=\"body\"]'));\n            }\n        };\n    }\n);\n","PayPal_Braintree/js/validator.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*browser:true*/\n/*global define*/\ndefine([\n    'underscore'\n], function (_) {\n    'use strict';\n\n    return {\n        config: {},\n\n        /**\n         * Set configuration\n         * @param {Object} config\n         */\n        setConfig: function (config) {\n            this.config = config;\n        },\n\n        /**\n         * Get List of available card types\n         * @returns {*|exports.defaults.availableCardTypes|{}}\n         */\n        getAvailableCardTypes: function () {\n            return this.config.availableCardTypes;\n        },\n\n        /**\n         * Get list of card types\n         * @returns {Object}\n         */\n        getCcTypesMapper: function () {\n            return this.config.ccTypesMapper;\n        },\n\n        /**\n         * Find mage card type by Braintree type\n         * @param {String} type\n         * @param {Object} availableTypes\n         * @returns {*}\n         */\n        getMageCardType: function (type, availableTypes) {\n            var storedCardType = null,\n                mapper = this.getCcTypesMapper();\n\n            if (type && typeof mapper[type] !== 'undefined') {\n                storedCardType = mapper[type];\n\n                if (_.indexOf(availableTypes, storedCardType) !== -1) {\n                    return storedCardType;\n                }\n            }\n\n            return null;\n        },\n\n        /**\n         * Filter list of available card types\n         * @param {Object} availableTypes\n         * @param {Object} countrySpecificCardTypes\n         * @returns {Object}\n         */\n        collectTypes: function (availableTypes, countrySpecificCardTypes) {\n            var key,\n                filteredTypes = [];\n\n            for (key in availableTypes) {\n                if (_.indexOf(countrySpecificCardTypes, availableTypes[key]) !== -1) {\n                    filteredTypes.push(availableTypes[key]);\n                }\n            }\n\n            return filteredTypes;\n        },\n\n        /**\n         * Get list of card types for country\n         * @param {String} countryId\n         * @returns {*}\n         */\n        getCountrySpecificCardTypes: function (countryId) {\n            if (typeof this.config.countrySpecificCardTypes[countryId] !== 'undefined') {\n                return this.config.countrySpecificCardTypes[countryId];\n            }\n\n            return false;\n        }\n    };\n});\n","PayPal_Braintree/js/applepay/api.js":"/**\n * Braintree Apple Pay button API\n *\n **/\ndefine(\n    [\n        'jquery',\n        'underscore',\n        'uiComponent',\n        'mage/translate',\n        'mage/storage',\n        'Magento_Customer/js/customer-data'\n    ],\n    function (\n        $,\n        _,\n        Component,\n        $t,\n        storage,\n        customerData\n    ) {\n        'use strict';\n\n        return Component.extend({\n            defaults: {\n                clientToken: null,\n                quoteId: 0,\n                displayName: null,\n                actionSuccess: null,\n                grandTotalAmount: 0,\n                isLoggedIn: false,\n                storeCode: \"default\",\n                shippingAddress: {},\n                countryDirectory: null,\n                shippingMethods: {}\n            },\n\n            initialize: function () {\n                this._super();\n                if (!this.countryDirectory) {\n                    storage.get(\"rest/V1/directory/countries\").done(function (result) {\n                        this.countryDirectory = {};\n                        let i, data, x, region;\n                        for (i = 0; i < result.length; ++i) {\n                            data = result[i];\n                            this.countryDirectory[data.two_letter_abbreviation] = {};\n                            if (typeof data.available_regions !== 'undefined') {\n                                for (x = 0; x < data.available_regions.length; ++x) {\n                                    region = data.available_regions[x];\n                                    this.countryDirectory[data.two_letter_abbreviation][region.name.toLowerCase().replace(/[^A-Z0-9]/ig, '')] = region.id;\n                                }\n                            }\n                        }\n                    }.bind(this));\n                }\n            },\n\n            /**\n             * Get region ID\n             */\n            getRegionId: function (countryCode, regionName) {\n                if (typeof regionName !== 'string') {\n                    return null;\n                }\n\n                regionName = regionName.toLowerCase().replace(/[^A-Z0-9]/ig, '');\n\n                if (typeof this.countryDirectory[countryCode] !== 'undefined' && typeof this.countryDirectory[countryCode][regionName] !== 'undefined') {\n                    return this.countryDirectory[countryCode][regionName];\n                }\n\n                return 0;\n            },\n\n            /**\n             * Set & get api token\n             */\n            setClientToken: function (value) {\n                this.clientToken = value;\n            },\n            getClientToken: function () {\n                return this.clientToken;\n            },\n\n            /**\n             * Set and get quote id\n             */\n            setQuoteId: function (value) {\n                this.quoteId = value;\n            },\n            getQuoteId: function () {\n                return this.quoteId;\n            },\n\n            /**\n             * Set and get display name\n             */\n            setDisplayName: function (value) {\n                this.displayName = value;\n            },\n            getDisplayName: function () {\n                return this.displayName;\n            },\n\n            /**\n             * Set and get success redirection url\n             */\n            setActionSuccess: function (value) {\n                this.actionSuccess = value;\n            },\n            getActionSuccess: function () {\n                return this.actionSuccess;\n            },\n\n            /**\n             * Set and get grand total\n             */\n            setGrandTotalAmount: function (value) {\n                this.grandTotalAmount = parseFloat(value).toFixed(2);\n            },\n            getGrandTotalAmount: function () {\n                return parseFloat(this.grandTotalAmount);\n            },\n\n            /**\n             * Set and get is logged in\n             */\n            setIsLoggedIn: function (value) {\n                this.isLoggedIn = value;\n            },\n            getIsLoggedIn: function () {\n                return this.isLoggedIn;\n            },\n\n            /**\n             * Set and get store code\n             */\n            setStoreCode: function (value) {\n                this.storeCode = value;\n            },\n            getStoreCode: function () {\n                return this.storeCode;\n            },\n\n            /**\n             * API Urls for logged in / guest\n             */\n            getApiUrl: function (uri) {\n                if (this.getIsLoggedIn() === true) {\n                    return \"rest/\" + this.getStoreCode() + \"/V1/carts/mine/\" + uri;\n                } else {\n                    return \"rest/\" + this.getStoreCode() + \"/V1/guest-carts/\" + this.getQuoteId() + \"/\" + uri;\n                }\n            },\n\n            /**\n             * Payment request info\n             */\n            getPaymentRequest: function () {\n                return {\n                    total: {\n                        label: this.getDisplayName(),\n                        amount: this.getGrandTotalAmount()\n                    },\n                    requiredShippingContactFields: ['postalAddress', 'name', 'email', 'phone'],\n                    requiredBillingContactFields: ['postalAddress', 'name']\n                };\n            },\n\n            /**\n             * Retrieve shipping methods based on address\n             */\n            onShippingContactSelect: function (event, session) {\n                // Get the address.\n                let address = event.shippingContact;\n\n                // Create a payload.\n                let payload = {\n                    address: {\n                        city: address.locality,\n                        region: address.administrativeArea,\n                        country_id: address.countryCode.toUpperCase(),\n                        postcode: address.postalCode,\n                        save_in_address_book: 0\n                    }\n                };\n\n                this.shippingAddress = payload.address;\n\n                // POST to endpoint for shipping methods.\n                storage.post(\n                    this.getApiUrl(\"estimate-shipping-methods\"),\n                    JSON.stringify(payload)\n                ).done(function (result) {\n                    // Stop if no shipping methods.\n                    let virtualFlag = false;\n                    if (result.length === 0) {\n                        let productItems = customerData.get('cart')().items;\n                        _.each(productItems,\n                            function (item) {\n                                if (item.is_virtual) {\n                                    virtualFlag = true;\n                                } else {\n                                    virtualFlag = false;\n                                }\n                            }\n                        );\n                        if (!virtualFlag) {\n                            session.abort();\n                            alert($t(\"There are no shipping methods available for you right now. Please try again or use an alternative payment method.\"));\n                            return false;\n                        }\n                    }\n\n                    let shippingMethods = [];\n                    this.shippingMethods = {};\n\n                    // Format shipping methods array.\n                    for (let i = 0; i < result.length; i++) {\n                        if (typeof result[i].method_code !== 'string') {\n                            continue;\n                        }\n\n                        let method = {\n                            identifier: result[i].method_code,\n                            label: result[i].method_title,\n                            detail: result[i].carrier_title ? result[i].carrier_title : \"\",\n                            amount: parseFloat(result[i].amount).toFixed(2)\n                        };\n\n                        // Add method object to array.\n                        shippingMethods.push(method);\n\n                        this.shippingMethods[result[i].method_code] = result[i];\n\n                        if (!this.shippingMethod) {\n                            this.shippingMethod = result[i].method_code;\n                        }\n                    }\n\n                    // Create payload to get totals\n                    let totalsPayload = {\n                        \"addressInformation\": {\n                            \"address\": {\n                                \"countryId\": this.shippingAddress.country_id,\n                                \"region\": this.shippingAddress.region,\n                                \"regionId\": this.getRegionId(this.shippingAddress.country_id, this.shippingAddress.region),\n                                \"postcode\": this.shippingAddress.postcode\n                            },\n                            \"shipping_method_code\": virtualFlag ? null : this.shippingMethods[shippingMethods[0].identifier].method_code,\n                            \"shipping_carrier_code\": virtualFlag ? null : this.shippingMethods[shippingMethods[0].identifier].carrier_code\n                        }\n                    };\n\n                    // POST to endpoint to get totals, using 1st shipping method\n                    storage.post(\n                        this.getApiUrl(\"totals-information\"),\n                        JSON.stringify(totalsPayload)\n                    ).done(function (result) {\n                        // Set total\n                        this.setGrandTotalAmount(result.base_grand_total);\n\n                        // Pass shipping methods back\n                        session.completeShippingContactSelection(\n                            ApplePaySession.STATUS_SUCCESS,\n                            shippingMethods,\n                            {\n                                label: this.getDisplayName(),\n                                amount: this.getGrandTotalAmount()\n                            },\n                            [{\n                                type: 'final',\n                                label: $t('Shipping'),\n                                amount: virtualFlag ? 0 : shippingMethods[0].amount\n                            }]\n                        );\n                    }.bind(this)).fail(function (result) {\n                        session.abort();\n                        alert($t(\"We're unable to fetch the cart totals for you. Please try an alternative payment method.\"));\n                        console.error(\"Braintree ApplePay: Unable to get totals\", result);\n                        return false;\n                    });\n\n                }.bind(this)).fail(function (result) {\n                    session.abort();\n                    alert($t(\"We're unable to find any shipping methods for you. Please try an alternative payment method.\"));\n                    console.error(\"Braintree ApplePay: Unable to find shipping methods for estimate-shipping-methods\", result);\n                    return false;\n                });\n            },\n\n            /**\n             * Record which shipping method has been selected & Updated totals\n             */\n            onShippingMethodSelect: function (event, session) {\n                let shippingMethod = event.shippingMethod;\n                this.shippingMethod = shippingMethod.identifier;\n\n                let payload = {\n                    \"addressInformation\": {\n                        \"address\": {\n                            \"countryId\": this.shippingAddress.country_id,\n                            \"region\": this.shippingAddress.region,\n                            \"regionId\": this.getRegionId(this.shippingAddress.country_id, this.shippingAddress.region),\n                            \"postcode\": this.shippingAddress.postcode\n                        },\n                        \"shipping_method_code\": this.shippingMethods[this.shippingMethod].method_code,\n                        \"shipping_carrier_code\": this.shippingMethods[this.shippingMethod].carrier_code\n                    }\n                };\n\n                storage.post(\n                    this.getApiUrl(\"totals-information\"),\n                    JSON.stringify(payload)\n                ).done(function (r) {\n                    this.setGrandTotalAmount(r.base_grand_total);\n\n                    session.completeShippingMethodSelection(\n                        ApplePaySession.STATUS_SUCCESS,\n                        {\n                            label: this.getDisplayName(),\n                            amount: this.getGrandTotalAmount()\n                        },\n                        [{\n                            type: 'final',\n                            label: $t('Shipping'),\n                            amount: shippingMethod.amount\n                        }]\n                    );\n                }.bind(this));\n            },\n\n            /**\n             * Place the order\n             */\n            startPlaceOrder: function (nonce, event, session) {\n                let shippingContact = event.payment.shippingContact,\n                    billingContact = event.payment.billingContact,\n                    payload = {\n                        \"addressInformation\": {\n                            \"shipping_address\": {\n                                \"email\": shippingContact.emailAddress,\n                                \"telephone\": shippingContact.phoneNumber,\n                                \"firstname\": shippingContact.givenName,\n                                \"lastname\": shippingContact.familyName,\n                                \"street\": shippingContact.addressLines,\n                                \"city\": shippingContact.locality,\n                                \"region\": shippingContact.administrativeArea,\n                                \"region_id\": this.getRegionId(shippingContact.countryCode.toUpperCase(), shippingContact.administrativeArea),\n                                \"region_code\": null,\n                                \"country_id\": shippingContact.countryCode.toUpperCase(),\n                                \"postcode\": shippingContact.postalCode,\n                                \"same_as_billing\": 0,\n                                \"customer_address_id\": 0,\n                                \"save_in_address_book\": 0\n                            },\n                            \"billing_address\": {\n                                \"email\": shippingContact.emailAddress,\n                                \"telephone\": shippingContact.phoneNumber,\n                                \"firstname\": billingContact.givenName,\n                                \"lastname\": billingContact.familyName,\n                                \"street\": billingContact.addressLines,\n                                \"city\": billingContact.locality,\n                                \"region\": billingContact.administrativeArea,\n                                \"region_id\": this.getRegionId(billingContact.countryCode.toUpperCase(), billingContact.administrativeArea),\n                                \"region_code\": null,\n                                \"country_id\": billingContact.countryCode.toUpperCase(),\n                                \"postcode\": billingContact.postalCode,\n                                \"same_as_billing\": 0,\n                                \"customer_address_id\": 0,\n                                \"save_in_address_book\": 0\n                            },\n                            \"shipping_method_code\": this.shippingMethod ? this.shippingMethods[this.shippingMethod].method_code : '' ,\n                            \"shipping_carrier_code\": this.shippingMethod ? this.shippingMethods[this.shippingMethod].carrier_code : ''\n                        }\n                    };\n\n                // Set addresses\n                storage.post(\n                    this.getApiUrl(\"shipping-information\"),\n                    JSON.stringify(payload)\n                ).done(function () {\n                    // Submit payment information\n                    let paymentInformation = {\n                            \"email\": shippingContact.emailAddress,\n                            \"paymentMethod\": {\n                                \"method\": \"braintree_applepay\",\n                                \"additional_data\": {\n                                    \"payment_method_nonce\": nonce\n                                }\n                            }\n                        };\n                    if (window.checkout && window.checkout.agreementIds) {\n                        paymentInformation.paymentMethod.extension_attributes = {\n                            \"agreement_ids\": window.checkout.agreementIds\n                        };\n                    }\n                    storage.post(\n                        this.getApiUrl(\"payment-information\"),\n                        JSON.stringify(paymentInformation)\n                    ).done(function (r) {\n                        document.location = this.getActionSuccess();\n                        session.completePayment(ApplePaySession.STATUS_SUCCESS);\n                    }.bind(this)).fail(function (r) {\n                        session.completePayment(ApplePaySession.STATUS_FAILURE);\n                        session.abort();\n                        alert($t(\"We're unable to take your payment through Apple Pay. Please try an again or use an alternative payment method.\"));\n                        console.error(\"Braintree ApplePay Unable to take payment\", r);\n                        return false;\n                    });\n\n                }.bind(this)).fail(function (r) {\n                    console.error(\"Braintree ApplePay Unable to set shipping information\", r);\n                    session.completePayment(ApplePaySession.STATUS_INVALID_BILLING_POSTAL_ADDRESS);\n                });\n            }\n        });\n    });\n","PayPal_Braintree/js/applepay/button.js":"/**\n * Braintree Apple Pay button\n **/\ndefine(\n    [\n        'uiComponent',\n        \"knockout\",\n        \"jquery\",\n        'braintree',\n        'braintreeApplePay',\n        'mage/translate',\n        'Magento_Checkout/js/model/payment/additional-validators',\n        ],\n    function (\n        Component,\n        ko,\n        jQuery,\n        braintree,\n        applePay,\n        $t,\n        additionalValidators\n    ) {\n        'use strict';\n\n        var that;\n\n        return {\n            init: function (element, context) {\n                // No element or context\n                if (!element || !context) {\n                    return;\n                }\n\n                // Context must implement these methods\n                if (typeof context.getClientToken !== 'function') {\n                    console.error(\"Braintree ApplePay Context passed does not provide a getClientToken method\", context);\n                    return;\n                }\n                if (typeof context.getPaymentRequest !== 'function') {\n                    console.error(\"Braintree ApplePay Context passed does not provide a getPaymentRequest method\", context);\n                    return;\n                }\n                if (typeof context.startPlaceOrder !== 'function') {\n                    console.error(\"Braintree ApplePay Context passed does not provide a startPlaceOrder method\", context);\n                    return;\n                }\n\n                if (this.deviceSupported() === false) {\n                    return;\n                }\n\n                // init braintree api\n                braintree.create({\n                    authorization: context.getClientToken()\n                }, function (clientErr, clientInstance) {\n                    if (clientErr) {\n                        console.error('Error creating client:', clientErr);\n                        return;\n                    }\n\n                    applePay.create({\n                        client: clientInstance\n                    }, function (applePayErr, applePayInstance) {\n                        // No instance\n                        if (applePayErr) {\n                            console.error('Braintree ApplePay Error creating applePayInstance:', applePayErr);\n                            return;\n                        }\n\n                        // Create a button within the KO element, as apple pay can only be instantiated through\n                        // a valid on click event (ko onclick bind interferes with this).\n                        var el = document.createElement('div');\n                        el.className = \"braintree-apple-pay-button\";\n                        el.title = $t(\"Pay with Apple Pay\");\n                        el.alt = $t(\"Pay with Apple Pay\");\n                        el.addEventListener('click', function (e) {\n                            e.preventDefault();\n\n                            if (!additionalValidators.validate()) {\n                                return false;\n                            }\n                            // Payment request object\n                            var paymentRequest = applePayInstance.createPaymentRequest(context.getPaymentRequest());\n                            if (!paymentRequest) {\n                                alert($t(\"We're unable to take payments through Apple Pay at the moment. Please try an alternative payment method.\"));\n                                console.error('Braintree ApplePay Unable to create paymentRequest', paymentRequest);\n                                return;\n                            }\n\n                            // Show the loader\n                            jQuery(\"body\").loader('show');\n\n                            // Init apple pay session\n                            try {\n                                var session = new ApplePaySession(1, paymentRequest);\n                            } catch (err) {\n                                jQuery(\"body\").loader('hide');\n                                console.error('Braintree ApplePay Unable to create ApplePaySession', err);\n                                alert($t(\"We're unable to take payments through Apple Pay at the moment. Please try an alternative payment method.\"));\n                                return false;\n                            }\n\n                            // Handle invalid merchant\n                            session.onvalidatemerchant = function (event) {\n                                applePayInstance.performValidation({\n                                    validationURL: event.validationURL,\n                                    displayName: context.getDisplayName()\n                                }, function (validationErr, merchantSession) {\n                                    if (validationErr) {\n                                        session.abort();\n                                        console.error('Braintree ApplePay Error validating merchant:', validationErr);\n                                        alert($t(\"We're unable to take payments through Apple Pay at the moment. Please try an alternative payment method.\"));\n                                        return;\n                                    }\n\n                                    session.completeMerchantValidation(merchantSession);\n                                });\n                            };\n\n                            // Attach payment auth event\n                            session.onpaymentauthorized = function (event) {\n                                applePayInstance.tokenize({\n                                    token: event.payment.token\n                                }, function (tokenizeErr, payload) {\n                                    if (tokenizeErr) {\n                                        console.error('Error tokenizing Apple Pay:', tokenizeErr);\n                                        session.completePayment(ApplePaySession.STATUS_FAILURE);\n                                        return;\n                                    }\n\n                                    // Pass the nonce back to the payment method\n                                    context.startPlaceOrder(payload.nonce, event, session);\n                                });\n                            };\n\n                            // Attach onShippingContactSelect method\n                            if (typeof context.onShippingContactSelect === 'function') {\n                                session.onshippingcontactselected = function (event) {\n                                    return context.onShippingContactSelect(event, session);\n                                };\n                            }\n\n                            // Attach onShippingMethodSelect method\n                            if (typeof context.onShippingMethodSelect === 'function') {\n                                session.onshippingmethodselected = function (event) {\n                                    return context.onShippingMethodSelect(event, session);\n                                };\n                            }\n\n                            // Hook\n                            if (typeof context.onButtonClick === 'function') {\n                                context.onButtonClick(session, this, e);\n                            } else {\n                                jQuery(\"body\").loader('hide');\n                                session.begin();\n                            }\n                        });\n                        element.appendChild(el);\n                    });\n                });\n            },\n\n            /**\n             * Check the site is using HTTPS & apple pay is supported on this device.\n             * @return boolean\n             */\n            deviceSupported: function () {\n                if (location.protocol != 'https:') {\n                    console.warn(\"Braintree Apple Pay requires your checkout be served over HTTPS\");\n                    return false;\n                }\n\n                if ((window.ApplePaySession && ApplePaySession.canMakePayments()) !== true) {\n                    console.warn(\"Braintree Apple Pay is not supported on this device/browser\");\n                    return false;\n                }\n\n                return true;\n            }\n        };\n    }\n);\n","PayPal_Braintree/js/applepay/implementations/shortcut.js":"/**\n * Braintree Apple Pay mini cart payment method integration.\n **/\ndefine(\n    [\n        'uiComponent',\n        'PayPal_Braintree/js/applepay/button',\n        'PayPal_Braintree/js/applepay/api',\n        'mage/translate',\n        'domReady!'\n    ],\n    function (\n        Component,\n        button,\n        buttonApi,\n        $t\n    ) {\n        'use strict';\n\n        return Component.extend({\n\n            defaults: {\n                id: null,\n                clientToken: null,\n                quoteId: 0,\n                displayName: null,\n                actionSuccess: null,\n                grandTotalAmount: 0,\n                isLoggedIn: false,\n                storeCode: \"default\"\n            },\n\n            /**\n             * @returns {Object}\n             */\n            initialize: function () {\n                this._super();\n                if (!this.displayName) {\n                    this.displayName = $t('Store');\n                }\n\n                var api = new buttonApi();\n                api.setGrandTotalAmount(parseFloat(this.grandTotalAmount).toFixed(2));\n                api.setClientToken(this.clientToken);\n                api.setDisplayName(this.displayName);\n                api.setQuoteId(this.quoteId);\n                api.setActionSuccess(this.actionSuccess);\n                api.setIsLoggedIn(this.isLoggedIn);\n                api.setStoreCode(this.storeCode);\n\n                // Attach the button\n                button.init(\n                    document.getElementById(this.id),\n                    api\n                );\n\n                return this;\n            }\n        });\n    }\n);\n","PayPal_Braintree/js/applepay/implementations/core-checkout/method-applepay.js":"define([\n    'uiComponent',\n    'Magento_Checkout/js/model/payment/renderer-list'\n], function (Component, rendererList) {\n    'use strict';\n\n    let config = window.checkoutConfig.payment;\n\n    if (config['braintree_applepay'].clientToken) {\n        rendererList.push({\n            type: 'braintree_applepay',\n            component: 'PayPal_Braintree/js/applepay/implementations/core-checkout/method-renderer/applepay'\n        });\n    }\n\n    return Component.extend({});\n});\n","PayPal_Braintree/js/applepay/implementations/core-checkout/method-renderer/applepay.js":"/**\n * Braintree Apple Pay payment method integration.\n **/\ndefine([\n    'Magento_Checkout/js/view/payment/default',\n    'Magento_Checkout/js/model/quote',\n    'PayPal_Braintree/js/applepay/button'\n], function (\n    Component,\n    quote,\n    button\n) {\n    'use strict';\n\n    return Component.extend({\n        defaults: {\n            template: 'PayPal_Braintree/applepay/core-checkout',\n            paymentMethodNonce: null,\n            grandTotalAmount: 0,\n            deviceSupported: button.deviceSupported()\n        },\n\n        /**\n         * Inject the apple pay button into the target element\n         */\n        getApplePayBtn: function (id) {\n            button.init(\n                document.getElementById(id),\n                this\n            );\n        },\n\n        /**\n         * Subscribe to grand totals\n         */\n        initObservable: function () {\n            this._super();\n            this.grandTotalAmount = parseFloat(quote.totals()['base_grand_total']).toFixed(2);\n\n            quote.totals.subscribe(function () {\n                if (this.grandTotalAmount !== quote.totals()['base_grand_total']) {\n                    this.grandTotalAmount = parseFloat(quote.totals()['base_grand_total']).toFixed(2);\n                }\n            }.bind(this));\n\n            return this;\n        },\n\n        /**\n         * Apple pay place order method\n         */\n        startPlaceOrder: function (nonce, event, session) {\n            this.setPaymentMethodNonce(nonce);\n            this.placeOrder();\n\n            session.completePayment(ApplePaySession.STATUS_SUCCESS);\n        },\n\n        /**\n         * Save nonce\n         */\n        setPaymentMethodNonce: function (nonce) {\n            this.paymentMethodNonce = nonce;\n        },\n\n        /**\n         * Retrieve the client token\n         * @returns null|string\n         */\n        getClientToken: function () {\n            return window.checkoutConfig.payment[this.getCode()].clientToken;\n        },\n\n        /**\n         * Payment request data\n         */\n        getPaymentRequest: function () {\n            return {\n                total: {\n                    label: this.getDisplayName(),\n                    amount: this.grandTotalAmount\n                }\n            };\n        },\n\n        /**\n         * Merchant display name\n         */\n        getDisplayName: function () {\n            return window.checkoutConfig.payment[this.getCode()].merchantName;\n        },\n\n        /**\n         * Get data\n         * @returns {Object}\n         */\n        getData: function () {\n            var data = {\n                'method': this.getCode(),\n                'additional_data': {\n                    'payment_method_nonce': this.paymentMethodNonce\n                }\n            };\n            return data;\n        },\n\n        /**\n         * Return image url for the apple pay mark\n         */\n        getPaymentMarkSrc: function () {\n            return window.checkoutConfig.payment[this.getCode()].paymentMarkSrc;\n        }\n    });\n});","PayPal_Braintree/js/googlepay/api.js":"/**\n * Braintree Google Pay button api\n **/\ndefine([\n    'uiComponent',\n    'mage/translate',\n    'mage/storage',\n    'jquery',\n    'PayPal_Braintree/js/form-builder'\n], function (Component, $t, storage, jQuery, formBuilder) {\n    'use strict';\n\n    return Component.extend({\n        defaults: {\n            clientToken: null,\n            merchantId: null,\n            currencyCode: null,\n            actionSuccess: null,\n            amount: null,\n            cardTypes: [],\n            btnColor: 0\n        },\n\n        /**\n         * Set & get environment\n         * \"PRODUCTION\" or \"TEST\"\n         */\n        setEnvironment: function (value) {\n            this.environment = value;\n        },\n        getEnvironment: function () {\n            return this.environment;\n        },\n\n        /**\n         * Set & get api token\n         */\n        setClientToken: function (value) {\n            this.clientToken = value;\n        },\n        getClientToken: function () {\n            return this.clientToken;\n        },\n\n        /**\n         * Set and get display name\n         */\n        setMerchantId: function (value) {\n            this.merchantId = value;\n        },\n        getMerchantId: function () {\n            return this.merchantId;\n        },\n\n        /**\n         * Set and get currency code\n         */\n        setAmount: function (value) {\n            this.amount = parseFloat(value).toFixed(2);\n        },\n        getAmount: function () {\n            return this.amount;\n        },\n\n        /**\n         * Set and get currency code\n         */\n        setCurrencyCode: function (value) {\n            this.currencyCode = value;\n        },\n        getCurrencyCode: function () {\n            return this.currencyCode;\n        },\n\n        /**\n         * Set and get success redirection url\n         */\n        setActionSuccess: function (value) {\n            this.actionSuccess = value;\n        },\n        getActionSuccess: function () {\n            return this.actionSuccess;\n        },\n\n        /**\n         * Set and get success redirection url\n         */\n        setCardTypes: function (value) {\n            this.cardTypes = value;\n        },\n        getCardTypes: function () {\n            return this.cardTypes;\n        },\n\n        /**\n         * BTN Color\n         */\n        setBtnColor: function (value) {\n            this.btnColor = value;\n        },\n        getBtnColor: function () {\n            return this.btnColor;\n        },\n\n        /**\n         * Payment request info\n         */\n        getPaymentRequest: function () {\n            var result = {\n                transactionInfo: {\n                    totalPriceStatus: 'ESTIMATED',\n                    totalPrice: this.getAmount(),\n                    currencyCode: this.getCurrencyCode()\n                },\n                allowedPaymentMethods: [\n                    {\n                        \"type\": \"CARD\",\n                        \"parameters\": {\n                            \"allowedCardNetworks\": this.getCardTypes(),\n                            \"billingAddressRequired\": true,\n                            \"billingAddressParameters\": {\n                                format: 'FULL',\n                                phoneNumberRequired: true\n                            },\n                        },\n\n                    }\n                ],\n                shippingAddressRequired: true,\n                emailRequired: true,\n            };\n\n            if (this.getEnvironment() !== \"TEST\") {\n                result.merchantInfo = { merchantId: this.getMerchantId() };\n            }\n\n            return result;\n        },\n\n        /**\n         * Place the order\n         */\n        startPlaceOrder: function (nonce, paymentData, deviceData) {\n            var payload = {\n                details: {\n                    shippingAddress: {\n                        streetAddress: paymentData.shippingAddress.address1 + \"\\n\"\n                            + paymentData.shippingAddress.address2,\n                        locality: paymentData.shippingAddress.locality,\n                        postalCode: paymentData.shippingAddress.postalCode,\n                        countryCodeAlpha2: paymentData.shippingAddress.countryCode,\n                        email: paymentData.email,\n                        name: paymentData.shippingAddress.name,\n                        telephone: typeof paymentData.shippingAddress.phoneNumber !== 'undefined' ? paymentData.shippingAddress.phoneNumber : '',\n                        region: typeof paymentData.shippingAddress.administrativeArea !== 'undefined' ? paymentData.shippingAddress.administrativeArea : ''\n                    },\n                    billingAddress: {\n                        streetAddress: paymentData.paymentMethodData.info.billingAddress.address1 + \"\\n\"\n                            + paymentData.paymentMethodData.info.billingAddress.address2,\n                        locality: paymentData.paymentMethodData.info.billingAddress.locality,\n                        postalCode: paymentData.paymentMethodData.info.billingAddress.postalCode,\n                        countryCodeAlpha2: paymentData.paymentMethodData.info.billingAddress.countryCode,\n                        email: paymentData.email,\n                        name: paymentData.paymentMethodData.info.billingAddress.name,\n                        telephone: typeof paymentData.paymentMethodData.info.billingAddress.phoneNumber !== 'undefined' ? paymentData.paymentMethodData.info.billingAddress.phoneNumber : '',\n                        region: typeof paymentData.paymentMethodData.info.billingAddress.administrativeArea !== 'undefined' ? paymentData.paymentMethodData.info.billingAddress.administrativeArea : ''\n                    }\n                },\n                nonce: nonce,\n                deviceData: deviceData,\n            };\n\n            formBuilder.build({\n                action: this.getActionSuccess(),\n                fields: {\n                    result: JSON.stringify(payload)\n                }\n            }).submit();\n        }\n    });\n});\n","PayPal_Braintree/js/googlepay/button.js":"/**\n * Braintree Google Pay button\n **/\ndefine(\n    [\n        'uiComponent',\n        \"knockout\",\n        \"jquery\",\n        'Magento_Checkout/js/model/payment/additional-validators',\n        'Magento_CheckoutAgreements/js/view/checkout-agreements',\n        'braintree',\n        'braintreeDataCollector',\n        'braintreeGooglePay',\n        'mage/translate',\n        'googlePayLibrary'\n    ],\n    function (\n        Component,\n        ko,\n        jQuery,\n        additionalValidators,\n        checkoutAgreements,\n        braintree,\n        dataCollector,\n        googlePay,\n        $t\n    ) {\n        'use strict';\n\n        return {\n            init: function (element, context) {\n\n                // No element or context\n                if (!element || !context ) {\n                    return;\n                }\n\n                // Context must implement these methods\n                if (typeof context.getClientToken !== 'function') {\n                    console.error(\"Braintree GooglePay Context passed does not provide a getClientToken method\", context);\n                    return;\n                }\n                if (typeof context.getPaymentRequest !== 'function') {\n                    console.error(\"Braintree GooglePay Context passed does not provide a getPaymentRequest method\", context);\n                    return;\n                }\n                if (typeof context.startPlaceOrder !== 'function') {\n                    console.error(\"Braintree GooglePay Context passed does not provide a startPlaceOrder method\", context);\n                    return;\n                }\n\n                // init google pay object\n                var paymentsClient = new google.payments.api.PaymentsClient({\n                    environment: context.getEnvironment()\n                });\n\n                // Create a button within the KO element, as google pay can only be instantiated through\n                // a valid on click event (ko onclick bind interferes with this).\n                var deviceData;\n                var button = document.createElement('button');\n                button.className = \"braintree-googlepay-button long \" + (context.getBtnColor() == 1 ? 'black' : 'white');\n                button.title = $t(\"Buy with Google Pay\");\n\n                // init braintree api\n                braintree.create({\n                    authorization: context.getClientToken()\n                }, function (clientErr, clientInstance) {\n                    if (clientErr) {\n                        console.error('Error creating client:', clientErr);\n                        return;\n                    }\n                    dataCollector.create({\n                        client: clientInstance\n                    }, function (dataCollectorErr, dataCollectorInstance) {\n                        if (dataCollectorErr) {\n                            return;\n                        }\n                        googlePay.create({\n                            client: clientInstance,\n                            googlePayVersion: 2\n                        }, function (googlePayErr, googlePaymentInstance) {\n                            // No instance\n                            if (googlePayErr) {\n                                console.error('Braintree GooglePay Error creating googlePayInstance:', googlePayErr);\n                                return;\n                            }\n\n                            paymentsClient.isReadyToPay({\n                                apiVersion: 2,\n                                apiVersionMinor: 0,\n                                allowedPaymentMethods: googlePaymentInstance.createPaymentDataRequest().allowedPaymentMethods\n                            }).then(function(response) {\n                                if (response.result) {\n                                    button.addEventListener('click', function (event) {\n\n                                        var agreements = checkoutAgreements().agreements,\n                                            shouldDisableActions = false;\n\n\n                                        _.each(agreements, function (item, index) {\n                                            if (checkoutAgreements().isAgreementRequired(item)) {\n                                                var inputId = '#agreement_braintree_googlepay_' + item.agreementId,\n                                                    inputEl = document.querySelector(inputId);\n\n                                                if (inputEl !== null && !inputEl.checked) {\n                                                    shouldDisableActions = true;\n                                                }\n\n                                            }\n                                        });\n\n                                        if (!additionalValidators.validate()) {\n                                            event.preventDefault();\n                                            return false;\n                                        }\n\n                                        if (!shouldDisableActions) {\n                                            event.preventDefault();\n                                            jQuery(\"body\").loader('show');\n                                            var responseData;\n\n                                            var paymentDataRequest = googlePaymentInstance.createPaymentDataRequest(context.getPaymentRequest());\n                                            paymentsClient.loadPaymentData(paymentDataRequest).then(function (paymentData) {\n                                                // Persist the paymentData (shipping address etc)\n                                                responseData = paymentData;\n                                                // Return the braintree nonce promise\n                                                return googlePaymentInstance.parseResponse(paymentData);\n                                            }).then(function (result) {\n                                                context.startPlaceOrder(result.nonce, responseData, dataCollectorInstance.deviceData);\n                                            }).catch(function (err) {\n                                                // Handle errors\n                                                // err = {statusCode: \"CANCELED\"}\n                                                console.error(err);\n                                                jQuery(\"body\").loader('hide');\n                                            });\n                                        }\n                                    });\n\n                                    element.appendChild(button);\n                                }\n                            }).catch(function (err) {\n                                console.error(err);\n                                jQuery(\"body\").loader('hide');\n                            });\n                        });\n                    });\n                });\n            }\n        };\n    }\n);\n","PayPal_Braintree/js/googlepay/implementations/shortcut.js":"/**\n * Braintree Google Pay mini cart payment method integration.\n **/\ndefine(\n    [\n        'uiComponent',\n        'PayPal_Braintree/js/googlepay/button',\n        'PayPal_Braintree/js/googlepay/api',\n        'mage/translate',\n        'domReady!'\n    ],\n    function (\n        Component,\n        button,\n        buttonApi,\n        $t\n    ) {\n        'use strict';\n\n        return Component.extend({\n\n            defaults: {\n                id: null,\n                clientToken: null,\n                merchantId: null,\n                currencyCode: null,\n                actionSuccess: null,\n                amount: null,\n                environment: \"TEST\",\n                cardType: [],\n                btnColor: 0\n            },\n\n            /**\n             * @returns {Object}\n             */\n            initialize: function () {\n                this._super();\n\n                var api = new buttonApi();\n                api.setEnvironment(this.environment);\n                api.setCurrencyCode(this.currencyCode);\n                api.setClientToken(this.clientToken);\n                api.setMerchantId(this.merchantId);\n                api.setActionSuccess(this.actionSuccess);\n                api.setAmount(this.amount);\n                api.setCardTypes(this.cardTypes)\n                api.setBtnColor(this.btnColor);\n\n                // Attach the button\n                button.init(\n                    document.getElementById(this.id),\n                    api\n                );\n\n                return this;\n            }\n        });\n    }\n);\n","PayPal_Braintree/js/googlepay/implementations/core-checkout/method-googlepay.js":"define([\n    'uiComponent',\n    'Magento_Checkout/js/model/payment/renderer-list'\n], function (Component, rendererList) {\n    'use strict';\n\n    let config = window.checkoutConfig.payment;\n\n    if (config['braintree_googlepay'].clientToken) {\n        rendererList.push({\n            type: 'braintree_googlepay',\n            component: 'PayPal_Braintree/js/googlepay/implementations/core-checkout/method-renderer/googlepay'\n        });\n    }\n\n    return Component.extend({});\n});\n","PayPal_Braintree/js/googlepay/implementations/core-checkout/method-renderer/googlepay.js":"/**\n * Braintree Google Pay payment method integration.\n **/\ndefine([\n    'Magento_Checkout/js/view/payment/default',\n    'Magento_Checkout/js/model/quote',\n    'PayPal_Braintree/js/googlepay/button'\n], function (\n    Component,\n    quote,\n    button\n) {\n    'use strict';\n\n    return Component.extend({\n        defaults: {\n            template: 'PayPal_Braintree/googlepay/core-checkout',\n            paymentMethodNonce: null,\n            deviceData: null,\n            grandTotalAmount: 0\n        },\n\n        /**\n         * Inject the google pay button into the target element\n         */\n        getGooglePayBtn: function (id) {\n            button.init(\n                document.getElementById(id),\n                this\n            );\n        },\n\n        /**\n         * Subscribe to grand totals\n         */\n        initObservable: function () {\n            this._super();\n            this.grandTotalAmount = parseFloat(quote.totals()['base_grand_total']).toFixed(2);\n            this.currencyCode = quote.totals()['base_currency_code'];\n\n            quote.totals.subscribe(function () {\n                if (this.grandTotalAmount !== quote.totals()['base_grand_total']) {\n                    this.grandTotalAmount = parseFloat(quote.totals()['base_grand_total']).toFixed(2);\n                }\n            }.bind(this));\n\n            return this;\n        },\n\n        /**\n         * Google pay place order method\n         */\n        startPlaceOrder: function (nonce, paymentData, device_data) {\n            this.setPaymentMethodNonce(nonce);\n            this.setDeviceData(device_data);\n            this.placeOrder();\n        },\n\n        /**\n         * Save nonce\n         */\n        setPaymentMethodNonce: function (nonce) {\n            this.paymentMethodNonce = nonce;\n        },\n\n        /**\n         * Save device_data\n         */\n        setDeviceData: function (device_data) {\n            this.deviceData = device_data;\n        },\n\n        /**\n         * Retrieve the client token\n         * @returns null|string\n         */\n        getClientToken: function () {\n            return window.checkoutConfig.payment[this.getCode()].clientToken;\n        },\n\n        /**\n         * Payment request info\n         */\n        getPaymentRequest: function () {\n           var result = {\n               transactionInfo: {\n                   totalPriceStatus: 'FINAL',\n                   totalPrice: this.grandTotalAmount,\n                   currencyCode: this.currencyCode\n               },\n               allowedPaymentMethods: [\n                   {\n                       \"type\": \"CARD\",\n                       \"parameters\": {\n                           \"allowedCardNetworks\": this.getCardTypes(),\n                           \"billingAddressRequired\": false,\n                       },\n\n                   }\n               ],\n               shippingAddressRequired: false,\n               emailRequired: false,\n            };\n\n            if (this.getEnvironment() !== \"TEST\") {\n                result.merchantInfo = { merchantId: this.getMerchantId() };\n            }\n\n           return result;\n        },\n\n        /**\n         * Merchant display name\n         */\n        getMerchantId: function () {\n            return window.checkoutConfig.payment[this.getCode()].merchantId;\n        },\n\n        /**\n         * Environment\n         */\n        getEnvironment: function () {\n            return window.checkoutConfig.payment[this.getCode()].environment;\n        },\n\n        /**\n         * Card Types\n         */\n        getCardTypes: function () {\n            return window.checkoutConfig.payment[this.getCode()].cardTypes;\n        },\n\n        /**\n         * BTN Color\n         */\n        getBtnColor: function () {\n            return window.checkoutConfig.payment[this.getCode()].btnColor;\n        },\n\n        /**\n         * Get data\n         * @returns {Object}\n         */\n        getData: function () {\n            return {\n                'method': this.getCode(),\n                'additional_data': {\n                    'payment_method_nonce': this.paymentMethodNonce,\n                    'device_data': this.deviceData\n                }\n            };\n        },\n\n        /**\n         * Return image url for the google pay mark\n         */\n        getPaymentMarkSrc: function () {\n            return window.checkoutConfig.payment[this.getCode()].paymentMarkSrc;\n        }\n    });\n});\n","PayPal_Braintree/js/model/step-navigator-mixin.js":"define([\n    'mage/utils/wrapper',\n    'jquery'\n], function (wrapper, $) {\n    'use strict';\n\n    let mixin = {\n        handleHash: function (originalFn) {\n            var hashString = window.location.hash.replace('#', '');\n            if (hashString.indexOf('venmo') > -1) {\n                return false;\n            }\n\n            return originalFn();\n        }\n    };\n\n    return function (target) {\n        return wrapper.extend(target, mixin);\n    };\n});\n","PayPal_Braintree/js/paypal/button.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine(\n    [\n        'rjsResolver',\n        'uiRegistry',\n        'uiComponent',\n        'underscore',\n        'jquery',\n        'Magento_Customer/js/customer-data',\n        'mage/translate',\n        'braintree',\n        'braintreeDataCollector',\n        'braintreePayPalCheckout',\n        'PayPal_Braintree/js/form-builder',\n        'domReady!'\n    ],\n    function (\n        resolver,\n        registry,\n        Component,\n        _,\n        $,\n        customerData,\n        $t,\n        braintree,\n        dataCollector,\n        paypalCheckout,\n        formBuilder\n    ) {\n        'use strict';\n        let buttonIds = [];\n\n        return {\n            events: {\n                onClick: null,\n                onCancel: null,\n                onError: null\n            },\n\n            /**\n             * @param token\n             * @param currency\n             */\n            init: function (token, currency, env, local) {\n                if ($('.action-braintree-paypal-message').length) {\n                    $('.product-add-form form').on('keyup change paste', 'input, select, textarea', function () {\n                        var currentPrice, currencySymbol;\n                        currentPrice = $(\".product-info-main span\").find(\"[data-price-type='finalPrice']\").text();\n                        currencySymbol = $('.action-braintree-paypal-message[data-pp-type=\"product\"]').data('currency-symbol');\n                        $('.action-braintree-paypal-message[data-pp-type=\"product\"]').attr('data-pp-amount', currentPrice.replace(currencySymbol,''));\n                    });\n                }\n\n                buttonIds = [];\n                $('.action-braintree-paypal-logo').each(function () {\n                    if (!$(this).hasClass(\"button-loaded\")) {\n                        $(this).addClass('button-loaded');\n                        buttonIds.push($(this).attr('id'));\n                    }\n                });\n\n                if (buttonIds.length > 0) {\n                    this.loadSDK(token, currency, env, local);\n                }\n            },\n\n            /**\n             * Load Braintree PayPal SDK\n             * @param token\n             * @param currency\n             */\n            loadSDK: function (token, currency, env, local) {\n                braintree.create({\n                    authorization: token\n                }, function (clientErr, clientInstance) {\n                    if (clientErr) {\n                        console.error('paypalCheckout error', clientErr);\n                        return this.showError(\"PayPal Checkout could not be initialized. Please contact the store owner.\");\n                    }\n                    dataCollector.create({\n                        client: clientInstance,\n                        paypal: true\n                    }, function (err, dataCollectorInstance) {\n                        if (err) {\n                            return console.log(err);\n                        }\n                    });\n                    paypalCheckout.create({\n                        client: clientInstance\n                    }, function (err, paypalCheckoutInstance) {\n                        if (typeof paypal !== 'undefined' ) {\n                            this.renderPayPalButtons(buttonIds, paypalCheckoutInstance);\n                            this.renderPayPalMessages();\n                        } else {\n                            var configSDK = {\n                                components: 'buttons,messages,funding-eligibility',\n                                \"enable-funding\": \"paylater\",\n                                currency: currency\n                            };\n                            if (env == 'sandbox' && local != '') {\n                                configSDK[\"buyer-country\"] = local;\n                            }\n                            paypalCheckoutInstance.loadPayPalSDK(configSDK, function () {\n                                this.renderPayPalButtons(buttonIds, paypalCheckoutInstance);\n                                this.renderPayPalMessages();\n                            }.bind(this));\n                        }\n                    }.bind(this));\n                }.bind(this));\n            },\n\n            /**\n             * Render PayPal buttons\n             *\n             * @param ids\n             * @param paypalCheckoutInstance\n             */\n            renderPayPalButtons: function (ids, paypalCheckoutInstance) {\n                _.each(ids, function (id) {\n                    this.payPalButton(id, paypalCheckoutInstance);\n                }.bind(this));\n            },\n\n            /**\n             * Render PayPal messages\n             */\n            renderPayPalMessages: function () {\n                $('.action-braintree-paypal-message').each(function () {\n                    paypal.Messages({\n                        amount: $(this).data('pp-amount'),\n                        pageType: $(this).data('pp-type'),\n                        style: {\n                            layout: $(this).data('messaging-layout'),\n                            text: {\n                              color:   $(this).data('messaging-text-color')\n                            },\n                            logo: {\n                                type: $(this).data('messaging-logo'),\n                                position: $(this).data('messaging-logo-position')\n                            }\n                        }\n                    }).render('#' + $(this).attr('id'));\n\n\n                });\n            },\n\n            /**\n             * @param id\n             * @param paypalCheckoutInstance\n             */\n            payPalButton: function (id, paypalCheckoutInstance) {\n                let data = $('#' + id);\n                let style = {\n                    color: data.data('color'),\n                    shape: data.data('shape'),\n                    size: data.data('size'),\n                    layout: data.data('layout'),\n                    tagline: data.data('tagline'),\n                    label: data.data('label')\n                };\n\n                if (data.data('fundingicons')) {\n                    style.fundingicons = data.data('fundingicons');\n                }\n\n                // Render\n                var paypalActions;\n                var button = paypal.Buttons({\n                    fundingSource: data.data('funding'),\n                    style: style,\n                    createOrder: function () {\n                        return paypalCheckoutInstance.createPayment({\n                            amount: data.data('amount'),\n                            locale: data.data('locale'),\n                            currency: data.data('currency'),\n                            flow: 'checkout',\n                            enableShippingAddress: true,\n                            displayName: data.data('displayname')\n                        });\n                    },\n                    validate: function (actions) {\n                        var cart = customerData.get('cart'),\n                            customer = customerData.get('customer'),\n                            declinePayment = false,\n                            isGuestCheckoutAllowed;\n                        isGuestCheckoutAllowed = cart().isGuestCheckoutAllowed;\n                        declinePayment = !customer().firstname && !isGuestCheckoutAllowed;\n                        if (declinePayment) {\n                            actions.disable();\n                        }\n                        paypalActions = actions;\n                    },\n\n                    onCancel: function (data) {\n                        jQuery(\"#maincontent\").trigger('processStop');\n                    },\n\n                    onError: function (err) {\n                        console.error('paypalCheckout button render error', err);\n                        jQuery(\"#maincontent\").trigger('processStop');\n                    },\n\n                    onClick: function (data) {\n                        var cart = customerData.get('cart'),\n                            customer = customerData.get('customer'),\n                            declinePayment = false,\n                            isGuestCheckoutAllowed;\n\n                        isGuestCheckoutAllowed = cart().isGuestCheckoutAllowed;\n                        declinePayment = !customer().firstname && !isGuestCheckoutAllowed && (typeof isGuestCheckoutAllowed !== 'undefined');\n                        if (declinePayment) {\n                            alert($t('To check out, please sign in with your email address.'));\n                        }\n                    },\n\n                    onApprove: function (data1) {\n                        return paypalCheckoutInstance.tokenizePayment(data1, function (err, payload) {\n                            jQuery(\"#maincontent\").trigger('processStart');\n\n                            // Map the shipping address correctly\n                            var address = payload.details.shippingAddress;\n                            var recipientFirstName, recipientLastName;\n                            if (typeof address.recipientName !== 'undefined') {\n                                var recipientName = address.recipientName.split(\" \");\n                                recipientFirstName = recipientName[0].replace(/'/g, \"&apos;\");\n                                recipientLastName = recipientName[1].replace(/'/g, \"&apos;\");\n                            } else {\n                                recipientFirstName = payload.details.firstName.replace(/'/g, \"&apos;\");\n                                recipientLastName = payload.details.lastName.replace(/'/g, \"&apos;\");\n                            }\n                            payload.details.shippingAddress = {\n                                streetAddress: typeof address.line2 !== 'undefined' ? address.line1.replace(/'/g, \"&apos;\") + \" \" + address.line2.replace(/'/g, \"&apos;\") : address.line1.replace(/'/g, \"&apos;\"),\n                                locality: address.city.replace(/'/g, \"&apos;\"),\n                                postalCode: address.postalCode,\n                                countryCodeAlpha2: address.countryCode,\n                                email: payload.details.email.replace(/'/g, \"&apos;\"),\n                                recipientFirstName: recipientFirstName,\n                                recipientLastName: recipientLastName,\n                                telephone: typeof payload.details.phone !== 'undefined' ? payload.details.phone : '',\n                                region: typeof address.state !== 'undefined' ? address.state.replace(/'/g, \"&apos;\") : ''\n                            };\n\n                            payload.details.email = payload.details.email.replace(/'/g, \"&apos;\");\n                            payload.details.firstName = payload.details.firstName.replace(/'/g, \"&apos;\");\n                            payload.details.lastName = payload.details.lastName.replace(/'/g, \"&apos;\");\n                            if (typeof payload.details.businessName !== 'undefined') {\n                                payload.details.businessName = payload.details.businessName.replace(/'/g, \"&apos;\");\n                            }\n\n                            // Map the billing address correctly\n                            let isRequiredBillingAddress = data.data('requiredbillingaddress');\n                            if ((isRequiredBillingAddress === 1) && (typeof payload.details.billingAddress !== 'undefined')) {\n                                var billingAddress = payload.details.billingAddress;\n                                payload.details.billingAddress = {\n                                    streetAddress: typeof billingAddress.line2 !== 'undefined' ? billingAddress.line1.replace(/'/g, \"&apos;\") + \" \" + billingAddress.line2.replace(/'/g, \"&apos;\") : billingAddress.line1.replace(/'/g, \"&apos;\"),\n                                    locality: billingAddress.city.replace(/'/g, \"&apos;\"),\n                                    postalCode: billingAddress.postalCode,\n                                    countryCodeAlpha2: billingAddress.countryCode,\n                                    telephone: typeof payload.details.phone !== 'undefined' ? payload.details.phone : '',\n                                    region: typeof billingAddress.state !== 'undefined' ? billingAddress.state.replace(/'/g, \"&apos;\") : ''\n                                };\n                            }\n\n                            if (data.data('location') == 'productpage') {\n                                var form = $(\"#product_addtocart_form\");\n                                if (!(form.validation() && form.validation('isValid'))) {\n                                    return false;\n                                }\n                                payload.additionalData = form.serialize();\n                            }\n\n                            var actionSuccess = data.data('actionsuccess');\n                            formBuilder.build(\n                                {\n                                    action: actionSuccess,\n                                    fields: {\n                                        result: JSON.stringify(payload)\n                                    }\n                                }\n                            ).submit();\n                        });\n                    }\n                });\n                if (!button.isEligible()) {\n                    console.log('PayPal button is not elligible')\n                    data.parent().remove();\n                    return;\n                }\n                if ($('#' + data.attr('id')).length) {\n                    button.render('#' + data.attr('id'));\n                }\n            },\n        }\n    }\n);\n","PayPal_Braintree/js/paypal/form-builder.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine(\n    [\n        'jquery',\n        'underscore',\n        'mage/template'\n    ],\n    function ($, _, mageTemplate) {\n        'use strict';\n\n        return {\n\n            /**\n             * @param {Object} formData\n             * @returns {*|jQuery}\n             */\n            build: function (formData) {\n                var formTmpl = mageTemplate('<form action=\"<%= data.action %>\"' +\n                    ' method=\"POST\" hidden enctype=\"application/x-www-form-urlencoded\">' +\n                        '<% _.each(data.fields, function(val, key){ %>' +\n                            '<input value=\\'<%= val %>\\' name=\"<%= key %>\" type=\"hidden\">' +\n                        '<% }); %>' +\n                    '</form>');\n\n                return $(formTmpl({\n                    data: {\n                        action: formData.action,\n                        fields: formData.fields\n                    }\n                })).appendTo($('[data-container=\"body\"]'));\n            }\n        };\n    }\n);\n","PayPal_Braintree/js/paypal/product-page.js":"define(\n    ['PayPal_Braintree/js/paypal/button', 'jquery'],\n    function (button, $) {\n        'use strict';\n\n        return button.extend({\n\n            defaults: {\n                label: 'buynow',\n                branding: true,\n            },\n\n            /**\n             * The validation on the add-to-cart form is done after the PayPal window has opened.\n             * This is because the validate method exposed by the PP Button requires an event to disable/enable the button.\n             * We can't fire an event due to the way the mage.validation widget works and we can't do something gross like\n             * an interval because the validation() method shows the error messages and focuses the user's input on the\n             * first erroring input field.\n             * @param payload\n             * @returns {*}\n             */\n            beforeSubmit: function (payload) {\n                var form = $(\"#product_addtocart_form\");\n\n                if (!(form.validation() && form.validation('isValid'))) {\n                    return false;\n                }\n\n                payload.additionalData = form.serialize();\n\n                return payload;\n            }\n        });\n    }\n);","PayPal_Braintree/js/paypal/credit/calculator.js":"define([\n    'underscore',\n    'uiComponent',\n    'jquery'\n], function (_, Component, $) {\n    'use strict';\n\n    return Component.extend({\n        defaults: {\n            template: \"PayPal_Braintree/credit/calculator\",\n            displaySummary: true, // \"From X per month\"\n            displayInterestDetails: false, // Display the more in-depth summary of interest rates\n            instalmentsFrom: 0,\n            currentInstalment: {\n                term: 0,\n                monthlyPayment: 0,\n                apr: 0,\n                cost: 0,\n                costIncInterest: 0\n            },\n            endpoint: null,\n            instalments: [],\n            visible: false,\n            merchantName: ''\n        },\n\n        initObservable: function () {\n            this._super();\n            if (this.instalments.length > 0) {\n                this.currentInstalment = this.instalments[0];\n                this.instalmentsFrom = this.instalments[this.instalments.length-1].monthlyPayment;\n                this.visible = true;\n            } else {\n                this.loadInstalments();\n            }\n\n            this.observe(['instalments', 'currentInstalment', 'instalmentsFrom', 'visible']);\n            return this;\n        },\n\n        isCurrentInstalment: function (term) {\n            return (this.currentInstalment().term === term);\n        },\n\n        setCurrentInstalment: function (instalment) {\n            this.currentInstalment(instalment);\n        },\n\n        loadInstalments: function () {\n            if (!this.endpoint) {\n                return false;\n            }\n\n            var self = this;\n            require(['Magento_Checkout/js/model/quote', 'jquery'], function (quote, $) {\n                if (typeof quote.totals().base_grand_total === 'undefined') {\n                    return false;\n                }\n\n                $.getJSON(self.endpoint, {amount: quote.totals().base_grand_total}, function (response) {\n                    self.instalments(response);\n                    self.setCurrentInstalment(response[0]);\n                    self.visible(true);\n                });\n            });\n        }\n    });\n});\n","PayPal_Braintree/js/reCaptcha/braintree-cc-method-mixin.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'jquery',\n    'Magento_Checkout/js/model/payment/additional-validators',\n    'mage/translate'\n], function ($, additionalValidators, $t) {\n    'use strict';\n\n    return function (originalComponent) {\n        return originalComponent.extend({\n            /**\n             * Initializes reCaptcha\n             */\n            placeOrder: function () {\n                var original = this._super.bind(this),\n                    // jscs:disable requireCamelCaseOrUpperCaseIdentifiers\n                    isEnabled = window.checkoutConfig.recaptcha_braintree,\n                    // jscs:enable requireCamelCaseOrUpperCaseIdentifiers\n                    paymentFormSelector = $('#co-payment-form'),\n                    startEvent = 'captcha:startExecute',\n                    endEvent = 'captcha:endExecute';\n\n                if (!additionalValidators.validate() || !isEnabled || this.getCode() !== 'braintree') {\n                    return original();\n                }\n\n                paymentFormSelector.off(endEvent).on(endEvent, function () {\n                    var recaptchaCheckBox = jQuery(\"#recaptcha-checkout-braintree-wrapper input[name='recaptcha-validate-']\");\n\n                    if (recaptchaCheckBox.length && recaptchaCheckBox.prop('checked') === false) {\n                        alert($t('Please indicate google recaptcha'));\n                    } else {\n                        original();\n                        paymentFormSelector.off(endEvent);\n                    }\n                });\n\n                paymentFormSelector.trigger(startEvent);\n            }\n        });\n    };\n});\n","PayPal_Braintree/js/reCaptcha/reCaptcha.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine(\n    [\n        'Magento_ReCaptchaFrontendUi/js/reCaptcha',\n        'jquery'\n    ],\n    function (Component, $) {\n        'use strict';\n\n        return Component.extend({\n\n            /**\n             * Recaptcha callback\n             * @param {String} token\n             */\n            reCaptchaCallback: function (token) {\n                this.tokenField.value = token;\n                this.$parentForm.trigger('captcha:endExecute');\n            },\n\n            /**\n             * Initialize parent form.\n             *\n             * @param {Object} parentForm\n             * @param {String} widgetId\n             */\n            initParentForm: function (parentForm, widgetId) {\n                var me = this;\n\n                parentForm.on('captcha:startExecute', function (event) {\n                    if (!me.tokenField.value && me.getIsInvisibleRecaptcha()) {\n                        // eslint-disable-next-line no-undef\n                        grecaptcha.execute(widgetId);\n                        event.preventDefault(event);\n                        event.stopImmediatePropagation();\n                    } else {\n                        me.$parentForm.trigger('captcha:endExecute');\n                    }\n                });\n                // Create a virtual token field\n                this.tokenField = $('<input type=\"text\" id=\"token-grecaptcha-braintree\" name=\"token-grecaptcha-braintree\" style=\"display: none\" />')[0];\n                this.$parentForm = parentForm;\n                parentForm.append(this.tokenField);\n            }\n        });\n    }\n);\n","PayPal_Braintree/js/view/product-page.js":"define(\n    ['uiComponent'],\n    function (Component) {\n        'use strict';\n\n        return Component.extend({\n\n        });\n    }\n);","PayPal_Braintree/js/view/payment/3d-secure.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*browser:true*/\n/*global define*/\n\ndefine([\n    'jquery',\n    'PayPal_Braintree/js/view/payment/adapter',\n    'Magento_Checkout/js/model/quote',\n    'mage/translate',\n    'braintreeThreeDSecure',\n    'Magento_Checkout/js/model/full-screen-loader'\n], function ($, braintree, quote, $t, threeDSecure, fullScreenLoader) {\n    'use strict';\n\n    return {\n        config: null,\n\n        /**\n         * Set 3d secure config\n         * @param {Object} config\n         */\n        setConfig: function (config) {\n            this.config = config;\n            this.config.thresholdAmount = parseFloat(config.thresholdAmount);\n        },\n\n        /**\n         * Get code\n         * @returns {String}\n         */\n        getCode: function () {\n            return 'three_d_secure';\n        },\n\n        /**\n         * convert Non-ASCII characters into unicode\n         * @param str\n         * @returns {string}\n         */\n        escapeNonAsciiCharacters: function (str) {\n            return str.split(\"\").map(function (c) { return /^[\\x00-\\x7F]$/.test(c) ? c : c.split(\"\").map(function (a) { return \"\\\\u00\" + a.charCodeAt().toString(16)}).join(\"\")}).join(\"\");\n        },\n\n        /**\n         * Validate Braintree payment nonce\n         * @param {Object} context\n         * @returns {Object}\n         */\n        validate: function (context) {\n            var clientInstance = braintree.getApiClient(),\n                state = $.Deferred(),\n                totalAmount = parseFloat(quote.totals()['base_grand_total']).toFixed(2),\n                billingAddress = quote.billingAddress();\n\n            if (billingAddress.regionCode == null) {\n                billingAddress.regionCode = undefined;\n            }\n\n            if (billingAddress.regionCode !== undefined && billingAddress.regionCode.length > 2) {\n                billingAddress.regionCode = undefined;\n            }\n\n            // No 3d secure if using CVV verification on vaulted cards\n            if (quote.paymentMethod().method.indexOf('braintree_cc_vault_') !== -1) {\n                if (this.config.useCvvVault === true) {\n                    state.resolve();\n                    return state.promise();\n                }\n            }\n\n            if (!this.isAmountAvailable(totalAmount) || !this.isCountryAvailable(billingAddress.countryId)) {\n                state.resolve();\n                return state.promise();\n            }\n\n            var firstName = this.escapeNonAsciiCharacters(billingAddress.firstname);\n            var lastName = this.escapeNonAsciiCharacters(billingAddress.lastname);\n\n            let challengeRequested = this.getChallengeRequested();\n\n            fullScreenLoader.startLoader();\n\n            var setup3d = function(clientInstance) {\n                threeDSecure.create({\n                    version: 2,\n                    client: clientInstance\n                }, function (threeDSecureErr, threeDSecureInstance) {\n                    if (threeDSecureErr) {\n                        fullScreenLoader.stopLoader();\n                        return state.reject($t('Please try again with another form of payment.'));\n                    }\n\n                    var threeDSContainer = document.createElement('div'),\n                        tdmask = document.createElement('div'),\n                        tdframe = document.createElement('div'),\n                        tdbody = document.createElement('div');\n\n                    threeDSContainer.id = 'braintree-three-d-modal';\n                    tdmask.className =\"bt-mask\";\n                    tdframe.className =\"bt-modal-frame\";\n                    tdbody.className =\"bt-modal-body\";\n\n                    tdframe.appendChild(tdbody);\n                    threeDSContainer.appendChild(tdmask);\n                    threeDSContainer.appendChild(tdframe);\n\n                    threeDSecureInstance.verifyCard({\n                        amount: totalAmount,\n                        nonce: context.paymentMethodNonce,\n                        challengeRequested: challengeRequested,\n                        billingAddress: {\n                            givenName: firstName,\n                            surname: lastName,\n                            phoneNumber: billingAddress.telephone,\n                            streetAddress: billingAddress.street[0],\n                            extendedAddress: billingAddress.street[1],\n                            locality: billingAddress.city,\n                            region: billingAddress.regionCode,\n                            postalCode: billingAddress.postcode,\n                            countryCodeAlpha2: billingAddress.countryId\n                        },\n                        onLookupComplete: function (data, next) {\n                            next();\n                        },\n                        addFrame: function (err, iframe) {\n                            fullScreenLoader.stopLoader();\n\n                            if (err) {\n                                console.log(\"Unable to verify card over 3D Secure\", err);\n                                return state.reject($t('Please try again with another form of payment.'));\n                            }\n\n                            tdbody.appendChild(iframe);\n                            document.body.appendChild(threeDSContainer);\n                        },\n                        removeFrame: function () {\n                            fullScreenLoader.startLoader();\n                            document.body.removeChild(threeDSContainer);\n                        }\n                    }, function (err, response) {\n                        fullScreenLoader.stopLoader();\n\n                        if (err) {\n                            console.error(\"3dsecure validation failed\", err);\n                            if (err.code === 'THREEDS_LOOKUP_VALIDATION_ERROR') {\n                                let errorMessage = err.details.originalError.details.originalError.error.message;\n                                if (errorMessage === 'Billing line1 format is invalid.' && billingAddress.street[0].length > 50) {\n                                    return state.reject(\n                                      $t('Billing line1 must be string and less than 50 characters. Please update the address and try again.')\n                                    );\n\n                                } else if (errorMessage === 'Billing line2 format is invalid.' && billingAddress.street[1].length > 50) {\n                                    return state.reject(\n                                      $t('Billing line2 must be string and less than 50 characters. Please update the address and try again.')\n                                    );\n                                }\n                                return state.reject($t(errorMessage));\n                            } else {\n                                return state.reject($t('Please try again with another form of payment.'));\n                            }\n                        }\n\n                        var liability = {\n                            shifted: response.liabilityShifted,\n                            shiftPossible: response.liabilityShiftPossible\n                        };\n\n                        if (liability.shifted || !liability.shifted && !liability.shiftPossible) {\n                            context.paymentMethodNonce = response.nonce;\n                            state.resolve();\n                        } else {\n                            state.reject($t('Please try again with another form of payment.'));\n                        }\n                    });\n\n                    // When customer cancel 3d secure popup, invalidate the re-captcha v2.\n                    var isReCaptchaEnabled = window.checkoutConfig.recaptcha_braintree;\n                    if (isReCaptchaEnabled) {\n                        var recaptchaCheckBox = jQuery(\"#recaptcha-checkout-braintree-wrapper input[name='recaptcha-validate-']\");\n\n                        threeDSecureInstance.on('customer-canceled', function () {\n                            if (recaptchaCheckBox.prop('checked') === true) {\n                                recaptchaCheckBox.prop('checked', false);\n                            }\n                        });\n                    }\n                });\n            };\n\n            if (!clientInstance) {\n                require(['PayPal_Braintree/js/view/payment/method-renderer/cc-form'], function(c) {\n                    var config = c.extend({\n                        defaults: {\n                            clientConfig: {\n                                onReady: function() {}\n                            }\n                        }\n                    });\n                    braintree.setConfig(config.defaults.clientConfig);\n                    braintree.setup(setup3d);\n                });\n            } else {\n                setup3d(clientInstance);\n            }\n\n            return state.promise();\n        },\n\n        /**\n         * Check minimal amount for 3d secure activation\n         * @param {Number} amount\n         * @returns {Boolean}\n         */\n        isAmountAvailable: function (amount) {\n            amount = parseFloat(amount);\n\n            return amount >= this.config.thresholdAmount;\n        },\n\n        /**\n         * Check if current country is available for 3d secure\n         * @param {String} countryId\n         * @returns {Boolean}\n         */\n        isCountryAvailable: function (countryId) {\n            var key,\n                specificCountries = this.config.specificCountries;\n\n            // all countries are available\n            if (!specificCountries.length) {\n                return true;\n            }\n\n            for (key in specificCountries) {\n                if (countryId === specificCountries[key]) {\n                    return true;\n                }\n            }\n\n            return false;\n        },\n\n        /**\n         * @returns {Boolean}\n         */\n        getChallengeRequested: function () {\n            return this.config.challengeRequested;\n        }\n    };\n});\n","PayPal_Braintree/js/view/payment/ach.js":"define(\n    [\n        'uiComponent',\n        'Magento_Checkout/js/model/payment/renderer-list'\n    ],\n    function (\n        Component,\n        rendererList\n    ) {\n        'use strict';\n\n        rendererList.push(\n            {\n                type: 'braintree_ach_direct_debit',\n                component: 'PayPal_Braintree/js/view/payment/method-renderer/ach'\n            }\n        );\n\n        return Component.extend({});\n    }\n);\n","PayPal_Braintree/js/view/payment/adapter.js":"/**\n * Copyright 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*browser:true*/\n/*global define*/\ndefine([\n    'jquery',\n    'braintree',\n    'braintreeDataCollector',\n    'braintreeHostedFields',\n    'Magento_Checkout/js/model/full-screen-loader',\n    'Magento_Ui/js/model/messageList',\n    'mage/translate'\n], function ($, client, dataCollector, hostedFields, fullScreenLoader, globalMessageList, $t) {\n    'use strict';\n\n    return {\n        apiClient: null,\n        config: {},\n        checkout: null,\n        deviceData: null,\n        clientInstance: null,\n        hostedFieldsInstance: null,\n        paypalInstance: null,\n        code: 'braintree',\n\n        /**\n         * {Object}\n         */\n        events: {\n            onClick: null,\n            onCancel: null,\n            onError: null\n        },\n\n        /**\n         * Get Braintree api client\n         * @returns {Object}\n         */\n        getApiClient: function () {\n            return this.clientInstance;\n        },\n\n        /**\n         * Set configuration\n         * @param {Object} config\n         */\n        setConfig: function (config) {\n            this.config = config;\n        },\n\n        /**\n         * Get payment name\n         * @returns {String}\n         */\n        getCode: function () {\n            return this.code;\n        },\n\n        /**\n         * Get client token\n         * @returns {String|*}\n         */\n        getClientToken: function () {\n            return window.checkoutConfig.payment[this.getCode()].clientToken;\n        },\n\n        /**\n         * @returns {String}\n         */\n        getEnvironment: function () {\n            return window.checkoutConfig.payment[this.getCode()].environment;\n        },\n\n        getCurrentCode: function (paypalType = null) {\n            var code = 'braintree_paypal';\n            if (paypalType !== 'paypal') {\n                code = code + '_' + paypalType;\n            }\n            return code;\n        },\n\n        /**\n         * @returns {String}\n         */\n        getColor: function (paypalType = null) {\n            return window.checkoutConfig.payment[this.getCurrentCode(paypalType)].style.color;\n        },\n\n        /**\n         * @returns {String}\n         */\n        getShape: function (paypalType = null) {\n            return window.checkoutConfig.payment[this.getCurrentCode(paypalType)].style.shape;\n        },\n\n        /**\n         * @returns {String}\n         */\n        getLayout: function (paypalType = null) {\n            return window.checkoutConfig.payment[this.getCurrentCode(paypalType)].style.layout;\n        },\n\n        /**\n         * @returns {String}\n         */\n        getSize: function (paypalType = null) {\n            return window.checkoutConfig.payment[this.getCurrentCode(paypalType)].style.size;\n        },\n\n        /**\n         * @returns {String}\n         */\n        getLabel: function (paypalType = null) {\n            return window.checkoutConfig.payment[this.getCurrentCode(paypalType)].style.label;\n        },\n\n        /**\n         * @returns {String}\n         */\n        getTagline: function (paypalType = null) {\n            return window.checkoutConfig.payment[this.getCurrentCode(paypalType)].style.tagline;\n        },\n\n        /**\n         * @returns {String}\n         */\n        getBranding: function () {\n            return null;\n        },\n\n        /**\n         * @returns {String}\n         */\n        getFundingIcons: function () {\n            return null;\n        },\n\n        /**\n         * @returns {String}\n         */\n        getDisabledFunding: function () {\n            return window.checkoutConfig.payment[this.getCode()].disabledFunding;\n        },\n\n        /**\n         * Show error message\n         *\n         * @param {String} errorMessage\n         */\n        showError: function (errorMessage) {\n            globalMessageList.addErrorMessage({\n                message: errorMessage\n            });\n            fullScreenLoader.stopLoader(true);\n        },\n\n        /**\n         * Disable submit button\n         */\n        disableButton: function () {\n            // stop any previous shown loaders\n            fullScreenLoader.stopLoader(true);\n            fullScreenLoader.startLoader();\n            $('[data-button=\"place\"]').attr('disabled', 'disabled');\n        },\n\n        /**\n         * Enable submit button\n         */\n        enableButton: function () {\n            $('[data-button=\"place\"]').removeAttr('disabled');\n            fullScreenLoader.stopLoader();\n        },\n\n        /**\n         * Has PayPal been init'd already\n         */\n        getPayPalInstance: function() {\n            if (typeof this.config.paypalInstance !== 'undefined' && this.config.paypalInstance) {\n                return this.config.paypalInstance;\n            }\n\n            return null;\n        },\n\n        setPayPalInstance: function(val) {\n            this.config.paypalInstance = val;\n        },\n\n        /**\n         * Setup Braintree SDK\n         */\n        setup: function (callback) {\n            if (!this.getClientToken()) {\n                this.showError($t('Sorry, but something went wrong.'));\n                return;\n            }\n\n            if (this.clientInstance) {\n                if (typeof this.config.onReady === 'function') {\n                    this.config.onReady(this);\n                }\n\n                if (typeof callback === \"function\") {\n                    callback(this.clientInstance);\n                }\n                return;\n            }\n\n            client.create({\n                authorization: this.getClientToken()\n            }, function (clientErr, clientInstance) {\n                if (clientErr) {\n                    console.error('Braintree Setup Error', clientErr);\n                    return this.showError(\"Sorry, but something went wrong. Please contact the store owner.\");\n                }\n\n                var options = {\n                    client: clientInstance\n                };\n\n                if (typeof this.config.dataCollector === 'object' && typeof this.config.dataCollector.paypal === 'boolean') {\n                    options.paypal = true;\n                }\n\n                dataCollector.create(options, function (err, dataCollectorInstance) {\n                    if (err) {\n                        return console.log(err);\n                    }\n\n                    this.deviceData = dataCollectorInstance.deviceData;\n                    this.config.onDeviceDataRecieved(this.deviceData);\n                }.bind(this));\n\n                this.clientInstance = clientInstance;\n\n                if (typeof this.config.onReady === 'function') {\n                    this.config.onReady(this);\n                }\n\n                if (typeof callback === \"function\") {\n                    callback(this.clientInstance);\n                }\n            }.bind(this));\n        },\n\n        /**\n         * Setup hosted fields instance\n         */\n        setupHostedFields: function () {\n            var self = this;\n\n            if (this.hostedFieldsInstance) {\n                this.hostedFieldsInstance.teardown(function () {\n                    this.hostedFieldsInstance = null;\n                    this.setupHostedFields();\n                }.bind(this));\n                return;\n            }\n\n            hostedFields.create({\n                client: this.clientInstance,\n                fields: this.config.hostedFields,\n                styles: {\n                    \"input\": {\n                        \"font-size\": \"14pt\",\n                        \"color\": \"#3A3A3A\"\n                    },\n                    \":focus\": {\n                        \"color\": \"black\"\n                    },\n                    \".valid\": {\n                        \"color\": \"green\"\n                    },\n                    \".invalid\": {\n                        \"color\": \"red\"\n                    }\n                }\n            }, function (createErr, hostedFieldsInstance) {\n                if (createErr) {\n                    self.showError($t(\"Braintree hosted fields could not be initialized. Please contact the store owner.\"));\n                    console.error('Braintree hosted fields error', createErr);\n                    return;\n                }\n\n                this.config.onInstanceReady(hostedFieldsInstance);\n                this.hostedFieldsInstance = hostedFieldsInstance;\n            }.bind(this));\n        },\n\n        tokenizeHostedFields: function () {\n            this.hostedFieldsInstance.tokenize({}, function (tokenizeErr, payload) {\n                if (tokenizeErr) {\n                    switch (tokenizeErr.code) {\n                        case 'HOSTED_FIELDS_FIELDS_EMPTY':\n                            // occurs when none of the fields are filled in\n                            console.error('All fields are empty! Please fill out the form.');\n                            break;\n                        case 'HOSTED_FIELDS_FIELDS_INVALID':\n                            // occurs when certain fields do not pass client side validation\n                            console.error('Some fields are invalid:', tokenizeErr.details.invalidFieldKeys);\n                            break;\n                        case 'HOSTED_FIELDS_TOKENIZATION_FAIL_ON_DUPLICATE':\n                            // occurs when:\n                            //   * the client token used for client authorization was generated\n                            //     with a customer ID and the fail on duplicate payment method\n                            //     option is set to true\n                            //   * the card being tokenized has previously been vaulted (with any customer)\n                            // See: https://developers.braintreepayments.com/reference/request/client-token/generate/#options.fail_on_duplicate_payment_method\n                            console.error('This payment method already exists in your vault.');\n                            break;\n                        case 'HOSTED_FIELDS_TOKENIZATION_CVV_VERIFICATION_FAILED':\n                            // occurs when:\n                            //   * the client token used for client authorization was generated\n                            //     with a customer ID and the verify card option is set to true\n                            //     and you have credit card verification turned on in the Braintree\n                            //     control panel\n                            //   * the cvv does not pass verfication (https://developers.braintreepayments.com/reference/general/testing/#avs-and-cvv/cid-responses)\n                            // See: https://developers.braintreepayments.com/reference/request/client-token/generate/#options.verify_card\n                            console.error('CVV did not pass verification');\n                            break;\n                        case 'HOSTED_FIELDS_FAILED_TOKENIZATION':\n                            // occurs for any other tokenization error on the server\n                            console.error('Tokenization failed server side. Is the card valid?');\n                            break;\n                        case 'HOSTED_FIELDS_TOKENIZATION_NETWORK_ERROR':\n                            // occurs when the Braintree gateway cannot be contacted\n                            console.error('Network error occurred when tokenizing.');\n                            break;\n                        default:\n                            console.error('Something bad happened!', tokenizeErr);\n                    }\n                } else {\n                    this.config.onPaymentMethodReceived(payload);\n                }\n            }.bind(this));\n        }\n    };\n});\n\n","PayPal_Braintree/js/view/payment/braintree.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*browser:true*/\n/*global define*/\ndefine([\n    'uiComponent',\n    'Magento_Checkout/js/model/payment/renderer-list'\n], function (Component, rendererList) {\n    'use strict';\n\n    let config = window.checkoutConfig.payment,\n        braintreeType = 'braintree',\n        payPalType = 'braintree_paypal',\n        braintreeAchDirectDebit = 'braintree_ach_direct_debit',\n        braintreeVenmo = 'braintree_venmo',\n        braintreeLocalPayment = 'braintree_local_payment';\n\n    if (config[braintreeType] && config[braintreeType].isActive && config[braintreeType].clientToken) {\n        rendererList.push({\n            type: braintreeType,\n            component: 'PayPal_Braintree/js/view/payment/method-renderer/hosted-fields'\n        });\n    }\n\n    if (config[payPalType] && config[payPalType].isActive) {\n        rendererList.push({\n            type: payPalType,\n            component: 'PayPal_Braintree/js/view/payment/method-renderer/paypal'\n        });\n    }\n\n    if (config[braintreeVenmo] && config[braintreeVenmo].isAllowed && config[braintreeVenmo].clientToken) {\n        rendererList.push({\n            type: braintreeVenmo,\n            component: 'PayPal_Braintree/js/view/payment/method-renderer/venmo'\n        });\n    }\n\n    if (config[braintreeAchDirectDebit] && config[braintreeAchDirectDebit].isActive && config[braintreeAchDirectDebit].clientToken) {\n        rendererList.push({\n            type: braintreeAchDirectDebit,\n            component: 'PayPal_Braintree/js/view/payment/method-renderer/ach'\n        });\n    }\n\n    if (config[braintreeLocalPayment] && config[braintreeLocalPayment].clientToken) {\n        rendererList.push({\n            type: braintreeLocalPayment,\n            component: 'PayPal_Braintree/js/view/payment/method-renderer/lpm'\n        });\n    }\n\n    /** Add view logic here if needed */\n    return Component.extend({});\n});\n","PayPal_Braintree/js/view/payment/lpm.js":"define(\n    [\n        'uiComponent',\n        'Magento_Checkout/js/model/payment/renderer-list'\n    ],\n    function (\n        Component,\n        rendererList\n    ) {\n        'use strict';\n\n        rendererList.push(\n            {\n                type: 'braintree_local_payment',\n                component: 'PayPal_Braintree/js/view/payment/method-renderer/lpm'\n            }\n        );\n\n        return Component.extend({});\n    }\n);\n","PayPal_Braintree/js/view/payment/validator-handler.js":"/**\n * Copyright 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*browser:true*/\n/*global define*/\n\ndefine([\n    'jquery',\n    'Magento_Ui/js/model/messageList',\n    'PayPal_Braintree/js/view/payment/3d-secure',\n    'Magento_Checkout/js/model/full-screen-loader'\n], function ($, globalMessageList, verify3DSecure, fullScreenLoader) {\n    'use strict';\n\n    return {\n        validators: [],\n\n        /**\n         * Get payment config\n         * @returns {Object}\n         */\n        getConfig: function () {\n            return window.checkoutConfig.payment;\n        },\n\n        /**\n         * Init list of validators\n         */\n        initialize: function () {\n            var config = this.getConfig();\n\n            if (config[verify3DSecure.getCode()].enabled) {\n                verify3DSecure.setConfig(config[verify3DSecure.getCode()]);\n                this.add(verify3DSecure);\n            }\n        },\n\n        /**\n         * Add new validator\n         * @param {Object} validator\n         */\n        add: function (validator) {\n            this.validators.push(validator);\n        },\n\n        /**\n         * Run pull of validators\n         * @param {Object} context\n         * @param {Function} callback\n         */\n        validate: function (context, callback, errorCallback) {\n            var self = this,\n                deferred;\n\n            // no available validators\n            if (!self.validators.length) {\n                callback();\n\n                return;\n            }\n\n            // get list of deferred validators\n            deferred = $.map(self.validators, function (current) {\n                return current.validate(context);\n            });\n\n            $.when.apply($, deferred)\n                .done(function () {\n                    callback();\n                }).fail(function (error) {\n                    errorCallback();\n                    self.showError(error);\n                });\n        },\n\n        /**\n         * Show error message\n         * @param {String} errorMessage\n         */\n        showError: function (errorMessage) {\n            globalMessageList.addErrorMessage({\n                message: errorMessage\n            });\n            fullScreenLoader.stopLoader(true);\n        }\n    };\n});\n","PayPal_Braintree/js/view/payment/venmo.js":"define(\n    [\n        'uiComponent',\n        'Magento_Checkout/js/model/payment/renderer-list'\n    ],\n    function (\n        Component,\n        rendererList\n    ) {\n        'use strict';\n\n        rendererList.push(\n            {\n                type: 'braintree_venmo',\n                component: 'PayPal_Braintree/js/view/payment/method-renderer/venmo'\n            }\n        );\n\n        return Component.extend({});\n    }\n);\n","PayPal_Braintree/js/view/payment/method-renderer/ach.js":"define(\n    [\n        'Magento_Checkout/js/view/payment/default',\n        'ko',\n        'jquery',\n        'braintree',\n        'braintreeDataCollector',\n        'braintreeAch',\n        'PayPal_Braintree/js/form-builder',\n        'Magento_Ui/js/model/messageList',\n        'Magento_Checkout/js/action/select-billing-address',\n        'Magento_Checkout/js/model/full-screen-loader',\n        'Magento_Checkout/js/model/quote',\n        'mage/translate'\n    ],\n    function (\n        Component,\n        ko,\n        $,\n        braintree,\n        dataCollector,\n        ach,\n        formBuilder,\n        messageList,\n        selectBillingAddress,\n        fullScreenLoader,\n        quote,\n        $t\n    ) {\n        'use strict';\n\n        return Component.extend({\n            defaults: {\n                deviceData: null,\n                paymentMethodNonce: null,\n                template: 'PayPal_Braintree/payment/ach',\n                achInstance: null,\n                routingNumber: ko.observable(\"\"),\n                accountNumber: ko.observable(\"\"),\n                accountType: ko.observable(\"checking\"),\n                ownershipType: ko.observable(\"personal\"),\n                firstName: ko.observable(\"\"),\n                lastName: ko.observable(\"\"),\n                businessName: ko.observable(\"\"),\n                hasAuthorization: ko.observable(false),\n                business: ko.observable(false), // for ownership type\n                personal: ko.observable(true) // for ownership type\n            },\n\n            clickAchBtn: function () {\n                if (!this.validateForm('#' + this.getCode() + '-form')) {\n                    return;\n                }\n\n                fullScreenLoader.startLoader();\n\n                var self = this;\n\n                var billingAddress = quote.billingAddress();\n\n                let regionCode;\n\n                let bankDetails = {\n                    routingNumber: self.routingNumber(),\n                    accountNumber: self.accountNumber(),\n                    accountType: self.accountType(),\n                    ownershipType: self.ownershipType(),\n                    billingAddress: {\n                        streetAddress: billingAddress.street[0],\n                        extendedAddress: billingAddress.street[1],\n                        locality: billingAddress.city,\n                        region: billingAddress.regionCode,\n                        postalCode: billingAddress.postcode,\n                    }\n                };\n\n                if (bankDetails.ownershipType === 'personal') {\n                    bankDetails.firstName = self.firstName();\n                    bankDetails.lastName = self.lastName();\n                } else {\n                    bankDetails.businessName = self.businessName();\n                }\n\n                var mandateText = document.getElementById('braintree-ach-mandate').textContent;\n\n                // if no region code is available, lets find one!\n                if (typeof billingAddress.regionCode === 'undefined') {\n                    $.get('/rest/V1/directory/countries/' + billingAddress.countryId).done(function (data) {\n                        if (typeof data.available_regions !== 'undefined') {\n                            for (var i = 0; i < data.available_regions.length; ++i) {\n                                if (data.available_regions[i].id === billingAddress.regionId) {\n                                    regionCode = data.available_regions[i].code;\n                                    bankDetails.billingAddress.region = regionCode;\n                                    self.tokenizeAch(bankDetails, mandateText);\n                                }\n                            }\n                        }\n                    }).fail(function() {\n                        fullScreenLoader.stopLoader();\n                    });\n                } else {\n                    self.tokenizeAch(bankDetails, mandateText);\n                }\n            },\n\n            tokenizeAch: function (bankDetails, mandateText) {\n                var self = this;\n                this.achInstance.tokenize({\n                    bankDetails: bankDetails,\n                    mandateText: mandateText\n                }, function (tokenizeErr, tokenizedPayload) {\n                    if (tokenizeErr) {\n                        self.setErrorMsg($t('There was an error with the provided bank details. Please check and try again.'));\n                        self.hasAuthorization(false);\n                    } else {\n                        fullScreenLoader.stopLoader();\n                        self.handleAchSuccess(tokenizedPayload);\n                    }\n                });\n            },\n\n            getClientToken: function () {\n                return window.checkoutConfig.payment[this.getCode()].clientToken;\n            },\n\n            getCode: function () {\n                return 'braintree_ach_direct_debit';\n            },\n\n            getStoreName: function () {\n                return window.checkoutConfig.payment[this.getCode()].storeName;\n            },\n\n            getData: function () {\n                let data = {\n                    'method': this.getCode(),\n                    'additional_data': {\n                        'payment_method_nonce': this.paymentMethodNonce,\n                    }\n                };\n\n                data['additional_data'] = _.extend(data['additional_data'], this.additionalData);\n\n                return data;\n            },\n\n            getTitle: function() {\n                return 'ACH Direct Debit';\n            },\n\n            handleAchSuccess: function (payload) {\n                this.setPaymentMethodNonce(payload.nonce);\n                this.placeOrder();\n            },\n\n            initialize: function () {\n                this._super();\n\n                var self = this;\n\n                braintree.create({\n                    authorization: self.getClientToken()\n                }, function (clientError, clientInstance) {\n                    if (clientError) {\n                        this.setErrorMsg($t('Unable to initialize Braintree Client.'));\n                        return;\n                    }\n\n                    ach.create({\n                        client: clientInstance\n                    }, function (achErr, achInstance) {\n                        if (achErr) {\n                            self.setErrorMsg($t('Error initializing ACH: %1').replace('%1', achErr));\n                            return;\n                        }\n\n                        self.setAchInstance(achInstance);\n                    });\n                });\n\n                return this;\n            },\n\n            isAllowed: function () {\n                return window.checkoutConfig.payment[this.getCode()].isAllowed;\n            },\n\n            changeOwnershipType: function (data, event) {\n                var self = this;\n                if (event.currentTarget.value === 'business') {\n                    self.business(true);\n                    self.personal(false);\n                } else {\n                    self.business(false);\n                    self.personal(true);\n                }\n            },\n\n            isBusiness: function () {\n                return this.business;\n            },\n\n            isPersonal: function () {\n                return this.personal;\n            },\n\n            setErrorMsg: function (message) {\n                messageList.addErrorMessage({\n                    message: message\n                });\n            },\n\n            setPaymentMethodNonce: function (nonce) {\n                this.paymentMethodNonce = nonce;\n            },\n\n            setAchInstance: function (instance) {\n                this.achInstance = instance;\n            },\n\n            validateForm: function (form) {\n                return $(form).validation() && $(form).validation('isValid');\n            }\n        });\n    }\n);\n","PayPal_Braintree/js/view/payment/method-renderer/cc-form.js":"/**\n * Copyright 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*browser:true*/\n/*global define*/\ndefine(\n    [\n        'underscore',\n        'jquery',\n        'Magento_Payment/js/view/payment/cc-form',\n        'Magento_Checkout/js/model/quote',\n        'PayPal_Braintree/js/view/payment/adapter',\n        'mage/translate',\n        'PayPal_Braintree/js/validator',\n        'PayPal_Braintree/js/view/payment/validator-handler',\n        'Magento_Checkout/js/model/full-screen-loader'\n    ],\n    function (\n        _,\n        $,\n        Component,\n        quote,\n        braintree,\n        $t,\n        validator,\n        validatorManager,\n        fullScreenLoader\n    ) {\n        'use strict';\n\n        return Component.extend({\n            defaults: {\n                active: false,\n                braintreeClient: null,\n                braintreeDeviceData: null,\n                paymentMethodNonce: null,\n                lastBillingAddress: null,\n                validatorManager: validatorManager,\n                code: 'braintree',\n                isProcessing: false,\n\n                /**\n                 * Additional payment data\n                 *\n                 * {Object}\n                 */\n                additionalData: {},\n\n                /**\n                 * Braintree client configuration\n                 *\n                 * {Object}\n                 */\n                clientConfig: {\n                    onReady: function (context) {\n                        context.setupHostedFields();\n                    },\n\n                    /**\n                     * Triggers on payment nonce receive\n                     * @param {Object} response\n                     */\n                    onPaymentMethodReceived: function (response) {\n                        this.handleNonce(response);\n                        this.isProcessing = false;\n                    },\n\n                    /**\n                     * Allow a new nonce to be generated\n                     */\n                    onPaymentMethodError: function() {\n                        this.isProcessing = false;\n                    },\n\n                    /**\n                     * Device data initialization\n                     * @param {String} deviceData\n                     */\n                    onDeviceDataRecieved: function (deviceData) {\n                        this.additionalData['device_data'] = deviceData;\n                    },\n\n                    /**\n                     * After Braintree instance initialization\n                     */\n                    onInstanceReady: function () {},\n\n                    /**\n                     * Triggers on any Braintree error\n                     * @param {Object} response\n                     */\n                    onError: function (response) {\n                        this.isProcessing = false;\n                        braintree.showError($t('Payment ' + this.getTitle() + ' can\\'t be initialized'));\n                        throw response.message;\n                    },\n\n                    /**\n                     * Triggers when customer click \"Cancel\"\n                     */\n                    onCancelled: function () {\n                        this.paymentMethodNonce = null;\n                        this.isProcessing = false;\n                    }\n                },\n                imports: {\n                    onActiveChange: 'active'\n                }\n            },\n\n            /**\n             * Set list of observable attributes\n             *\n             * @returns {exports.initObservable}\n             */\n            initObservable: function () {\n                validator.setConfig(window.checkoutConfig.payment[this.getCode()]);\n                this._super()\n                    .observe(['active']);\n                this.validatorManager.initialize();\n                this.initClientConfig();\n\n                return this;\n            },\n\n            /**\n             * Get payment name\n             *\n             * @returns {String}\n             */\n            getCode: function () {\n                return this.code;\n            },\n\n            /**\n             * Check if payment is active\n             *\n             * @returns {Boolean}\n             */\n            isActive: function () {\n                var active = this.getCode() === this.isChecked();\n\n                this.active(active);\n\n                return active;\n            },\n\n            /**\n             * Triggers when payment method change\n             * @param {Boolean} isActive\n             */\n            onActiveChange: function (isActive) {\n                if (!isActive) {\n                    return;\n                }\n\n                this.initBraintree();\n            },\n\n            /**\n             * Init config\n             */\n            initClientConfig: function () {\n                _.each(this.clientConfig, function (fn, name) {\n                    if (typeof fn === 'function') {\n                        this.clientConfig[name] = fn.bind(this);\n                    }\n                }, this);\n            },\n\n            /**\n             * Init Braintree configuration\n             */\n            initBraintree: function () {\n                var intervalId = setInterval(function () {\n                    // stop loader when frame will be loaded\n                    if ($('#braintree-hosted-field-number').length) {\n                        clearInterval(intervalId);\n                        fullScreenLoader.stopLoader(true);\n                    }\n                }, 500);\n\n                if (braintree.checkout) {\n                    braintree.checkout.teardown(function () {\n                        braintree.checkout = null;\n                    });\n                }\n\n                fullScreenLoader.startLoader();\n                braintree.setConfig(this.clientConfig);\n                braintree.setup();\n            },\n\n            /**\n             * Get full selector name\n             *\n             * @param {String} field\n             * @returns {String}\n             */\n            getSelector: function (field) {\n                return '#' + this.getCode() + '_' + field;\n            },\n\n            /**\n             * Get list of available CC types\n             *\n             * @returns {Object}\n             */\n            getCcAvailableTypes: function () {\n                var availableTypes = validator.getAvailableCardTypes(),\n                    billingAddress = quote.billingAddress(),\n                    billingCountryId;\n\n                this.lastBillingAddress = quote.shippingAddress();\n\n                if (!billingAddress) {\n                    billingAddress = this.lastBillingAddress;\n                }\n\n                billingCountryId = billingAddress.countryId;\n\n                if (billingCountryId && validator.getCountrySpecificCardTypes(billingCountryId)) {\n                    return validator.collectTypes(\n                        availableTypes,\n                        validator.getCountrySpecificCardTypes(billingCountryId)\n                    );\n                }\n\n                return availableTypes;\n            },\n\n            /**\n             * @returns {String}\n             */\n            getEnvironment: function () {\n                return window.checkoutConfig.payment[this.getCode()].environment;\n            },\n\n            /**\n             * Get data\n             *\n             * @returns {Object}\n             */\n            getData: function () {\n                var data = {\n                    'method': this.getCode(),\n                    'additional_data': {\n                        'payment_method_nonce': this.paymentMethodNonce,\n                        'g-recaptcha-response' : $(\"#token-grecaptcha-braintree\").val()\n                    }\n                };\n\n                data['additional_data'] = _.extend(data['additional_data'], this.additionalData);\n\n                return data;\n            },\n\n            /**\n             * Set payment nonce\n             * @param {String} paymentMethodNonce\n             */\n            setPaymentMethodNonce: function (paymentMethodNonce) {\n                this.paymentMethodNonce = paymentMethodNonce;\n            },\n\n            /**\n             * Prepare data to place order\n             * @param {Object} data\n             */\n            handleNonce: function (data) {\n                var self = this;\n\n                this.setPaymentMethodNonce(data.nonce);\n\n                // place order on success validation\n                self.validatorManager.validate(self, function () {\n                    return self.placeOrder('parent');\n                }, function() {\n                    self.isProcessing = false;\n                    self.paymentMethodNonce = null;\n                });\n            },\n\n            /**\n             * Action to place order\n             * @param {String} key\n             */\n            placeOrder: function (key) {\n                if (key) {\n                    return this._super();\n                }\n\n                if (this.isProcessing) {\n                    return false;\n                } else {\n                    this.isProcessing = true;\n                }\n\n                braintree.tokenizeHostedFields();\n                return false;\n            },\n\n            /**\n             * Get payment icons\n             * @param {String} type\n             * @returns {Boolean}\n             */\n            getIcons: function (type) {\n                return window.checkoutConfig.payment.braintree.icons.hasOwnProperty(type) ?\n                    window.checkoutConfig.payment.braintree.icons[type]\n                    : false;\n            },\n        });\n    }\n);\n","PayPal_Braintree/js/view/payment/method-renderer/hosted-fields.js":"/**\n * Copyright 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*browser:true*/\n/*global define*/\n\ndefine([\n    'jquery',\n    'PayPal_Braintree/js/view/payment/method-renderer/cc-form',\n    'PayPal_Braintree/js/validator',\n    'Magento_Vault/js/view/payment/vault-enabler',\n    'Magento_Checkout/js/model/payment/additional-validators',\n    'mage/translate'\n], function ($, Component, validator, VaultEnabler, additionalValidators, $t) {\n    'use strict';\n\n    return Component.extend({\n\n        defaults: {\n            template: 'PayPal_Braintree/payment/form',\n            clientConfig: {\n\n                /**\n                 * {String}\n                 */\n                id: 'co-transparent-form-braintree'\n            },\n            isValidCardNumber: false,\n            isValidExpirationDate: false,\n            isValidCvvNumber: false,\n\n            onInstanceReady: function (instance) {\n                instance.on('validityChange', this.onValidityChange.bind(this));\n                instance.on('cardTypeChange', this.onCardTypeChange.bind(this));\n            }\n        },\n\n        /**\n         * @returns {exports.initialize}\n         */\n        initialize: function () {\n            this._super();\n            this.vaultEnabler = new VaultEnabler();\n            this.vaultEnabler.setPaymentCode(this.getVaultCode());\n\n            return this;\n        },\n\n        /**\n         * Init config\n         */\n        initClientConfig: function () {\n            this._super();\n\n            this.clientConfig.hostedFields = this.getHostedFields();\n            this.clientConfig.onInstanceReady = this.onInstanceReady.bind(this);\n        },\n\n        /**\n         * @returns {Object}\n         */\n        getData: function () {\n            var data = this._super();\n\n            this.vaultEnabler.visitAdditionalData(data);\n\n            return data;\n        },\n\n        /**\n         * @returns {Bool}\n         */\n        isVaultEnabled: function () {\n            return this.vaultEnabler.isVaultEnabled();\n        },\n\n        /**\n         * Get Braintree Hosted Fields\n         * @returns {Object}\n         */\n        getHostedFields: function () {\n            var self = this,\n                fields = {\n                    number: {\n                        selector: self.getSelector('cc_number'),\n                        placeholder: $t('4111 1111 1111 1111')\n                    },\n                    expirationDate: {\n                        selector: self.getSelector('expirationDate'),\n                        placeholder: $t('MM/YYYY')\n                    }\n                };\n\n            if (self.hasVerification()) {\n                fields.cvv = {\n                    selector: self.getSelector('cc_cid'),\n                    placeholder: $t('123')\n                };\n            }\n\n            return fields;\n        },\n\n        /**\n         * Triggers on Hosted Field changes\n         * @param {Object} event\n         * @returns {Boolean}\n         */\n        onValidityChange: function (event) {\n            // Handle a change in validation or card type\n            if (event.emittedBy === 'number') {\n                this.selectedCardType(null);\n\n                if (event.cards.length === 1) {\n                    this.isValidCardNumber = event.fields.number.isValid;\n                    this.selectedCardType(\n                        validator.getMageCardType(event.cards[0].type, this.getCcAvailableTypes())\n                    );\n                    this.validateCardType();\n                } else {\n                    this.isValidCardNumber = event.fields.number.isValid;\n                    this.validateCardType();\n                }\n            }\n\n            // Other field validations\n            if (event.emittedBy === 'expirationDate') {\n                this.isValidExpirationDate = event.fields.expirationDate.isValid;\n            }\n            if (event.emittedBy === 'cvv') {\n                this.isValidCvvNumber = event.fields.cvv.isValid;\n            }\n        },\n\n        /**\n         * Triggers on Hosted Field card type changes\n         * @param {Object} event\n         * @returns {Boolean}\n         */\n        onCardTypeChange: function (event) {\n            if (event.cards.length === 1) {\n                this.selectedCardType(\n                    validator.getMageCardType(event.cards[0].type, this.getCcAvailableTypes())\n                );\n            } else {\n                this.selectedCardType(null);\n            }\n        },\n\n        /**\n         * Toggle invalid class on selector\n         * @param selector\n         * @param state\n         * @returns {boolean}\n         */\n        validateField: function (selector, state) {\n            var $selector = $(this.getSelector(selector)),\n                invalidClass = 'braintree-hosted-fields-invalid';\n\n            if (state === true) {\n                $selector.removeClass(invalidClass);\n                return true;\n            }\n\n            $selector.addClass(invalidClass);\n            return false;\n        },\n\n        /**\n         * Validate current credit card type\n         * @returns {Boolean}\n         */\n        validateCardType: function () {\n            return this.validateField(\n                'cc_number',\n                (this.isValidCardNumber)\n            );\n        },\n\n        /**\n         * Validate current expiry date\n         * @returns {boolean}\n         */\n        validateExpirationDate: function () {\n            return this.validateField(\n                'expirationDate',\n                (this.isValidExpirationDate === true)\n            );\n        },\n\n        /**\n         * Validate current CVV field\n         * @returns {boolean}\n         */\n        validateCvvNumber: function () {\n            var self = this;\n            \n            if (self.hasVerification() === false) {\n                return true;\n            }\n            \n            return this.validateField(\n                'cc_cid',\n                (this.isValidCvvNumber === true)\n            );\n        },\n\n        /**\n         * Validate all fields\n         * @returns {boolean}\n         */\n        validateFormFields: function () {\n            return (this.validateCardType() && this.validateExpirationDate() && this.validateCvvNumber()) === true;\n        },\n\n        /**\n         * Trigger order placing\n         */\n        placeOrderClick: function () {\n            if (this.validateFormFields() && additionalValidators.validate()) {\n                var isReCaptchaEnabled = window.checkoutConfig.recaptcha_braintree;\n                if (isReCaptchaEnabled) {\n                    var recaptchaCheckBox = jQuery(\"#recaptcha-checkout-braintree-wrapper input[name='recaptcha-validate-']\");\n\n                    if (recaptchaCheckBox.length && recaptchaCheckBox.prop('checked') === false) {\n                        alert($t('Please indicate google recaptcha'));\n                    } else {\n                        this.placeOrder();\n                    }\n                } else {\n                    this.placeOrder();\n                }\n            }\n        },\n        /**\n         * @returns {String}\n         */\n        getVaultCode: function () {\n            return window.checkoutConfig.payment[this.getCode()].ccVaultCode;\n        }\n    });\n});\n","PayPal_Braintree/js/view/payment/method-renderer/lpm.js":"define(\n    [\n        'Magento_Checkout/js/view/payment/default',\n        'ko',\n        'jquery',\n        'braintree',\n        'braintreeLpm',\n        'PayPal_Braintree/js/form-builder',\n        'Magento_Ui/js/model/messageList',\n        'Magento_Checkout/js/action/select-billing-address',\n        'Magento_Checkout/js/model/full-screen-loader',\n        'Magento_Checkout/js/model/quote',\n        'Magento_Checkout/js/model/payment/additional-validators',\n        'mage/url',\n        'mage/translate'\n    ],\n    function (\n        Component,\n        ko,\n        $,\n        braintree,\n        lpm,\n        formBuilder,\n        messageList,\n        selectBillingAddress,\n        fullScreenLoader,\n        quote,\n        additionalValidators,\n        url,\n        $t\n    ) {\n        'use strict';\n\n        return Component.extend({\n            defaults: {\n                code: 'braintree_local_payment',\n                paymentMethodsAvailable: ko.observable(false),\n                paymentMethodNonce: null,\n                template: 'PayPal_Braintree/payment/lpm'\n            },\n\n            clickPaymentBtn: function (method) {\n                var self = this;\n\n                if (additionalValidators.validate()) {\n                    fullScreenLoader.startLoader();\n\n                    braintree.create({\n                        authorization: self.getClientToken()\n                    }, function (clientError, clientInstance) {\n                        if (clientError) {\n                            self.setErrorMsg($t('Unable to initialize Braintree Client.'));\n                            fullScreenLoader.stopLoader();\n                            return;\n                        }\n\n                        lpm.create({\n                            client: clientInstance,\n                            merchantAccountId: self.getMerchantAccountId()\n                        }, function (lpmError, lpmInstance) {\n                            if (lpmError) {\n                                self.setErrorMsg(lpmError);\n                                fullScreenLoader.stopLoader();\n                                return;\n                            }\n\n                            lpmInstance.startPayment({\n                                amount: self.getAmount(),\n                                currencyCode: self.getCurrencyCode(),\n                                email: self.getCustomerDetails().email,\n                                phone: self.getCustomerDetails().phone,\n                                givenName: self.getCustomerDetails().firstName,\n                                surname: self.getCustomerDetails().lastName,\n                                shippingAddressRequired: !quote.isVirtual(),\n                                address: self.getAddress(),\n                                paymentType: method,\n                                onPaymentStart: function (data, start) {\n                                    start();\n                                },\n                                // This is a required option, however it will apparently never be used in the current payment flow.\n                                // Therefore, both values are set to allow the payment flow to continute, rather than erroring out.\n                                fallback: {\n                                    url: 'N/A',\n                                    buttonText: 'N/A'\n                                }\n                            }, function (startPaymentError, payload) {\n                                fullScreenLoader.stopLoader();\n                                if (startPaymentError) {\n                                    switch (startPaymentError.code) {\n                                        case 'LOCAL_PAYMENT_POPUP_CLOSED':\n                                            self.setErrorMsg($t('Local Payment popup was closed unexpectedly.'));\n                                            break;\n                                        case 'LOCAL_PAYMENT_WINDOW_OPEN_FAILED':\n                                            self.setErrorMsg($t('Local Payment popup failed to open.'));\n                                            break;\n                                        case 'LOCAL_PAYMENT_WINDOW_CLOSED':\n                                            self.setErrorMsg($t('Local Payment popup was closed. Payment cancelled.'));\n                                            break;\n                                        default:\n                                            self.setErrorMsg('Error! ' + startPaymentError);\n                                            break;\n                                    }\n                                } else {\n                                    // Send the nonce to your server to create a transaction\n                                    self.setPaymentMethodNonce(payload.nonce);\n                                    self.placeOrder();\n                                }\n                            });\n                        });\n                    });\n                }\n            },\n\n            getAddress: function () {\n                var shippingAddress = quote.shippingAddress();\n\n                if (quote.isVirtual()) {\n                    return {\n                        countryCode: shippingAddress.countryId\n                    }\n                }\n\n                return {\n                    streetAddress: shippingAddress.street[0],\n                    extendedAddress: shippingAddress.street[1],\n                    locality: shippingAddress.city,\n                    postalCode: shippingAddress.postcode,\n                    region: shippingAddress.region,\n                    countryCode: shippingAddress.countryId\n                }\n            },\n\n            getAmount: function () {\n                return quote.totals()['base_grand_total'].toString();\n            },\n\n            getBillingAddress: function () {\n                return quote.billingAddress();\n            },\n\n            getClientToken: function () {\n                return window.checkoutConfig.payment[this.getCode()].clientToken;\n            },\n\n            getCode: function () {\n                return this.code;\n            },\n\n            getCurrencyCode: function () {\n                return quote.totals()['base_currency_code'];\n            },\n\n            getCustomerDetails: function () {\n                var billingAddress = quote.billingAddress();\n                return {\n                    firstName: billingAddress.firstname,\n                    lastName: billingAddress.lastname,\n                    phone: billingAddress.telephone,\n                    email: typeof quote.guestEmail === 'string' ? quote.guestEmail : window.checkoutConfig.customerData.email\n                }\n            },\n\n            getData: function () {\n                let data = {\n                    'method': this.getCode(),\n                    'additional_data': {\n                        'payment_method_nonce': this.paymentMethodNonce,\n                    }\n                };\n\n                data['additional_data'] = _.extend(data['additional_data'], this.additionalData);\n\n                return data;\n            },\n\n            getMerchantAccountId: function () {\n                return window.checkoutConfig.payment[this.getCode()].merchantAccountId;\n            },\n\n            getPaymentMethod: function (method) {\n                var methods = this.getPaymentMethods();\n\n                for (var i = 0; i < methods.length; i++) {\n                    if (methods[i].method === method) {\n                        return methods[i]\n                    }\n                }\n            },\n\n            getPaymentMethods: function () {\n                return window.checkoutConfig.payment[this.getCode()].allowedMethods;\n            },\n\n            getPaymentMarkSrc: function () {\n                return window.checkoutConfig.payment[this.getCode()].paymentIcons;\n            },\n\n            getTitle: function () {\n                return window.checkoutConfig.payment[this.getCode()].title;\n            },\n\n            initialize: function () {\n                this._super();\n                return this;\n            },\n\n            isActive: function () {\n                var address = quote.billingAddress() || quote.shippingAddress();\n                var methods = this.getPaymentMethods();\n\n                for (var i = 0; i < methods.length; i++) {\n                    if (methods[i].countries.includes(address.countryId)) {\n                        return true;\n                    }\n                }\n\n                return false;\n            },\n\n            isValidCountryAndCurrency: function (method) {\n                var address = quote.billingAddress();\n\n                if (!address) {\n                    this.paymentMethodsAvailable(false);\n                    return false;\n                }\n\n                var countryId = address.countryId;\n                var quoteCurrency = quote.totals()['base_currency_code'];\n                var paymentMethodDetails = this.getPaymentMethod(method);\n\n                if ((countryId !== 'GB' && paymentMethodDetails.countries.includes(countryId) && (quoteCurrency === 'EUR' || quoteCurrency === 'PLN')) || (countryId === 'GB' && paymentMethodDetails.countries.includes(countryId) && quoteCurrency === 'GBP')) {\n                    this.paymentMethodsAvailable(true);\n                    return true;\n                }\n\n                return false;\n            },\n\n            setErrorMsg: function (message) {\n                messageList.addErrorMessage({\n                    message: message\n                });\n            },\n\n            setPaymentMethodNonce: function (nonce) {\n                this.paymentMethodNonce = nonce;\n            },\n\n            validateForm: function (form) {\n                return $(form).validation() && $(form).validation('isValid');\n            }\n        });\n    }\n);\n","PayPal_Braintree/js/view/payment/method-renderer/paypal-vault.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*browser:true*/\n/*global define*/\ndefine([\n    'jquery',\n    'underscore',\n    'Magento_Vault/js/view/payment/method-renderer/vault',\n    'Magento_Ui/js/model/messageList',\n    'Magento_Checkout/js/model/full-screen-loader'\n], function ($, _, VaultComponent, globalMessageList, fullScreenLoader) {\n    'use strict';\n\n    return VaultComponent.extend({\n        defaults: {\n            template: 'PayPal_Braintree/payment/paypal/vault',\n            additionalData: {}\n        },\n\n        /**\n         * Get PayPal payer email\n         * @returns {String}\n         */\n        getPayerEmail: function () {\n            return this.details.payerEmail;\n        },\n\n        /**\n         * Get type of payment\n         * @returns {String}\n         */\n        getPaymentIcon: function () {\n            return window.checkoutConfig.payment['braintree_paypal'].paymentIcon;\n        },\n\n        /**\n         * Place order\n         */\n        beforePlaceOrder: function () {\n            this.getPaymentMethodNonce();\n        },\n\n        /**\n         * Send request to get payment method nonce\n         */\n        getPaymentMethodNonce: function () {\n            var self = this;\n\n            fullScreenLoader.startLoader();\n            $.getJSON(self.nonceUrl, {\n                'public_hash': self.publicHash\n            })\n                .done(function (response) {\n                    fullScreenLoader.stopLoader();\n                    self.additionalData['payment_method_nonce'] = response.paymentMethodNonce;\n                    self.placeOrder();\n                })\n                .fail(function (response) {\n                    var error = JSON.parse(response.responseText);\n\n                    fullScreenLoader.stopLoader();\n                    globalMessageList.addErrorMessage({\n                        message: error.message\n                    });\n                });\n        },\n\n        /**\n         * Get payment method data\n         * @returns {Object}\n         */\n        getData: function () {\n            var data = {\n                'method': this.code,\n                'additional_data': {\n                    'public_hash': this.publicHash\n                }\n            };\n\n            data['additional_data'] = _.extend(data['additional_data'], this.additionalData);\n\n            return data;\n        }\n    });\n});\n","PayPal_Braintree/js/view/payment/method-renderer/paypal.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*browser:true*/\n/*global define*/\ndefine([\n    'jquery',\n    'underscore',\n    'Magento_Checkout/js/view/payment/default',\n    'braintree',\n    'braintreeCheckoutPayPalAdapter',\n    'braintreePayPalCheckout',\n    'Magento_Checkout/js/model/quote',\n    'Magento_Checkout/js/model/full-screen-loader',\n    'Magento_Checkout/js/model/payment/additional-validators',\n    'Magento_Checkout/js/model/step-navigator',\n    'Magento_Vault/js/view/payment/vault-enabler',\n    'Magento_Checkout/js/action/create-billing-address',\n    'Magento_Checkout/js/action/select-billing-address',\n    'Magento_CheckoutAgreements/js/view/checkout-agreements',\n    'mage/translate'\n], function (\n    $,\n    _,\n    Component,\n    braintree,\n    Braintree,\n    paypalCheckout,\n    quote,\n    fullScreenLoader,\n    additionalValidators,\n    stepNavigator,\n    VaultEnabler,\n    createBillingAddress,\n    selectBillingAddress,\n    checkoutAgreements,\n    $t\n) {\n    'use strict';\n\n    return Component.extend({\n        defaults: {\n            template: 'PayPal_Braintree/payment/paypal',\n            code: 'braintree_paypal',\n            active: false,\n            paypalInstance: null,\n            paymentMethodNonce: null,\n            grandTotalAmount: null,\n            isReviewRequired: false,\n            customerEmail: null,\n\n            /**\n             * Additional payment data\n             *\n             * {Object}\n             */\n            additionalData: {},\n\n            /**\n             * PayPal client configuration\n             * {Object}\n             */\n            clientConfig: {\n                offerCredit: false,\n                offerCreditOnly: false,\n                dataCollector: {\n                    paypal: true\n                },\n\n                buttonPayPalId: 'braintree_paypal_placeholder',\n                buttonCreditId: 'braintree_paypal_credit_placeholder',\n                buttonPaylaterId: 'braintree_paypal_paylater_placeholder',\n\n                onDeviceDataRecieved: function (deviceData) {\n                    this.additionalData['device_data'] = deviceData;\n                },\n\n                /**\n                 * Triggers when widget is loaded\n                 * @param {Object} context\n                 */\n                onReady: function (context) {\n                    this.setupPayPal();\n                },\n\n                /**\n                 * Triggers on payment nonce receive\n                 * @param {Object} response\n                 */\n                onPaymentMethodReceived: function (response) {\n                    this.beforePlaceOrder(response);\n                }\n            },\n            imports: {\n                onActiveChange: 'active'\n            }\n        },\n\n        /**\n         * Set list of observable attributes\n         * @returns {exports.initObservable}\n         */\n        initObservable: function () {\n            var self = this;\n\n            this._super()\n                .observe(['active', 'isReviewRequired', 'customerEmail']);\n\n            window.addEventListener('hashchange', function (e) {\n                var methodCode = quote.paymentMethod();\n\n                if (methodCode === 'braintree_paypal' || methodCode === 'braintree_paypal_vault') {\n                    if (e.newURL.indexOf('payment') > 0 && self.grandTotalAmount !== null) {\n                        self.reInitPayPal();\n                    }\n                }\n            });\n\n            quote.paymentMethod.subscribe(function (value) {\n                var methodCode = value;\n\n                if (methodCode === 'braintree_paypal' || methodCode === 'braintree_paypal_vault') {\n                    self.reInitPayPal();\n                }\n            });\n\n            this.vaultEnabler = new VaultEnabler();\n            this.vaultEnabler.setPaymentCode(this.getVaultCode());\n            this.vaultEnabler.isActivePaymentTokenEnabler.subscribe(function () {\n                self.onVaultPaymentTokenEnablerChange();\n            });\n\n            this.grandTotalAmount = quote.totals()['base_grand_total'];\n\n            quote.totals.subscribe(function () {\n                if (self.grandTotalAmount !== quote.totals()['base_grand_total']) {\n                    self.grandTotalAmount = quote.totals()['base_grand_total'];\n                    var methodCode = quote.paymentMethod();\n\n                    if (methodCode && (methodCode.method === 'braintree_paypal' || methodCode.method === 'braintree_paypal_vault')) {\n                        self.reInitPayPal();\n                    }\n                }\n            });\n\n            // for each component initialization need update property\n            this.isReviewRequired(false);\n            this.initClientConfig();\n\n            return this;\n        },\n\n        /**\n         * Get payment name\n         *\n         * @returns {String}\n         */\n        getCode: function () {\n            return this.code;\n        },\n\n        /**\n         * Get payment title\n         *\n         * @returns {String}\n         */\n        getTitle: function () {\n            return window.checkoutConfig.payment[this.getCode()].title;\n        },\n\n        /**\n         * Check if payment is active\n         *\n         * @returns {Boolean}\n         */\n        isActive: function () {\n            var active = this.getCode() === this.isChecked();\n\n            this.active(active);\n\n            return active;\n        },\n\n        /**\n         * Triggers when payment method change\n         * @param {Boolean} isActive\n         */\n        onActiveChange: function (isActive) {\n            if (!isActive) {\n                return;\n            }\n\n            // need always re-init Braintree with PayPal configuration\n            this.reInitPayPal();\n        },\n\n        /**\n         * Init config\n         */\n        initClientConfig: function () {\n            this.clientConfig = _.extend(this.clientConfig, this.getPayPalConfig());\n\n            _.each(this.clientConfig, function (fn, name) {\n                if (typeof fn === 'function') {\n                    this.clientConfig[name] = fn.bind(this);\n                }\n            }, this);\n        },\n\n        /**\n         * Set payment nonce\n         * @param {String} paymentMethodNonce\n         */\n        setPaymentMethodNonce: function (paymentMethodNonce) {\n            this.paymentMethodNonce = paymentMethodNonce;\n        },\n\n        /**\n         * Update quote billing address\n         * @param {Object}customer\n         * @param {Object}address\n         */\n        setBillingAddress: function (customer, address) {\n            var billingAddress = {\n                street: [address.line1],\n                city: address.city,\n                postcode: address.postalCode,\n                countryId: address.countryCode,\n                email: customer.email,\n                firstname: customer.firstName,\n                lastname: customer.lastName,\n                telephone: typeof customer.phone !== 'undefined' ? customer.phone : '00000000000'\n            };\n\n            billingAddress['region_code'] = typeof address.state === 'string' ? address.state : '';\n            billingAddress = createBillingAddress(billingAddress);\n            quote.billingAddress(billingAddress);\n        },\n\n        /**\n         * Prepare data to place order\n         * @param {Object} data\n         */\n        beforePlaceOrder: function (data) {\n            this.setPaymentMethodNonce(data.nonce);\n            this.customerEmail(data.details.email);\n            if (quote.isVirtual()) {\n                this.isReviewRequired(true);\n            } else {\n                if (this.isRequiredBillingAddress() === '1' || quote.billingAddress() === null) {\n                    if (typeof data.details.billingAddress !== 'undefined') {\n                        this.setBillingAddress(data.details, data.details.billingAddress);\n                    } else {\n                        this.setBillingAddress(data.details, data.details.shippingAddress);\n                    }\n                } else {\n                    if (quote.shippingAddress() === quote.billingAddress()) {\n                        selectBillingAddress(quote.shippingAddress());\n                    } else {\n                        selectBillingAddress(quote.billingAddress());\n                    }\n                }\n\n                this.placeOrder();\n            }\n        },\n\n        /**\n         * Re-init PayPal Auth Flow\n         */\n        reInitPayPal: function () {\n            this.disableButton();\n            this.clientConfig.paypal.amount = parseFloat(this.grandTotalAmount).toFixed(2);\n\n            if (!quote.isVirtual()) {\n                this.clientConfig.paypal.enableShippingAddress = true;\n                this.clientConfig.paypal.shippingAddressEditable = false;\n                this.clientConfig.paypal.shippingAddressOverride = this.getShippingAddress();\n            }\n\n            Braintree.setConfig(this.clientConfig);\n\n            if (Braintree.getPayPalInstance()) {\n                Braintree.getPayPalInstance().teardown(function () {\n                    Braintree.setup();\n                }.bind(this));\n                Braintree.setPayPalInstance(null);\n            } else {\n                Braintree.setup();\n                this.enableButton();\n            }\n        },\n\n        /**\n         * Setup PayPal instance\n         */\n        setupPayPal: function () {\n            var self = this;\n\n            if (Braintree.config.paypalInstance) {\n                fullScreenLoader.stopLoader(true);\n                return;\n            }\n\n            paypalCheckout.create({\n                client: Braintree.clientInstance\n            }, function (createErr, paypalCheckoutInstance) {\n                if (createErr) {\n                    Braintree.showError($t(\"PayPal Checkout could not be initialized. Please contact the store owner.\"));\n                    console.error('paypalCheckout error', createErr);\n                    return;\n                }\n                let quoteObj = quote.totals();\n\n                var configSDK = {\n                    components: 'buttons,messages,funding-eligibility',\n                    \"enable-funding\": \"paylater\",\n                    currency: quoteObj['base_currency_code']\n                };\n                var merchantCountry = window.checkoutConfig.payment['braintree_paypal'].merchantCountry;\n                if (Braintree.getEnvironment() == 'sandbox' && merchantCountry != null) {\n                    configSDK[\"buyer-country\"] = merchantCountry;\n                }\n                paypalCheckoutInstance.loadPayPalSDK(configSDK, function () {\n                    this.loadPayPalButton(paypalCheckoutInstance, 'paypal');\n                    if (this.isCreditEnabled()) {\n                        this.loadPayPalButton(paypalCheckoutInstance, 'credit');\n                    }\n                    if (this.isPaylaterEnabled()) {\n                        this.loadPayPalButton(paypalCheckoutInstance, 'paylater');\n                    }\n\n                }.bind(this));\n            }.bind(this));\n        },\n\n        loadPayPalButton: function (paypalCheckoutInstance, funding) {\n            var paypalPayment = Braintree.config.paypal,\n                onPaymentMethodReceived = Braintree.config.onPaymentMethodReceived;\n            var style = {\n                color: Braintree.getColor(funding),\n                shape: Braintree.getShape(funding),\n                layout: Braintree.getLayout(funding),\n                size: Braintree.getSize(funding),\n                tagline: Braintree.getTagline(funding),\n                label: Braintree.getLabel(funding)\n            };\n\n            if (Braintree.getBranding()) {\n                style.branding = Braintree.getBranding();\n            }\n            if (Braintree.getFundingIcons()) {\n                style.fundingicons = Braintree.getFundingIcons();\n            }\n\n            if (funding === 'credit') {\n                Braintree.config.buttonId = this.clientConfig.buttonCreditId;\n            } else if (funding === 'paylater') {\n                Braintree.config.buttonId = this.clientConfig.buttonPaylaterId;\n            } else {\n                Braintree.config.buttonId = this.clientConfig.buttonPayPalId;\n            }\n            // Render\n            Braintree.config.paypalInstance = paypalCheckoutInstance;\n            var events = Braintree.events;\n            $('#' + Braintree.config.buttonId).html('');\n\n            var button = paypal.Buttons({\n                fundingSource: funding,\n                env: Braintree.getEnvironment(),\n                style: style,\n                commit: true,\n                locale: Braintree.config.paypal.locale,\n\n                onInit: function (data, actions) {\n                    var agreements = checkoutAgreements().agreements,\n                        shouldDisableActions = false;\n\n                    actions.disable();\n\n                    _.each(agreements, function (item, index) {\n                        if (checkoutAgreements().isAgreementRequired(item)) {\n                            var paymentMethodCode = quote.paymentMethod().method,\n                                inputId = '#agreement_' + paymentMethodCode + '_' + item.agreementId,\n                                inputEl = document.querySelector(inputId);\n\n\n                            if (!inputEl.checked) {\n                                shouldDisableActions = true;\n                            }\n\n                            inputEl.addEventListener('change', function (event) {\n                                if (additionalValidators.validate()) {\n                                    actions.enable();\n                                } else {\n                                    actions.disable();\n                                }\n                            });\n                        }\n                    });\n\n                    if (!shouldDisableActions) {\n                        actions.enable();\n                    }\n                },\n\n                createOrder: function () {\n                    return paypalCheckoutInstance.createPayment(paypalPayment).catch(function (err) {\n                        throw err.details.originalError.details.originalError.paymentResource;\n                    });\n                },\n\n                onCancel: function (data) {\n                    console.log('checkout.js payment cancelled', JSON.stringify(data, 0, 2));\n\n                    if (typeof events.onCancel === 'function') {\n                        events.onCancel();\n                    }\n                },\n\n                onError: function (err) {\n                    if (err.errorName === 'VALIDATION_ERROR' && err.errorMessage.indexOf('Value is invalid') !== -1) {\n                        Braintree.showError($t('Address failed validation. Please check and confirm your City, State, and Postal Code'));\n                    } else {\n                        Braintree.showError($t(\"PayPal Checkout could not be initialized. Please contact the store owner.\"));\n                    }\n                    Braintree.config.paypalInstance = null;\n                    console.error('Paypal checkout.js error', err);\n\n                    if (typeof events.onError === 'function') {\n                        events.onError(err);\n                    }\n                }.bind(this),\n\n                onClick: function (data) {\n                    if (!quote.isVirtual()) {\n                        this.clientConfig.paypal.enableShippingAddress = true;\n                        this.clientConfig.paypal.shippingAddressEditable = false;\n                        this.clientConfig.paypal.shippingAddressOverride = this.getShippingAddress();\n                    }\n\n                    // To check term & conditions input checked - validate additional validators.\n                    if (!additionalValidators.validate()) {\n                        return false;\n                    }\n\n                    if (typeof events.onClick === 'function') {\n                        events.onClick(data);\n                    }\n                }.bind(this),\n\n                onApprove: function (data, actions) {\n                    return paypalCheckoutInstance.tokenizePayment(data)\n                        .then(function (payload) {\n                            onPaymentMethodReceived(payload);\n                        });\n                }\n\n            });\n            if (button.isEligible() && $('#' + Braintree.config.buttonId).length) {\n                button.render('#' + Braintree.config.buttonId).then(function () {\n                    Braintree.enableButton();\n                    if (typeof Braintree.config.onPaymentMethodError === 'function') {\n                        Braintree.config.onPaymentMethodError();\n                    }\n                }.bind(this)).then(function (data) {\n                    if (typeof events.onRender === 'function') {\n                        events.onRender(data);\n                    }\n                });\n            }\n        },\n\n        /**\n         * Get locale\n         * @returns {String}\n         */\n        getLocale: function () {\n            return window.checkoutConfig.payment[this.getCode()].locale;\n        },\n\n        /**\n         * Is Billing Address required from PayPal side\n         * @returns {exports.isRequiredBillingAddress|(function())|boolean}\n         */\n        isRequiredBillingAddress: function () {\n            return window.checkoutConfig.payment[this.getCode()].isRequiredBillingAddress;\n        },\n\n        /**\n         * Get configuration for PayPal\n         * @returns {Object}\n         */\n        getPayPalConfig: function () {\n            var totals = quote.totals(),\n                config = {},\n                isActiveVaultEnabler = this.isActiveVault();\n\n            config.paypal = {\n                flow: 'checkout',\n                amount: parseFloat(this.grandTotalAmount).toFixed(2),\n                currency: totals['base_currency_code'],\n                locale: this.getLocale(),\n\n                /**\n                 * Triggers on any Braintree error\n                 */\n                onError: function () {\n                    this.paymentMethodNonce = null;\n                },\n\n                /**\n                 * Triggers if browser doesn't support PayPal Checkout\n                 */\n                onUnsupported: function () {\n                    this.paymentMethodNonce = null;\n                }\n            };\n\n            if (isActiveVaultEnabler) {\n                config.paypal.requestBillingAgreement = true;\n            }\n\n            if (!quote.isVirtual()) {\n                config.paypal.enableShippingAddress = true;\n                config.paypal.shippingAddressEditable = false;\n                config.paypal.shippingAddressOverride = this.getShippingAddress();\n            }\n\n            if (this.getMerchantName()) {\n                config.paypal.displayName = this.getMerchantName();\n            }\n\n            return config;\n        },\n\n        /**\n         * Get shipping address\n         * @returns {Object}\n         */\n        getShippingAddress: function () {\n            var address = quote.shippingAddress();\n\n            return {\n                recipientName: address.firstname + ' ' + address.lastname,\n                line1: address.street[0],\n                line2: typeof address.street[2] === 'undefined' ? address.street[1] : address.street[1] + ' ' + address.street[2],\n                city: address.city,\n                countryCode: address.countryId,\n                postalCode: address.postcode,\n                state: address.regionCode\n            };\n        },\n\n        /**\n         * Get merchant name\n         * @returns {String}\n         */\n        getMerchantName: function () {\n            return window.checkoutConfig.payment[this.getCode()].merchantName;\n        },\n\n        /**\n         * Get data\n         * @returns {Object}\n         */\n        getData: function () {\n            var data = {\n                'method': this.getCode(),\n                'additional_data': {\n                    'payment_method_nonce': this.paymentMethodNonce\n                }\n            };\n\n            data['additional_data'] = _.extend(data['additional_data'], this.additionalData);\n\n            this.vaultEnabler.visitAdditionalData(data);\n\n            return data;\n        },\n\n        /**\n         * Returns payment acceptance mark image path\n         * @returns {String}\n         */\n        getPaymentAcceptanceMarkSrc: function () {\n            return window.checkoutConfig.payment[this.getCode()].paymentAcceptanceMarkSrc;\n        },\n\n        /**\n         * @returns {String}\n         */\n        getVaultCode: function () {\n            return window.checkoutConfig.payment[this.getCode()].vaultCode;\n        },\n\n        /**\n         * Check if need to skip order review\n         * @returns {Boolean}\n         */\n        isSkipOrderReview: function () {\n            return window.checkoutConfig.payment[this.getCode()].skipOrderReview;\n        },\n\n        /**\n         * Checks if vault is active\n         * @returns {Boolean}\n         */\n        isActiveVault: function () {\n            return this.vaultEnabler.isVaultEnabled() && this.vaultEnabler.isActivePaymentTokenEnabler();\n        },\n\n        /**\n         * Re-init PayPal Auth flow to use Vault\n         */\n        onVaultPaymentTokenEnablerChange: function () {\n            this.clientConfig.paypal.singleUse = !this.isActiveVault();\n            this.reInitPayPal();\n        },\n\n        /**\n         * Disable submit button\n         */\n        disableButton: function () {\n            // stop any previous shown loaders\n            fullScreenLoader.stopLoader(true);\n            fullScreenLoader.startLoader();\n            $('[data-button=\"place\"]').attr('disabled', 'disabled');\n        },\n\n        /**\n         * Enable submit button\n         */\n        enableButton: function () {\n            $('[data-button=\"place\"]').removeAttr('disabled');\n            fullScreenLoader.stopLoader(true);\n        },\n\n        /**\n         * Triggers when customer click \"Continue to PayPal\" button\n         */\n        payWithPayPal: function () {\n            if (additionalValidators.validate()) {\n                Braintree.checkout.paypal.initAuthFlow();\n            }\n        },\n\n        /**\n         * Get button id\n         * @returns {String}\n         */\n        getPayPalButtonId: function () {\n            return this.clientConfig.buttonPayPalId;\n        },\n\n        /**\n         * Get button id\n         * @returns {String}\n         */\n        getCreditButtonId: function () {\n            return this.clientConfig.buttonCreditId;\n        },\n\n        /**\n         * Get button id\n         * @returns {String}\n         */\n        getPaylaterButtonId: function () {\n            return this.clientConfig.buttonPaylaterId;\n        },\n\n        isPaylaterEnabled: function () {\n            return window.checkoutConfig.payment['braintree_paypal_paylater']['isActive'];\n        },\n\n        isPaylaterMessageEnabled: function () {\n            return window.checkoutConfig.payment['braintree_paypal_paylater']['isMessageActive'];\n        },\n\n        getGrandTotalAmount: function () {\n            return parseFloat(this.grandTotalAmount).toFixed(2);\n        },\n\n        isCreditEnabled: function () {\n            return window.checkoutConfig.payment['braintree_paypal_credit']['isActive'];\n        },\n\n        /**\n         * Get Message Layout\n         * @returns {*}\n         */\n        getMessagingLayout: function () {\n            return window.checkoutConfig.payment['braintree_paypal_paylater']['message']['layout'];\n        },\n\n        /**\n         * Get Message Logo\n         * @returns {*}\n         */\n        getMessagingLogo: function () {\n            return window.checkoutConfig.payment['braintree_paypal_paylater']['message']['logo'];\n        },\n\n        /**\n         * Get Message Logo position\n         * @returns {*}\n         */\n        getMessagingLogoPosition: function () {\n            return window.checkoutConfig.payment['braintree_paypal_paylater']['message']['logo_position'];\n        },\n\n        /**\n         * Get Message Text Color\n         * @returns {*}\n         */\n        getMessagingTextColor: function () {\n            return window.checkoutConfig.payment['braintree_paypal_paylater']['message']['text_color'];\n        }\n    });\n});\n","PayPal_Braintree/js/view/payment/method-renderer/vault.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*browser:true*/\n/*global define*/\ndefine([\n    'ko',\n    'jquery',\n    'Magento_Vault/js/view/payment/method-renderer/vault',\n    'PayPal_Braintree/js/view/payment/adapter',\n    'Magento_Ui/js/model/messageList',\n    'PayPal_Braintree/js/view/payment/validator-handler',\n    'Magento_Checkout/js/model/payment/additional-validators',\n    'Magento_Checkout/js/model/full-screen-loader',\n    'braintree',\n    'braintreeHostedFields',\n    'mage/url'\n], function (\n    ko,\n    $,\n    VaultComponent,\n    Braintree,\n    globalMessageList,\n    validatorManager,\n    additionalValidators,\n    fullScreenLoader,\n    client,\n    hostedFields,\n    url\n) {\n    'use strict';\n\n    return VaultComponent.extend({\n        defaults: {\n            active: false,\n            hostedFieldsInstance: null,\n            imports: {\n                onActiveChange: 'active'\n            },\n            modules: {\n                hostedFields: '${ $.parentName }.braintree'\n            },\n            template: 'PayPal_Braintree/payment/cc/vault',\n            updatePaymentUrl: url.build('braintree/payment/updatepaymentmethod'),\n            vaultedCVV: ko.observable(\"\"),\n            validatorManager: validatorManager,\n            isValidCvv: false,\n            onInstanceReady: function (instance) {\n                instance.on('validityChange', this.onValidityChange.bind(this));\n            }\n        },\n\n        /**\n         * Event fired by Braintree SDK whenever input value length matches the validation length.\n         * In the case of a CVV, this is 3, or 4 for AMEX.\n         * @param event\n         */\n        onValidityChange: function (event) {\n            if (event.emittedBy === 'cvv') {\n                this.isValidCvv = event.fields.cvv.isValid;\n            }\n        },\n\n        /**\n         * @returns {exports}\n         */\n        initObservable: function () {\n            this._super().observe(['active']);\n            this.validatorManager.initialize();\n            return this;\n        },\n\n        /**\n         * Is payment option active?\n         * @returns {boolean}\n         */\n        isActive: function () {\n            var active = this.getId() === this.isChecked();\n            this.active(active);\n            return active;\n        },\n\n        /**\n         * Fired whenever a payment option is changed.\n         * @param isActive\n         */\n        onActiveChange: function (isActive) {\n            var self = this;\n\n            if (!isActive) {\n                return;\n            }\n\n            if (self.showCvvVerify()) {\n                if (self.hostedFieldsInstance) {\n                    self.hostedFieldsInstance.teardown(function (teardownError) {\n                        if (teardownError) {\n                            globalMessageList.addErrorMessage({\n                                message: teardownError.message\n                            });\n                        }\n                        self.hostedFieldsInstance = null;\n                        self.initHostedCvvField();\n                    });\n                    return;\n                }\n                self.initHostedCvvField();\n            }\n        },\n\n        /**\n         * Initialize the CVV input field with the Braintree Hosted Fields SDK.\n         */\n        initHostedCvvField: function () {\n            var self = this;\n            client.create({\n                authorization: Braintree.getClientToken()\n            }, function (clientError, clientInstance) {\n                if (clientError) {\n                    globalMessageList.addErrorMessage({\n                        message: clientError.message\n                    });\n                }\n                hostedFields.create({\n                    client: clientInstance,\n                    fields: {\n                        cvv: {\n                            selector: '#' + self.getId() + '_cid',\n                            placeholder: '123'\n                        }\n                    }\n                }, function (hostedError, hostedFieldsInstance) {\n                    if (hostedError) {\n                        globalMessageList.addErrorMessage({\n                            message: hostedError.message\n                        });\n                        return;\n                    }\n\n                    self.hostedFieldsInstance = hostedFieldsInstance;\n                    self.onInstanceReady(self.hostedFieldsInstance);\n                });\n            });\n        },\n\n        /**\n         * Return the payment method code.\n         * @returns {string}\n         */\n        getCode: function () {\n            return 'braintree_cc_vault';\n        },\n\n        /**\n         * Get last 4 digits of card\n         * @returns {String}\n         */\n        getMaskedCard: function () {\n            return this.details.maskedCC;\n        },\n\n        /**\n         * Get expiration date\n         * @returns {String}\n         */\n        getExpirationDate: function () {\n            return this.details.expirationDate;\n        },\n\n        /**\n         * Get card type\n         * @returns {String}\n         */\n        getCardType: function () {\n            return this.details.type;\n        },\n\n        /**\n         * Get show CVV Field\n         * @returns {Boolean}\n         */\n        showCvvVerify: function () {\n            return window.checkoutConfig.payment[this.code].cvvVerify;\n        },\n\n        /**\n         * Show or hide the error message.\n         * @param selector\n         * @param state\n         * @returns {boolean}\n         */\n        validateCvv: function (selector, state) {\n            var $selector = $(selector),\n                invalidClass = 'braintree-hosted-fields-invalid';\n\n            if (state === true) {\n                $selector.removeClass(invalidClass);\n                return true;\n            }\n\n            $selector.addClass(invalidClass);\n            return false;\n        },\n\n        /**\n         * Place order\n         */\n        placeOrder: function () {\n            var self = this;\n\n            if (self.showCvvVerify()) {\n                if (!self.validateCvv('#' + self.getId() + '_cid', self.isValidCvv) || !additionalValidators.validate()) {\n                    return;\n                }\n            } else {\n                if (!additionalValidators.validate()) {\n                    return;\n                }\n            }\n\n            fullScreenLoader.startLoader();\n\n            if (self.showCvvVerify() && typeof self.hostedFieldsInstance !== 'undefined') {\n                self.hostedFieldsInstance.tokenize({}, function (error, payload) {\n                    if (error) {\n                        fullScreenLoader.stopLoader();\n                        globalMessageList.addErrorMessage({\n                            message: error.message\n                        });\n                        return;\n                    }\n                    $.getJSON(\n                        self.updatePaymentUrl,\n                        {\n                            'nonce': payload.nonce,\n                            'public_hash': self.publicHash\n                        }\n                    ).done(function (response) {\n                        if (response.success === false) {\n                            fullScreenLoader.stopLoader();\n                            globalMessageList.addErrorMessage({\n                                message: 'CVV verification failed.'\n                            });\n                            return;\n                        }\n                        self.getPaymentMethodNonce();\n                    })\n                });\n            } else {\n                self.getPaymentMethodNonce();\n            }\n        },\n\n        /**\n         * Send request to get payment method nonce\n         */\n        getPaymentMethodNonce: function () {\n            var self = this;\n\n            fullScreenLoader.startLoader();\n            $.getJSON(self.nonceUrl, {\n                'public_hash': self.publicHash,\n                'cvv': self.vaultedCVV()\n            }).done(function (response) {\n                fullScreenLoader.stopLoader();\n                self.hostedFields(function (formComponent) {\n                    formComponent.setPaymentMethodNonce(response.paymentMethodNonce);\n                    formComponent.additionalData['public_hash'] = self.publicHash;\n                    formComponent.code = self.code;\n                    if (self.vaultedCVV()) {\n                        formComponent.additionalData['cvv'] = self.vaultedCVV();\n                    }\n\n                    self.validatorManager.validate(formComponent, function () {\n                        fullScreenLoader.stopLoader();\n                        return formComponent.placeOrder('parent');\n                    }, function() {\n                        // No teardown actions required.\n                        fullScreenLoader.stopLoader();\n                        formComponent.setPaymentMethodNonce(null);\n                    });\n\n                });\n            }).fail(function (response) {\n                var error = JSON.parse(response.responseText);\n\n                fullScreenLoader.stopLoader();\n                globalMessageList.addErrorMessage({\n                    message: error.message\n                });\n            });\n        }\n    });\n});\n","PayPal_Braintree/js/view/payment/method-renderer/venmo.js":"define(\n    [\n        'Magento_Checkout/js/view/payment/default',\n        'braintree',\n        'braintreeDataCollector',\n        'braintreeVenmo',\n        'PayPal_Braintree/js/form-builder',\n        'Magento_Ui/js/model/messageList',\n        'Magento_Checkout/js/model/full-screen-loader',\n        'Magento_Checkout/js/model/payment/additional-validators',\n        'mage/translate'\n    ],\n    function (\n        Component,\n        braintree,\n        dataCollector,\n        venmo,\n        formBuilder,\n        messageList,\n        fullScreenLoader,\n        additionalValidators,\n        $t\n    ) {\n        'use strict';\n\n        return Component.extend({\n            defaults: {\n                deviceData: null,\n                paymentMethodNonce: null,\n                template: 'PayPal_Braintree/payment/venmo',\n                venmoInstance: null\n            },\n\n            clickVenmoBtn: function () {\n                var self = this;\n\n                if (!additionalValidators.validate()) {\n                    return false;\n                }\n\n                if (!this.venmoInstance) {\n                    this.setErrorMsg($t('Venmo not initialized, please try reloading.'));\n                    return;\n                }\n\n                this.venmoInstance.tokenize(function (tokenizeErr, payload) {\n                    if (tokenizeErr) {\n                        if (tokenizeErr.code === 'VENMO_CANCELED') {\n                            self.setErrorMsg($t('Venmo app is not available or the payment flow was cancelled.'));\n                        } else if (tokenizeErr.code === 'VENMO_APP_CANCELED') {\n                            self.setErrorMsg($t('Venmo payment flow cancelled.'));\n                        } else {\n                            self.setErrorMsg(tokenizeErr.message);\n                        }\n                    } else {\n                        self.handleVenmoSuccess(payload);\n                    }\n                });\n            },\n\n            collectDeviceData: function (clientInstance, callback) {\n                var self = this;\n                dataCollector.create({\n                    client: clientInstance,\n                    paypal: true\n                }, function (dataCollectorErr, dataCollectorInstance) {\n                    if (dataCollectorErr) {\n                        return;\n                    }\n                    self.deviceData = dataCollectorInstance.deviceData;\n                    callback();\n                });\n            },\n\n            getClientToken: function () {\n                return window.checkoutConfig.payment[this.getCode()].clientToken;\n            },\n\n            getCode: function() {\n                return 'braintree_venmo';\n            },\n\n            getData: function () {\n                let data = {\n                    'method': this.getCode(),\n                    'additional_data': {\n                        'payment_method_nonce': this.paymentMethodNonce,\n                        'device_data': this.deviceData\n                    }\n                };\n\n                data['additional_data'] = _.extend(data['additional_data'], this.additionalData);\n\n                return data;\n            },\n\n            getPaymentMarkSrc: function () {\n                return window.checkoutConfig.payment[this.getCode()].paymentMarkSrc;\n            },\n\n            getTitle: function() {\n                return 'Venmo';\n            },\n\n            handleVenmoSuccess: function (payload) {\n                this.setPaymentMethodNonce(payload.nonce);\n                this.placeOrder();\n            },\n\n            initialize: function () {\n                this._super();\n\n                var self = this;\n\n                braintree.create({\n                    authorization: self.getClientToken()\n                }, function (clientError, clientInstance) {\n                    if (clientError) {\n                        this.setErrorMsg($t('Unable to initialize Braintree Client.'));\n                        return;\n                    }\n\n                    // Collect device data\n                    self.collectDeviceData(clientInstance, function () {\n                        // callback from collectDeviceData\n                        venmo.create({\n                            client: clientInstance,\n                            allowDesktop: true,\n                            allowNewBrowserTab: false\n                        }, function (venmoErr, venmoInstance) {\n                            if (venmoErr) {\n                                self.setErrorMsg($t('Error initializing Venmo: %1').replace('%1', venmoErr));\n                                return;\n                            }\n\n                            if (!venmoInstance.isBrowserSupported()) {\n                                console.log('Browser does not support Venmo');\n                                return;\n                            }\n\n                            self.setVenmoInstance(venmoInstance);\n                        });\n                    });\n                });\n\n                return this;\n            },\n\n            isAllowed: function () {\n                return window.checkoutConfig.payment[this.getCode()].isAllowed;\n            },\n\n            setErrorMsg: function (message) {\n                messageList.addErrorMessage({\n                    message: message\n                });\n            },\n\n            setPaymentMethodNonce: function (nonce) {\n                this.paymentMethodNonce = nonce;\n            },\n\n            setVenmoInstance: function (instance) {\n                this.venmoInstance = instance;\n            }\n        });\n    }\n);\n","PayPal_Braintree/js/view/payment/method-renderer/multishipping/hosted-fields.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*browser:true*/\n/*global define*/\n\ndefine([\n    'jquery',\n    'PayPal_Braintree/js/view/payment/method-renderer/hosted-fields',\n    'PayPal_Braintree/js/validator',\n    'Magento_Ui/js/model/messageList',\n    'mage/translate',\n    'Magento_Checkout/js/model/full-screen-loader',\n    'Magento_Checkout/js/action/set-payment-information',\n    'Magento_Checkout/js/model/payment/additional-validators',\n    'PayPal_Braintree/js/view/payment/adapter'\n], function (\n    $,\n    Component,\n    validator,\n    messageList,\n    $t,\n    fullScreenLoader,\n    setPaymentInformationAction,\n    additionalValidators,\n    braintree\n) {\n    'use strict';\n\n    return Component.extend({\n        defaults: {\n            template: 'PayPal_Braintree/payment/multishipping/form'\n        },\n\n        /**\n         * Get list of available CC types\n         *\n         * @returns {Object}\n         */\n        getCcAvailableTypes: function () {\n            var availableTypes = validator.getAvailableCardTypes(),\n                billingCountryId;\n\n            billingCountryId = $('#multishipping_billing_country_id').val();\n\n            if (billingCountryId && validator.getCountrySpecificCardTypes(billingCountryId)) {\n                return validator.collectTypes(\n                    availableTypes, validator.getCountrySpecificCardTypes(billingCountryId)\n                );\n            }\n\n            return availableTypes;\n        },\n\n        /**\n         * @override\n         */\n        handleNonce: function (data) {\n            var self = this;\n            this.setPaymentMethodNonce(data.nonce);\n\n            // place order on success validation\n            self.validatorManager.validate(self, function () {\n                return self.setPaymentInformation();\n            }, function() {\n                self.isProcessing = false;\n                self.paymentMethodNonce = null;\n            });\n        },\n\n        /**\n         * @override\n         */\n        placeOrder: function () {\n            var self = this;\n\n            if (this.isProcessing) {\n                return false;\n            } else {\n                this.isProcessing = true;\n            }\n\n            braintree.tokenizeHostedFields();\n            return false;\n        },\n\n        /**\n         * @override\n         */\n        setPaymentInformation: function () {\n            if (additionalValidators.validate()) {\n                fullScreenLoader.startLoader();\n                $.when(\n                    setPaymentInformationAction(\n                        this.messageContainer,\n                        this.getData()\n                    )\n                ).done(this.done.bind(this))\n                    .fail(this.fail.bind(this));\n            }\n        },\n\n        /**\n         * {Function}\n         */\n        fail: function () {\n            fullScreenLoader.stopLoader();\n\n            return this;\n        },\n\n        /**\n         * {Function}\n         */\n        done: function () {\n            fullScreenLoader.stopLoader();\n            $('#multishipping-billing-form').submit();\n\n            return this;\n        }\n    });\n});\n","PayPal_Braintree/js/view/payment/method-renderer/multishipping/paypal.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*browser:true*/\n/*global define*/\ndefine([\n    'jquery',\n    'underscore',\n    'braintreeCheckoutPayPalAdapter',\n    'Magento_Checkout/js/model/quote',\n    'PayPal_Braintree/js/view/payment/method-renderer/paypal',\n    'Magento_Checkout/js/action/set-payment-information',\n    'Magento_Checkout/js/model/payment/additional-validators',\n    'Magento_Checkout/js/model/full-screen-loader',\n    'mage/translate'\n], function (\n    $,\n    _,\n    Braintree,\n    quote,\n    Component,\n    setPaymentInformationAction,\n    additionalValidators,\n    fullScreenLoader,\n    $t\n) {\n    'use strict';\n\n    return Component.extend({\n        defaults: {\n            template: 'PayPal_Braintree/payment/multishipping/paypal',\n            submitButtonSelector: '[id=\"parent-payment-continue\"]',\n            reviewButtonHtml: ''\n        },\n\n        /**\n         * @override\n         */\n        initObservable: function () {\n            this.reviewButtonHtml = $(this.submitButtonSelector).html();\n            return this._super();\n        },\n\n        initClientConfig: function () {\n            this.clientConfig = _.extend(this.clientConfig, this.getPayPalConfig());\n            this.clientConfig.paypal.enableShippingAddress = false;\n\n            _.each(this.clientConfig, function (fn, name) {\n                if (typeof fn === 'function') {\n                    this.clientConfig[name] = fn.bind(this);\n                }\n            }, this);\n            this.clientConfig.buttonPayPalId = 'parent-payment-continue';\n\n        },\n\n        /**\n         * @override\n         */\n        onActiveChange: function (isActive) {\n            this.updateSubmitButtonHtml(isActive);\n            this._super(isActive);\n        },\n\n        /**\n         * @override\n         */\n        beforePlaceOrder: function (data) {\n            this._super(data);\n        },\n\n        /**\n         * Re-init PayPal Auth Flow\n         */\n        reInitPayPal: function () {\n            this.disableButton();\n            this.clientConfig.paypal.amount = parseFloat(this.grandTotalAmount).toFixed(2);\n\n            if (!quote.isVirtual()) {\n                this.clientConfig.paypal.enableShippingAddress = false;\n                this.clientConfig.paypal.shippingAddressEditable = false;\n            }\n\n            Braintree.setConfig(this.clientConfig);\n\n            if (Braintree.getPayPalInstance()) {\n                Braintree.getPayPalInstance().teardown(function () {\n                    Braintree.setup();\n                }.bind(this));\n                Braintree.setPayPalInstance(null);\n            } else {\n                Braintree.setup();\n                this.enableButton();\n            }\n        },\n\n        loadPayPalButton: function (paypalCheckoutInstance, funding) {\n            let paypalPayment = Braintree.config.paypal,\n                onPaymentMethodReceived = Braintree.config.onPaymentMethodReceived;\n            let style = {\n                color: Braintree.getColor(funding),\n                shape: Braintree.getShape(funding),\n                layout: Braintree.getLayout(funding),\n                size: Braintree.getSize(funding),\n                tagline: Braintree.getTagline(funding),\n                label: Braintree.getLabel(funding)\n            };\n\n            if (Braintree.getBranding()) {\n                style.branding = Braintree.getBranding();\n            }\n            if (Braintree.getFundingIcons()) {\n                style.fundingicons = Braintree.getFundingIcons();\n            }\n\n            if (funding === 'credit') {\n                Braintree.config.buttonId = this.clientConfig.buttonCreditId;\n            } else if (funding === 'paylater') {\n                Braintree.config.buttonId = this.clientConfig.buttonPaylaterId;\n            } else {\n                Braintree.config.buttonId = this.clientConfig.buttonPayPalId;\n            }\n\n            // Render\n            Braintree.config.paypalInstance = paypalCheckoutInstance;\n            var events = Braintree.events;\n            $('#' + Braintree.config.buttonId).html('');\n\n            var button = paypal.Buttons({\n                fundingSource: funding,\n                env: Braintree.getEnvironment(),\n                style: style,\n                commit: true,\n                locale: Braintree.config.paypal.locale,\n\n                createOrder: function () {\n                    return paypalCheckoutInstance.createPayment(paypalPayment);\n                },\n\n                onCancel: function (data) {\n                    console.log('checkout.js payment cancelled', JSON.stringify(data, 0, 2));\n\n                    if (typeof events.onCancel === 'function') {\n                        events.onCancel();\n                    }\n                },\n\n                onError: function (err) {\n                    Braintree.showError($t(\"PayPal Checkout could not be initialized. Please contact the store owner.\"));\n                    Braintree.config.paypalInstance = null;\n                    console.error('Paypal checkout.js error', err);\n\n                    if (typeof events.onError === 'function') {\n                        events.onError(err);\n                    }\n                }.bind(this),\n\n                onClick: function (data) {\n                    // To check term & conditions input checked - validate additional validators.\n                    if (!additionalValidators.validate()) {\n                        return false;\n                    }\n\n                    if (typeof events.onClick === 'function') {\n                        events.onClick(data);\n                    }\n                }.bind(this),\n\n                onApprove: function (data, actions) {\n                    return paypalCheckoutInstance.tokenizePayment(data)\n                        .then(function (payload) {\n                            onPaymentMethodReceived(payload);\n                        });\n                }\n\n            });\n            if (button.isEligible() && $('#' + Braintree.config.buttonId).length) {\n\n                button.render('#' + Braintree.config.buttonId).then(function () {\n                    Braintree.enableButton();\n                    if (typeof Braintree.config.onPaymentMethodError === 'function') {\n                        Braintree.config.onPaymentMethodError();\n                    }\n                }.bind(this)).then(function (data) {\n                    if (typeof events.onRender === 'function') {\n                        events.onRender(data);\n                    }\n                });\n            }\n        },\n\n        /**\n         * Get configuration for PayPal\n         * @returns {Object}\n         */\n        getPayPalConfig: function () {\n            var totals = quote.totals(),\n                config = {},\n                isActiveVaultEnabler = this.isActiveVault();\n\n            config.paypal = {\n                flow: 'checkout',\n                amount: parseFloat(this.grandTotalAmount).toFixed(2),\n                currency: totals['base_currency_code'],\n                locale: this.getLocale(),\n                requestBillingAgreement: true,\n                /**\n                 * Triggers on any Braintree error\n                 */\n                onError: function () {\n                    this.paymentMethodNonce = null;\n                },\n\n                /**\n                 * Triggers if browser doesn't support PayPal Checkout\n                 */\n                onUnsupported: function () {\n                    this.paymentMethodNonce = null;\n                }\n            };\n\n            if (!quote.isVirtual()) {\n                config.paypal.enableShippingAddress = false;\n                config.paypal.shippingAddressEditable = false;\n            }\n\n            if (this.getMerchantName()) {\n                config.paypal.displayName = this.getMerchantName();\n            }\n\n            return config;\n        },\n\n        getShippingAddress: function () {\n\n            return {};\n        },\n\n        /**\n         * @override\n         */\n        getData: function () {\n            var data = this._super();\n\n            data['additional_data']['is_active_payment_token_enabler'] = true;\n\n            return data;\n        },\n\n        /**\n         * @override\n         */\n        isActiveVault: function () {\n            return true;\n        },\n\n        /**\n         * Skipping order review step on checkout with multiple addresses is not allowed.\n         *\n         * @returns {Boolean}\n         */\n        isSkipOrderReview: function () {\n            return false;\n        },\n\n        /**\n         * Checks if payment method nonce is already received.\n         *\n         * @returns {Boolean}\n         */\n        isPaymentMethodNonceReceived: function () {\n            return this.paymentMethodNonce !== null;\n        },\n\n        /**\n         * Update submit button on multi-addresses checkout billing form.\n         *\n         * @param {Boolean} isActive\n         */\n        updateSubmitButtonHtml: function (isActive) {\n            $(this.submitButtonSelector).removeClass(\"primary\");\n            if (this.isPaymentMethodNonceReceived() || !isActive) {\n                $(this.submitButtonSelector).addClass(\"primary\");\n                $(this.submitButtonSelector).html(this.reviewButtonHtml);\n            }\n        },\n\n        /**\n         * @override\n         */\n        placeOrder: function () {\n            if (!this.isPaymentMethodNonceReceived()) {\n                this.payWithPayPal();\n            } else {\n                fullScreenLoader.startLoader();\n\n                $.when(\n                    setPaymentInformationAction(\n                        this.messageContainer,\n                        this.getData()\n                    )\n                ).done(this.done.bind(this))\n                    .fail(this.fail.bind(this));\n            }\n        },\n\n        /**\n         * {Function}\n         */\n        fail: function () {\n            fullScreenLoader.stopLoader();\n\n            return this;\n        },\n\n        /**\n         * {Function}\n         */\n        done: function () {\n            fullScreenLoader.stopLoader();\n            $('#multishipping-billing-form').submit();\n\n            return this;\n        }\n    });\n});","Amasty_MegaMenuLite/js/wrapper.js":"/* eslint-disable no-mixed-operators */\n/**\n * Amasty MegaMenu Wrapper UI Component\n *\n * @desc Component Mega Menu Lite Module\n */\n\ndefine([\n    'jquery',\n    'ko',\n    'uiComponent',\n    'underscore',\n    'ammenu_color_helper',\n    'ammenu_helpers'\n], function ($, ko, Component, _, colorHelper, helpers) {\n    'use strict';\n\n    return Component.extend({\n        defaults: {\n            components: {\n                ammenu_sidebar_menu_wrapper: {\n                    name: 'ammenu_sidebar_menu_wrapper',\n                    component: 'Amasty_MegaMenuLite/js/sidebar_menu/sidebar_menu',\n                    deps: ['index = ammenu_wrapper'],\n                    enable_condition: function () {\n                        return this.isMobile() || this.is_hamburger;\n                    }\n                },\n                ammenu_submenu_wrapper: {\n                    name: 'ammenu_submenu_wrapper',\n                    component: 'uiComponent',\n                    template: 'Amasty_MegaMenuLite/submenu/wrapper',\n                    deps: ['index = ammenu_wrapper'],\n                    imports: {\n                        animation_time: 'index = ammenu_wrapper:animation_time',\n                        color_settings: 'index = ammenu_wrapper:color_settings'\n                    },\n                    enable_condition: function () {\n                        return !this.isMobile();\n                    }\n                },\n                ammenu_submenu_simple: {\n                    name: 'ammenu_submenu_simple',\n                    component: 'Amasty_MegaMenuLite/js/submenu/simple',\n                    deps: ['index = ammenu_wrapper'],\n                    enable_condition: function () {\n                        return !this.isMobile();\n                    }\n                },\n                ammenu_hamburger_wrapper: {\n                    name: 'ammenu_hamburger_wrapper',\n                    component: 'Amasty_MegaMenuLite/js/hamburger_menu/hamburger_menu',\n                    deps: ['index = ammenu_wrapper'],\n                    enable_condition: function () {\n                        return !this.isMobile() && this.is_hamburger;\n                    }\n                },\n                ammenu_overlay_wrapper: {\n                    name: 'ammenu_overlay_wrapper',\n                    component: 'Amasty_MegaMenuLite/js/components/overlay',\n                    deps: ['index = ammenu_hamburger_toggle'],\n                    enable_condition: function () {\n                        return this.isMobile() || this.is_hamburger;\n                    }\n                },\n                ammenu_columns_wrapper: {\n                    name: 'ammenu_columns_wrapper',\n                    component: 'Amasty_MegaMenuLite/js/components/tree/columns',\n                    deps: ['index = ammenu_wrapper'],\n                    enable_condition: function () {\n                        return !this.isMobile();\n                    }\n                },\n                ammenu_tree_wrapper: {\n                    name: 'ammenu_tree_wrapper',\n                    component: 'Amasty_MegaMenuLite/js/components/tree/tree',\n                    deps: ['index = ammenu_wrapper'],\n                    enable_condition: function () {\n                        return !this.isMobile();\n                    }\n                },\n                ammenu_account_wrapper: {\n                    name: 'ammenu_account_wrapper',\n                    component: 'Amasty_MegaMenuLite/js/components/account',\n                    deps: ['index = ammenu_wrapper'],\n                    enable_condition: function () {\n                        return this.isMobile() || this.is_hamburger;\n                    }\n                },\n                ammenu_tabs_wrapper: {\n                    name: 'ammenu_tabs_wrapper',\n                    component: 'Amasty_MegaMenuLite/js/components/tabs',\n                    deps: ['index = ammenu_wrapper'],\n                    enable_condition: function () {\n                        return this.isMobile() || this.is_hamburger;\n                    }\n                },\n                ammenu_hamburger_toggle: {\n                    name: 'ammenu_hamburger_toggle',\n                    component: 'Amasty_MegaMenuLite/js/components/hamburger_toggle',\n                    deps: ['index = ammenu_wrapper'],\n                    enable_condition: function () {\n                        return this.isMobile() || this.is_hamburger;\n                    }\n                }\n            },\n            template: 'Amasty_MegaMenuLite/wrapper',\n            templates: {\n                drill_wrapper: 'Amasty_MegaMenu/sidebar_menu/drill/wrapper',\n                sidebar_type_switcher: 'Amasty_MegaMenuLite/sidebar_menu/type_switcher',\n                greetings: 'Amasty_MegaMenuLite/components/greetings',\n                item: 'Amasty_MegaMenuLite/components/item/wrapper',\n                item_content: 'Amasty_MegaMenuLite/components/item/content',\n                item_button: 'Amasty_MegaMenuLite/components/item/button',\n                item_link: 'Amasty_MegaMenuLite/components/item/link',\n                label: 'Amasty_MegaMenuLite/components/item/label',\n                close_button: 'Amasty_MegaMenuLite/components/buttons/close',\n                icon: 'Amasty_MegaMenuLite/components/icon',\n                item_icon: 'Amasty_MegaMenuLite/components/item/icon',\n                hamburger: 'Amasty_MegaMenuLite/hamburger_menu/top/wrapper',\n                menu_title: 'Amasty_MegaMenuLite/sidebar_menu/title',\n                hamburger_items: 'Amasty_MegaMenuLite/hamburger_menu/items',\n                tree_active_level: 'Amasty_MegaMenuLite/components/tree/active_level',\n                accordion: 'Amasty_MegaMenuLite/sidebar_menu/accordion/wrapper'\n            },\n            icons: {\n                create_account: 'Amasty_MegaMenuLite/components/icons/create_account',\n                currency: 'Amasty_MegaMenuLite/components/icons/currency',\n                exit: 'Amasty_MegaMenuLite/components/icons/exit',\n                language: 'Amasty_MegaMenuLite/components/icons/language',\n                settings: 'Amasty_MegaMenuLite/components/icons/settings',\n                sign_in: 'Amasty_MegaMenuLite/components/icons/sign_in',\n                user: 'Amasty_MegaMenuLite/components/icons/user',\n                wishlist: 'Amasty_MegaMenuLite/components/icons/wishlist',\n                chevron: 'Amasty_MegaMenuLite/components/icons/chevron',\n                double_chevron: 'Amasty_MegaMenuLite/components/icons/double_chevron'\n            },\n            view_port: {\n                height: $(window).height(),\n                width: $(window).width()\n            },\n            settings: {\n                delay: 100\n            },\n            maps: {\n                id_index: {}\n            },\n            custom_item_count: 0\n        },\n\n        /**\n         * @inheritDoc\n         */\n        initialize: function () {\n            this._super();\n\n            this.data.isRoot = true;\n            this.initElems(this.data.elems, 0, this.data);\n            this._generateBaseColors();\n            this.isMounted(helpers.mountComponents(this));\n\n            return this;\n        },\n\n        /**\n         * @inheritDoc\n         */\n        initObservable: function () {\n            this._super()\n                .observe({\n                    isSticky: false,\n                    isMounted: false,\n                    isMobile: window.innerWidth <= this.mobile_menu_width,\n                    topMenuActiveItem: null\n                });\n\n            this.isMobile.subscribe(function () {\n                helpers.mountComponents(this);\n            }.bind(this));\n\n            window.addEventListener('resize', this._onScreenResize.bind(this));\n\n            return this;\n        },\n\n        /**\n         * Init Target elements method\n         *\n         * @param {Object} elems\n         * @param {Number} level\n         * @param {Object} parent\n         * @return {void}\n         */\n        initElems: function (elems, level, parent) {\n            var self = this;\n\n            _.each(elems, function (elem) {\n                self.initElem(elem, level, parent);\n\n                if (elem.elems.length) {\n                    self.initElems(elem.elems, level + 1, elem);\n                }\n            });\n        },\n\n        /**\n         * Init Target element colors method\n         *\n         * @param {Object} elem\n         * @return {void}\n         */\n        initElemColors: function (elem) {\n            elem.color = ko.observable(\n                elem.current ? this.color_settings.current_category_color : this.color_settings.main_menu_text\n            );\n            elem.base_color = elem.color();\n        },\n\n        /**\n         * Init Target element method\n         *\n         * @param {Object} elem\n         * @param {Number} level\n         * @param {Object} parent\n         * @return {void}\n         */\n        initElem: function (elem, level, parent) {\n            elem.isActive = ko.observable(false);\n            elem.rendered = ko.observable(false);\n            elem.level = ko.observable(level);\n            elem.isContentActive = ko.observable(false);\n            elem.isSubmenuVisible = ko.observable(true);\n            elem.additionalClasses = [];\n            elem.isVisible = true;\n            elem.isFocused = ko.observable(false);\n            elem.column_count = ko.observable(elem.column_count);\n\n            Object.defineProperty(elem, 'index', {\n                get: function () {\n                    return parent.elems.indexOf(elem) || 0;\n                }\n            });\n\n            elem.isActive.subscribe(function (value) {\n                if (value) {\n                    helpers.setItemFocus(elem);\n                }\n            });\n\n            if (!elem.is_category) {\n                this._initCustomItem(elem);\n            }\n\n            if (level === 0) {\n                this._initRoot(elem);\n            }\n\n            if (parent) {\n                elem.parent = parent;\n            }\n\n            this.initElemColors(elem);\n        },\n\n        /**\n         * Init root submenu element\n         *\n         * @param {Object} elem\n         * @return {void}\n         */\n        _initRoot: function (elem) {\n            this.maps.id_index[elem.id] = elem.index;\n            elem.width_value = ko.observable(elem.width_value);\n            elem.nodes = {};\n\n            elem.isSubmenuVisible(\n                !elem.submenu_type && elem.content && elem.content.trim().length > 7\n                || elem.submenu_type && elem.type.value && !elem.hide_content && elem.elems.length\n            );\n\n            if (elem.width === 0) {\n                elem.width_value('100%');\n            }\n\n            if (elem.width === 1) {\n                elem.width_value('max-content');\n            }\n\n            if (elem.width_value() && elem.width === 2) {\n                elem.width_value(elem.width_value() + 'px');\n            }\n        },\n\n        /**\n         * Init Custom item\n         *\n         * @param {Object} elem\n         * @return {void}\n         */\n        _initCustomItem: function (elem) {\n            if (\n                elem.status === 2 && this.isMobile()\n                || elem.status === 3 && !this.isMobile()\n            ) {\n                elem.isVisible = false;\n            }\n\n            this.custom_item_count += 1;\n        },\n\n        /**\n         * Generating base color setting from base customers colors\n         * @return {void}\n         */\n        _generateBaseColors: function () {\n            this.color_settings\n                .border = colorHelper.getLighten(this.color_settings.toggle_icon_color, 0.16);\n            this.color_settings\n                .third_level_menu = colorHelper.getAltered(this.color_settings.submenu_text, 0.2);\n            this.color_settings\n                .toggle_icon_color_hover = colorHelper.getDarken(this.color_settings.toggle_icon_color, 0.2);\n            this.color_settings\n                .toggle_icon_color_active = colorHelper.getDarken(this.color_settings.toggle_icon_color, 0.3);\n            this.color_settings\n                .hamburger_icon_color_hover = colorHelper.getDarken(this.color_settings.hamburger_icon_color, 0.2);\n            this.color_settings\n                .hamburger_icon_color_active = colorHelper.getDarken(this.color_settings.hamburger_icon_color, 0.3);\n        },\n\n        /**\n         * Rotation and screen resize Event Handler Initialization\n         *\n         * @description update isMobile param via new resolution\n         * @private\n         * @return {void}\n         */\n        _onScreenResize: _.debounce(function () {\n            this.isMobile(window.innerWidth <= this.mobile_menu_width);\n        }, 300)\n    });\n});\n","Amasty_MegaMenuLite/js/utils/helpers.js":"/**\n * Amasty MegaMenu helpers\n */\n\ndefine([\n    'jquery',\n    'ko',\n    'underscore',\n    'uiLayout',\n    'mage/cookies'\n], function ($, ko, _, layout) {\n    'use strict';\n\n    return {\n        selectors: {\n            formKeyInput: 'input[name=\"form_key\"]',\n            slick: '.slick-slider',\n            slide: '.slick-slide'\n        },\n        formKey: $.mage.cookies.get('form_key'),\n\n        /**\n         * Update Form Key\n         *\n         * @param {Object} node\n         *\n         * @desc Updating inner form key inserting\n         * @return {void}\n         */\n        updateFormKey: function (node) {\n            var self = this,\n                formKeyInput;\n\n            _.delay(function () {\n                formKeyInput = $(node).find(self.selectors.formKeyInput);\n\n                if (formKeyInput.val() !== self.formKey) {\n                    formKeyInput.val(self.formKey);\n                }\n            });\n        },\n\n        /**\n         * Mounting necessary components into layout via enable_condition\n         *\n         * @description please specify \"uiClass\" environment for enable_condition params & select parent\n         * @param {Object} uiClass\n         * @return {Boolean}\n         */\n        mountComponents: function (uiClass) {\n            Object.keys(uiClass.components).forEach(function (key) {\n                uiClass.components[key].parent = uiClass.name;\n\n                if (_.isUndefined(uiClass.components[key].enable_condition)) {\n                    layout([uiClass.components[key]]);\n\n                    return false;\n                }\n\n                if (uiClass.components[key].enable_condition.apply(uiClass)) {\n                    layout([uiClass.components[key]]);\n                }\n            });\n\n            return true;\n        },\n\n        /**\n         * ReMounting necessary and Destroy unnecessary components into/to layout via enable_condition\n         *\n         * @description please specify \"uiClass\" environment for enable_condition params & select parent\n         * @params {Object} uiClass\n         * @return {void}\n         */\n        remountComponents: function (uiClass) {\n            uiClass.elems.each(function (component) {\n                if (!component.enable_condition.call(uiClass)) {\n                    component.destroy();\n                }\n            });\n\n            this.mountComponents(uiClass);\n        },\n\n        /**\n         * Applying Bindings in target node element\n         *\n         * @param {Object} element - node element\n         * @param {Object} context - current context\n         * @return {void}\n         */\n        applyBindings: function (element, context) {\n            _.defer(function () {\n                ko.applyBindingsToDescendants(context, element);\n                $(element).trigger('contentUpdated');\n            });\n        },\n\n        /**\n         * Components Array initialization and setting in target component\n         *\n         * @param {Array} array target uiClasses\n         * @param {Object} component current uiClass\n         * @return {void}\n         */\n        initComponentsArray: function (array, component) {\n            _.each(array, function (item) {\n                component[item.index] = item;\n            });\n        },\n\n        /**\n         * Slick Slider Position checking via subscriber\n         *\n         * @desc checking and fixing new slick sliders positions\n         * @param {Object} node - slider container node\n         * @param {Object} observer - ko observer\n         * @return {void | Boolean}\n         */\n        sliderResizeSubscribe: function (node, observer) {\n            var self = this,\n                $slider,\n                $slide,\n                sliderSpeed,\n                sliderAutoplay,\n                subscriber = observer.subscribe(function (value) {\n                    if (!value) {\n                        return false;\n                    }\n\n                    $slider = $(node).find(self.selectors.slick);\n\n                    if (!$slider.length) {\n                        subscriber.dispose();\n\n                        return false;\n                    }\n\n                    sliderAutoplay = $slider.slick('slickGetOption', 'autoplay');\n                    sliderSpeed = $slider.slick('slickGetOption', 'speed');\n                    $slide = $slider.find(self.selectors.slide).first();\n\n                    if (!parseInt(sliderAutoplay, 10) && $slide.width() && $slider.width()) {\n                        subscriber.dispose();\n\n                        return false;\n                    }\n\n                    $slider.slick('slickSetOption', 'speed', 0);\n                    $slider.slick('slickGoTo', 0);\n                    $slider.slick('setPosition');\n                    $slider.slick('setDimensions');\n                    $slider.slick('slickSetOption', 'speed', sliderSpeed);\n                });\n        },\n\n        /**\n         * Set focus on first element in target\n         *\n         * @public\n         * @param {Object} elem\n         * @return {void}\n         */\n        setItemFocus: _.debounce(function (elem) {\n            if (elem && elem.elems.length && _.isFunction(elem.elems[0].isFocused)) {\n                elem.elems[0].isFocused(true);\n            }\n        }, 500),\n\n        /**\n         * All category link element generator\n         *\n         * @desc preparing object element for 'all category' link via current data\n         * and shifting to current Array\n         * @param {Object} elem - slider container node\n         * @param {String} color - target color\n         * @return {Boolean} status\n         */\n        initAllItemLink: function (elem, color) {\n            var prototype;\n\n            if (\n                !elem.url.length ||\n                elem.elems.length && elem.elems[0].isViewAll ||\n                !_.isUndefined(elem.all_link) && !elem.all_link\n            ) {\n                return false;\n            }\n\n            prototype = {\n                name: $.mage.__('View All') + ' ' + elem.name,\n                isLinkInteractive: true,\n                index: 0,\n                isFocused: ko.observable(false),\n                isViewAll: true,\n                url: elem.url,\n                elems: [],\n                content: '',\n                hide_content: true,\n                isSubmenuVisible: ko.observable(false),\n                type: elem.type,\n                additionalClasses: ' -all-link',\n                color: ko.observable(color),\n                base_color: color,\n                isVisible: ko.observable(true),\n                level: ko.observable(elem.level()),\n                parent: elem\n            };\n\n            elem.elems.unshift(prototype);\n\n            return true;\n        }\n    };\n});\n","Amasty_MegaMenuLite/js/utils/color.js":"/**\n * Amasty MegaMenu Colors Helper Component\n */\n\ndefine([\n    'jquery',\n    'jquery-ui-modules/effect'\n], function ($) {\n    'use strict';\n\n    return {\n\n        /**\n         * Generate darken color depending on the specified percentage\n         *\n         * @params {String} color - any color format\n         * @params {Number} percent - relative values from 0.1 to 0.9\n         *\n         * @return {String} new color in rgba\n         */\n        getDarken: function (color, percent) {\n            var currentHsla = $.Color(color).hsla();\n\n            currentHsla[2] = currentHsla[2] - percent;\n\n            return $.Color(color).hsla(currentHsla).toRgbaString();\n        },\n\n        /**\n         * Generate lighten color depending on the specified percentage\n         *\n         * @params {String} color - any color format\n         * @params {Number} percent - relative values from 0.1 to 0.9\n         *\n         * @return {String} new color in rgba\n         */\n        getLighten: function (color, percent) {\n            var currentHsla = $.Color(color).hsla();\n\n            currentHsla[2] = currentHsla[2] + percent;\n\n            return $.Color(color).hsla(currentHsla).toRgbaString();\n        },\n\n        /**\n         * Generate altered color depending on the specified percentage\n         * and side of changes depends on brightness\n         *\n         * @params {String} color - any color format\n         * @params {Number} percent - relative values from 0.1 to 0.9\n         *\n         * @return {String} new color in rgba\n         */\n        getAltered: function (color, percent) {\n            var currentHsla = $.Color(color).hsla(),\n                currentBrightness = currentHsla[2];\n\n            if (currentBrightness > 0.7) {\n                return this.getDarken(color, percent);\n            }\n\n            return this.getLighten(color, percent);\n        }\n    };\n});\n\n","Amasty_MegaMenuLite/js/sidebar_menu/sidebar_menu.js":"/**\n *  Amasty Sidebar Menu UI Component\n */\n\ndefine([\n    'uiComponent',\n    'ammenu_helpers',\n    'underscore',\n    'mage/translate'\n], function (Component, helpers, _) {\n    'use strict';\n\n    return Component.extend({\n        defaults: {\n            template: 'Amasty_MegaMenuLite/sidebar_menu/sidebar_menu',\n            templates: {\n                itemsAccordion: 'Amasty_MegaMenuLite/sidebar_menu/accordion/items/wrapper'\n            },\n            components: [\n                'index = ammenu_wrapper'\n            ],\n            imports: {\n                hamburger_animation: 'index = ammenu_wrapper:hamburger_animation',\n                animation_time: 'index = ammenu_wrapper:animation_time',\n                root_templates: 'index = ammenu_wrapper:templates',\n                color_settings: 'index = ammenu_wrapper:color_settings',\n                settings: 'index = ammenu_wrapper:settings',\n                is_hamburger: 'index = ammenu_wrapper:is_hamburger',\n                icons: 'index = ammenu_wrapper:icons',\n                is_icons_available: 'index = ammenu_wrapper:is_icons_available',\n                mobile_class: 'index = ammenu_wrapper:mobile_class',\n                isOpen: 'index = ammenu_hamburger_toggle:isOpen',\n                activeTab: 'index = ammenu_tabs_wrapper:activeTab',\n                hide_view_all_link: 'index = ammenu_wrapper:hide_view_all_link'\n            }\n        },\n\n        /**\n         * @inheritDoc\n         */\n        initialize: function () {\n            this._super();\n\n            this._initElems(this.source.data.elems);\n\n            return this;\n        },\n\n        /**\n         * @inheritDoc\n         */\n        initObservable: function () {\n            this._super()\n                .observe({\n                    elems: [],\n                    isOpen: false,\n                    activeTab: 0\n                });\n\n            return this;\n        },\n\n        /**\n         * Toggling button method\n         *\n         * @param {Object} elem\n         * @return {Boolean} for stop or continues propagation\n         */\n        toggleItem: function (elem) {\n            if (elem.isSubmenuVisible && elem.isSubmenuVisible()) {\n                elem.isActive(!elem.isActive());\n                elem.rendered(true);\n\n                if (elem.isActive()) {\n                    elem.color(elem.level()\n                        ? this.color_settings.submenu_text_hover\n                        : this.color_settings.main_menu_text_hover);\n                } else {\n                    elem.color(elem.base_color);\n                }\n\n                return false;\n            }\n\n            return true;\n        },\n\n        /**\n         * Init Target elements method\n         *\n         * @param {Object} elems\n         * @return {void}\n         */\n        _initElems: function (elems) {\n            var self = this;\n\n            _.each(elems, function (elem) {\n                if (elem.elems.length || elem.mobile_content) {\n                    self._initElems(elem.elems);\n                }\n\n                self._initElem(elem);\n            });\n        },\n\n        /**\n         * Init Target element method\n         *\n         * @param {Object} elem\n         * @return {void}\n         */\n        _initElem: function (elem) {\n            var isMobile = this.source.isMobile();\n\n            if (isMobile) {\n                elem.isSubmenuVisible(!elem.hide_mobile_content && (elem.elems.length || elem.mobile_content));\n            }\n\n            if (\n                isMobile && !this.hide_view_all_link &&\n                (elem.elems.length || elem.mobile_content && elem.mobile_content.trim().length > 7\n                    && !elem.hide_mobile_content)\n            ) {\n                helpers.initAllItemLink(elem, this.color_settings.third_level_menu);\n            }\n\n            // Disabling focusing on first item in case when content is first element in mobile menu\n            if (isMobile && elem.mobile_content && !elem.show_mobile_content && elem.elems.length) {\n                elem.elems[0].isFocused = false;\n            }\n            // END\n\n            if (elem.level() && !elem.current) {\n                elem.color(this.color_settings.third_level_menu);\n                elem.base_color = this.color_settings.third_level_menu;\n            }\n        }\n    });\n});\n","Amasty_MegaMenuLite/js/submenu/simple.js":"/**\n *  Amasty simple submenu UI Component\n */\n\ndefine([\n    'uiComponent',\n    'ammenu_helpers'\n], function (Component, helpers) {\n    'use strict';\n\n    return Component.extend({\n        defaults: {\n            activeElem: false,\n            template: 'Amasty_MegaMenuLite/submenu/simple/wrapper',\n            imports: {\n                color_settings: 'index = ammenu_wrapper:color_settings',\n                is_icons_available: 'index = ammenu_wrapper:is_icons_available',\n                root_templates: 'index = ammenu_wrapper:templates',\n                animation_time: 'index = ammenu_wrapper:animation_time'\n            }\n        },\n\n        /**\n         * Simple menu init method\n         *\n         * @params {Object} element - node element\n         * @params {Object} context - view model\n         * @return {void}\n         */\n        init: function (element, context) {\n            helpers.applyBindings(element, context);\n            helpers.sliderResizeSubscribe(element, context.elem.isActive);\n            helpers.updateFormKey(element);\n        }\n    });\n});\n","Amasty_MegaMenuLite/js/top_menu/item.js":"/**\n *  Amasty Top Menu Item elements UI Component\n */\n\ndefine([\n    'ko',\n    'uiComponent',\n    'uiRegistry',\n    'underscore',\n    'ammenu_helpers'\n], function (ko, Component, registry, _, helpers) {\n    'use strict';\n\n    return Component.extend({\n        defaults: {\n            imports: {\n                root_templates: 'index = ammenu_wrapper:templates',\n                color_settings: 'index = ammenu_wrapper:color_settings',\n                view_port: 'index = ammenu_wrapper:view_port',\n                settings: 'index = ammenu_wrapper:settings'\n            },\n            components: [\n                'index = ammenu_wrapper'\n            ]\n        },\n\n        /**\n         * @inheritDoc\n         */\n        initialize: function () {\n            this._super();\n\n            registry.get(this.components, function () {\n                helpers.initComponentsArray(arguments, this);\n                this.item = this._getElemById(this.id);\n                this._initItem(this.item);\n            }.bind(this));\n\n            return this;\n        },\n\n        /**\n         * Init submenu\n         * @public\n         * @returns {void}\n         */\n        _initSubmenu: function () {\n            this.item.inited = true;\n\n            if (this.item.nodes.submenu && this.item.width) {\n                if (_.isUndefined(window.ResizeObserver)) {\n                    this._setSubmenuPosition(this.item.nodes.submenu);\n                } else {\n                    this._setSubmenuResizeObserver(this.item.nodes.submenu);\n                }\n            }\n        },\n\n        /**\n         * Menu item hover handler\n         *\n         * @public\n         * @return {void}\n         */\n        onMouseenter: function () {\n            if (this.ammenu_wrapper.topMenuActiveItem()) {\n                this.ammenu_wrapper.topMenuActiveItem().isActive(false);\n            }\n\n            this.ammenu_wrapper.topMenuActiveItem(this.item);\n            this.item.isActive(true);\n            this.item.rendered(true);\n        },\n\n        /**\n         * Menu item mouse leave handler\n         *\n         * @public\n         * @return {void}\n         */\n        onMouseleave: function () {\n            this.ammenu_wrapper.topMenuActiveItem(null);\n            this.item.isActive(false);\n        },\n\n        /**\n         * Find target elem by id in source data\n         *\n         * @private\n         * @returns {Object} targetElem\n         */\n        _getElemById: function () {\n            return this.ammenu_wrapper.data.elems[this.ammenu_wrapper.maps.id_index[this.id]];\n        },\n\n        /**\n         * Set submenu resize observer\n         * for changing submenu position provided container node resized\n         *\n         * @param {Object} node\n         * @return {void}\n         */\n        _setSubmenuResizeObserver: function (node) {\n            this.submenuResizeObserver = new ResizeObserver(this._setSubmenuPosition.bind(this, node));\n            this.submenuResizeObserver.observe(node);\n        },\n\n        /**\n         * Set current opened submenu position via view port\n         * Only for root level\n         *\n         * @params {Object} node\n         * @return {Boolean} for propagation\n         */ // eslint-disable-next-line consistent-return\n        _setSubmenuPosition: _.debounce(function (node) {\n            var submenuRect,\n                inViewPort,\n                isCustomWidth = this.item.width === 2;\n\n            if (this.item.isActive() && this.item.submenu_position.left()) {\n                return false;\n            }\n\n            this.item.width_value(isCustomWidth ? this.item.width_value() : 'max-content');\n\n            this.item.submenu_position.left(false);\n\n            submenuRect = node.getBoundingClientRect();\n            inViewPort = submenuRect.right <= this.view_port.width;\n\n            if (!inViewPort) {\n                this.item.width_value(isCustomWidth ? this.item.width_value() : '100%');\n                this.item.submenu_position.left(1); // 0 is false\n            }\n        }, 300),\n\n        /**\n         * Init Target item\n         *\n         * @private\n         * @param {Object} item\n         * @return {void}\n         */\n        _initItem: function (item) {\n            item.isInteractive = !item.hide_content\n                && (!!item.elems.length || item.content && !!item.content.length)\n                || !!item.url.length;\n            item.backgroundColor = ko.observable('');\n            item.isActive.extend({ rateLimit: this.settings.delay });\n\n            if (!item.isInteractive) {\n                return;\n            }\n\n            item.submenu_position = {\n                left: ko.observable(false)\n            };\n            item.isActive.subscribe(function (value) {\n                if (value) {\n                    item.backgroundColor(this.color_settings.main_menu_background_hover);\n                    item.color(this.color_settings.main_menu_text_hover);\n                } else {\n                    item.backgroundColor('');\n                    item.color(item.base_color);\n                }\n\n                if (!item.inited) {\n                    this._initSubmenu();\n                }\n            }.bind(this));\n        }\n    });\n});\n","Amasty_MegaMenuLite/js/hamburger_menu/hamburger_menu.js":"/**\n *  Amasty Hamburger Wrapper UI Component\n */\n\ndefine([\n    'ko',\n    'underscore',\n    'uiComponent',\n    'ammenu_helpers'\n], function (ko, _, Component) {\n    'use strict';\n\n    return Component.extend({\n        defaults: {\n            templates: {\n                items: 'Amasty_MegaMenuLite/hamburger_menu/items',\n                submenu: 'Amasty_MegaMenuLite/submenu/wrapper'\n            },\n            imports: {\n                view_port: 'index = ammenu_wrapper:view_port',\n                root_templates: 'index = ammenu_wrapper:templates',\n                icons: 'index = ammenu_wrapper:icons',\n                color_settings: 'index = ammenu_wrapper:color_settings',\n                is_icons_available: 'index = ammenu_wrapper:is_icons_available',\n                mobile_class: 'index = ammenu_wrapper:mobile_class',\n                isOpen: 'index = ammenu_hamburger_toggle:isOpen',\n                activeTab: 'index = ammenu_tabs_wrapper:activeTab'\n            }\n        },\n\n        /**\n         * @inheritDoc\n         */\n        initialize: function () {\n            var self = this;\n\n            self._super();\n\n            self.isOpen.subscribe(function (value) {\n                if (!value) {\n                    self._clearItems();\n                }\n            });\n\n            self._initElems();\n\n            return self;\n        },\n\n        /**\n         * @inheritDoc\n         */\n        initObservable: function () {\n            this._super()\n                .observe({\n                    activeTab: 0,\n                    isOpen: false,\n                    activeElem: false\n                });\n\n            return this;\n        },\n\n        /**\n         * Toggling button method\n         *\n         * @param {Object} elem\n         * @param {Object} node - element\n         * @return {Boolean | void}\n         */\n        toggleItem: function (elem, node) {\n            var opening = !elem.isActive(),\n                toggleRect = node.getBoundingClientRect();\n\n            this._clearItems();\n\n            elem.rendered(true);\n\n            if (!opening) {\n                return false;\n            }\n\n            elem.isActive(true);\n            elem.color(this.color_settings.main_menu_text_hover);\n            this.activeElem(elem);\n\n            if (_.isUndefined(window.ResizeObserver)) {\n                this._setSubmenuPosition(elem, toggleRect);\n            } else {\n                this._setSubmenuResizeObserver(elem, toggleRect);\n            }\n\n            return false;\n        },\n\n        /**\n         * Menu item hover handler\n         *\n         * @public\n         * @param {Object} elem\n         * @return {void}\n         */\n        onMouseenter: function (elem) {\n            elem.color(this.color_settings.main_menu_text_hover);\n        },\n\n        /**\n         * Menu item mouse leave handler\n         *\n         * @public\n         * @param {Object} elem\n         * @return {Boolean|void} for skipping\n         */\n        onMouseleave: function (elem) {\n            if (elem.isActive()) {\n                return false;\n            }\n\n            elem.color(elem.base_color);\n        },\n\n        /**\n         * Set current opened submenu position via view port\n         * Only for root level\n         *\n         * @param {Object} elem\n         * @param {Object} clickedRect - clicked element\n         * @return {Boolean} for propagation\n         */\n        _setSubmenuPosition: _.debounce(function (elem, clickedRect) {\n            var submenuRect,\n                inViewport;\n\n            elem.submenu_position.top(clickedRect.top);\n            elem.submenu_position.bottom(false);\n\n            submenuRect = elem.nodes.submenu.getBoundingClientRect();\n            inViewport = submenuRect.bottom <= this.view_port.height;\n\n            if (!inViewport) {\n                elem.submenu_position.top(false);\n                elem.submenu_position.bottom(1); // 0 is false\n            }\n        }),\n\n        /**\n         * Set submenu resize observer\n         * for changing submenu position provided container node resized\n         *\n         * @param {Object} elem\n         * @param {Object} toggleRect - submenu trigger clicked element\n         * @return {void | Boolean}\n         */\n        _setSubmenuResizeObserver: function (elem, toggleRect) {\n            this.submenuResizeObserver = new ResizeObserver(this._setSubmenuPosition.bind(this, elem, toggleRect));\n            this.submenuResizeObserver.observe(elem.nodes.submenu);\n        },\n\n        /**\n         * Remove submenu resize observer\n         * Provided menu elem closed\n         *\n         * @param {Object} elem\n         * @return {void}\n         */\n        _removeSubmenuResizeObserver: function (elem) {\n            if (this.submenuResizeObserver) {\n                this.submenuResizeObserver.unobserve(elem.nodes.submenu);\n            }\n        },\n\n        /**\n         * Elements init method\n         *\n         * @return {void}\n         */\n        _initElems: function () {\n            _.each(this.source.data.elems, function (elem) {\n                if (elem.is_category) {\n                    this._initRoot(elem);\n                    this.elems.push(elem);\n                }\n            }.bind(this));\n        },\n\n        /**\n         * Init root submenu element\n         *\n         * @param {Object} elem\n         * @return {void}\n         */\n        _initRoot: function (elem) {\n            var self = this;\n\n            elem.isActive.subscribe(function (value) {\n                if (!value) {\n                    self.onMouseleave(elem);\n                }\n            });\n\n            elem.submenu_position = {\n                top: ko.observable(false),\n                bottom: ko.observable(false)\n            };\n        },\n\n        /**\n         * Closing active element\n         *\n         * @return {void}\n         */\n        _clearItems: function () {\n            var activeElem = this.activeElem();\n\n            if (activeElem) {\n                activeElem.isActive(false);\n                this.onMouseleave(activeElem);\n                this._removeSubmenuResizeObserver(activeElem);\n                this.activeElem(false);\n            }\n        }\n    });\n});\n","Amasty_MegaMenuLite/js/components/account.js":"/* eslint-disable max-len */\n/**\n *  Amasty Account UI Component\n */\n\ndefine([\n    'ko',\n    'underscore',\n    'uiComponent',\n    'Magento_Customer/js/customer-data',\n    'mage/translate'\n], function (ko, _, Component, customerData, $t) {\n    'use strict';\n\n    return Component.extend({\n        defaults: {\n            template: 'Amasty_MegaMenuLite/account/account',\n            tab_index: 1,\n            imports: {\n                mobile_class: 'index = ammenu_wrapper:color_settings',\n                color_settings: 'index = ammenu_wrapper:color_settings',\n                welcome_message: 'index = ammenu_wrapper:welcome_message',\n                settings: 'index = ammenu_wrapper:settings',\n                root_templates: 'index = ammenu_wrapper:templates',\n                icons: 'index = ammenu_wrapper:icons',\n                activeTab: 'index = ammenu_tabs_wrapper:activeTab'\n            },\n            listens: {\n                activeTab: 'tabChange'\n            }\n        },\n\n        /**\n         * @inheritDoc\n         */\n        initialize: function () {\n            this._super();\n\n            this.customer(customerData.get('customer')());\n            this.wishlist(customerData.get('wishlist')());\n\n            this.items = [\n                {\n                    id: 'login',\n                    isVisible: !this.settings.account.is_logged_in,\n                    icon_template: this.icons.sign_in,\n                    name: $t('Sign In'),\n                    url: this.settings.account.login\n                },\n                {\n                    id: 'create',\n                    isVisible: !this.settings.account.is_logged_in,\n                    icon_template: this.icons.user,\n                    name: $t('Create an Account'),\n                    url: this.settings.account.create\n                },\n                {\n                    id: 'account',\n                    isVisible: this.settings.account.is_logged_in,\n                    icon_template: this.icons.create_account,\n                    name: $t('My Account'),\n                    url: this.settings.account.account\n                },\n                {\n                    id: 'wishlist',\n                    isVisible: this.settings.account.is_logged_in,\n                    counter: this.wishlist().counter,\n                    icon_template: this.icons.wishlist,\n                    name: $t('My Wish Lists'),\n                    url: '/wishlist'\n                },\n                {\n                    id: 'settings',\n                    icon_template: this.icons.settings,\n                    name: $t('Help & Settings'),\n                    elems: [\n                        {\n                            id: 'currency',\n                            icon_template: this.icons.currency,\n                            name: $t('Currency'),\n                            elems: this.mutateSetting(this.settings.currency)\n                        },\n                        {\n                            id: 'language',\n                            icon_template: this.icons.language,\n                            name: $t('Language'),\n                            elems: this.mutateSetting(this.settings.switcher)\n                        }\n                    ],\n                    content_template: 'Amasty_MegaMenuLite/account/settings/settings'\n                },\n                {\n                    id: 'logout',\n                    isVisible: this.settings.account.is_logged_in,\n                    icon_template: this.icons.exit,\n                    name: $t('Log Out'),\n                    url: this.settings.account.logout\n                }\n            ];\n\n            this._initElems(this.items, 0);\n            this.elems(this.items);\n\n            return this;\n        },\n\n        /**\n         * Check for match account tab by index\n         *\n         * @return {Boolean}\n         */\n        matchTab: function () {\n            return this.activeTab() === this.tab_index;\n        },\n\n        /**\n         * Listener for 'activeTab' value changes\n         *\n         * @return {void}\n         */\n        tabChange: _.once(function () {\n            this.rendered(this.matchTab());\n        }),\n\n        /**\n         * @inheritDoc\n         */\n        initObservable: function () {\n            this._super()\n                .observe({\n                    elems: [],\n                    customer: false,\n                    welcome_message: false,\n                    wishlist: false,\n                    activeTab: 0,\n                    rendered: false\n                });\n\n            return this;\n        },\n\n        /**\n         *  Init account elements\n         *\n         * @param {Object} elems\n         * @param {Number} level\n         * @param {Object} [parent]\n         * @return {void}\n         */\n        _initElems: function (elems, level, parent) {\n            var self = this;\n\n            _.each(elems, function (elem) {\n                elem.isVisible = ko.observable(_.isUndefined(elem.isVisible) ? true : elem.isVisible);\n                elem.isActive = ko.observable(false);\n                elem.isFocused = ko.observable(false);\n                elem.level = ko.observable(level);\n                elem.all_link = false;\n                elem.color = ko.observable(self.getElementColor(elem.id));\n                elem.base_color = elem.color();\n                elem.hide_content = false;\n                elem.url = elem.url || '';\n                elem.additionalClasses = '';\n                elem.column_count = ko.observable(1);\n                elem.content = '<!-- ko scope: \"index = ammenu_columns_wrapper\" --><!-- ko template: getTemplate() --><!-- /ko --><!-- /ko -->';\n                elem.isContentActive = ko.observable(false);\n                elem.submenu_type = 0;\n                elem.parent = parent;\n                elem.width = 1;\n                elem.elems = elem.elems || [];\n                elem.isSubmenuVisible = ko.observable(elem.elems.length);\n                elem.rendered = ko.observable(false);\n\n                if (elem.elems && elem.elems.length) {\n                    self._initElems(elem.elems, level + 1, elem);\n                }\n\n                if (level === 0) {\n                    self._initRoot(elem);\n                }\n            });\n        },\n\n        /**\n         *  Preparing target setting item\n         *\n         * @param {Object} setting\n         * @return {Array} prepared target elems list\n         */\n        mutateSetting: function (setting) {\n            var availableOptions = setting.items.filter(function (item) {\n                return item.code !== setting.current_code;\n            });\n\n            if (!setting.current_name) {\n                setting.current_name = setting.current_code;\n            }\n\n            availableOptions.forEach(function (elem) {\n                elem.id = elem.code;\n                elem.url = elem.url || elem['data-post'];\n                elem.counter = elem.code;\n            });\n\n            return [ {\n                id: setting.current_code,\n                name: setting.current_name,\n                counter: setting.current_code,\n                elems: availableOptions\n            } ];\n        },\n\n        /**\n         *  Get highlight or common account link color\n         *\n         * @param {String} type\n         * @returns {String} color\n         */\n        getElementColor: function (type) {\n            return this._isLinkActive(type)\n                ? this.color_settings.current_category_color\n                : this.color_settings.main_menu_text;\n        },\n\n        /**\n         *  Compare link with a href\n         *\n         * @param {String} type\n         * @returns {Boolean}\n         */\n        _isLinkActive: function (type) {\n            return window.location.href.indexOf(type) !== -1;\n        },\n\n        /**\n         * Init root submenu element\n         *\n         * @param {Object} elem\n         * @return {void}\n         */\n        _initRoot: function (elem) {\n            elem.submenu_position = {\n                top: ko.observable(),\n                bottom: ko.observable()\n            };\n\n            elem.nodes = {};\n        }\n    });\n});\n","Amasty_MegaMenuLite/js/components/columns.js":"/**\n *  Amasty Category Columns UI Component\n */\n\ndefine([\n    'ko',\n    'uiComponent'\n], function (ko, Component) {\n    'use strict';\n\n    return Component.extend({\n        defaults: {\n            template: 'Amasty_MegaMenuLite/components/tree/columns'\n        },\n\n        /**\n         * Init Target elements method\n         *\n         * @public\n         * @params {Object} elem - current data\n         * @return {void}\n         */\n        init: function (elem) {\n            this._initColumnCount(elem);\n        },\n\n        /**\n         * Init Columns Count for current Elem\n         *\n         * @public\n         * @params {Object} elem - current root element\n         * @return {void}\n         */\n        _initColumnCount: function (elem) {\n            if (elem.column_count() === 0) {\n                elem.column_count(elem.elems.length);\n            }\n\n            if (elem.column_count() > elem.elems.length) {\n                elem.column_count(elem.elems.length);\n            }\n        }\n    });\n});\n","Amasty_MegaMenuLite/js/components/tabs.js":"/**\n *  Amasty Account UI Component\n */\n\ndefine([\n    'jquery',\n    'uiComponent'\n], function ($, Component) {\n    'use strict';\n\n    return Component.extend({\n        defaults: {\n            template: 'Amasty_MegaMenuLite/sidebar_menu/tabs_switcher',\n            imports: {\n                color_settings: 'index = ammenu_wrapper:color_settings',\n                isOpen: 'index = ammenu_hamburger_toggle:isOpen'\n            }\n        },\n\n        /**\n         * @inheritDoc\n         */\n        initObservable: function () {\n            this._super()\n                .observe({\n                    activeTab: 0,\n                    isOpen: false,\n                    tabsList: [\n                        { title: $.mage.__('Menu') },\n                        { title: $.mage.__('Account') }\n                    ]\n                });\n\n            return this;\n        }\n    });\n});\n","Amasty_MegaMenuLite/js/components/hamburger_toggle.js":"/**\n *  Amasty Hamburger toggle UI Component\n */\n\ndefine([\n    'uiComponent'\n], function (Component) {\n    'use strict';\n\n    return Component.extend({\n        defaults: {\n            links: {\n                color_settings: 'index = ammenu_wrapper:color_settings'\n            }\n        },\n\n        /**\n         * @inheritDoc\n         */\n        initObservable: function () {\n            this._super()\n                .observe({\n                    isOpen: false\n                });\n\n            return this;\n        },\n\n        /**\n         *  Toggling open state method\n         *  @return {void}\n         */\n        toggling: function () {\n            this.isOpen(!this.isOpen());\n        }\n    });\n});\n","Amasty_MegaMenuLite/js/components/overlay.js":"/**\n *  Amasty Menu Overlay UI Component\n */\n\ndefine([\n    'jquery',\n    'uiComponent'\n], function ($, Component) {\n    'use strict';\n\n    return Component.extend({\n        defaults: {\n            nodes: {\n                body: $('body')\n            },\n            template: 'Amasty_MegaMenuLite/components/overlay'\n        },\n\n        /**\n         * @inheritDoc\n         */\n        initialize: function () {\n            var self = this;\n\n            self._super();\n\n            if (self.source) {\n                self.source.isOpen.subscribe(function (value) {\n                    self.isVisible(value);\n                    self.nodes.body.css({\n                        'overflow': value ? 'hidden' : ''\n                    });\n                });\n            }\n\n            return self;\n        },\n\n        /**\n         * @inheritDoc\n         */\n        initObservable: function () {\n            this._super()\n                .observe({\n                    'isVisible': false\n                });\n\n            return this;\n        },\n\n        /**\n         * Hamburger button toggling method\n         * @return {void}\n         */\n        toggling: function () {\n            this.source.isOpen(!this.source.isOpen());\n        }\n    });\n});\n","Amasty_MegaMenuLite/js/components/tree.js":"/**\n *  Amasty Category Tree UI Component\n */\n\ndefine([\n    'ko',\n    'uiComponent',\n    'underscore',\n    'ammenu_helpers'\n], function (ko, Component, _, helpers) {\n    'use strict';\n\n    return Component.extend({\n        defaults: {\n            template: 'Amasty_MegaMenuLite/components/tree/tree',\n            templates: {\n                title: 'Amasty_MegaMenuLite/components/tree/title',\n                active_level: 'Amasty_MegaMenuLite/components/tree/active_level'\n            },\n            imports: {\n                root_templates: 'index = ammenu_wrapper:templates',\n                color_settings: 'index = ammenu_wrapper:color_settings',\n                icons: 'index = ammenu_wrapper:icons',\n                is_icons_available: 'index = ammenu_wrapper:is_icons_available',\n                hide_view_all_link: 'index = ammenu_wrapper:hide_view_all_link'\n            }\n        },\n\n        /**\n         * Init Target elements method\n         *\n         * @public\n         * @params {Object} data - current data {activeLevel, columns}\n         * @return {void}\n         */\n        init: function (data) {\n            this._initElems(data.activeLevel);\n            this.setCurrentColor(data.activeLevel, this.color_settings.submenu_text);\n            data.activeLevel = ko.observable(data.activeLevel);\n\n            helpers.setItemFocus(data.activeLevel().parent);\n            data.activeLevel.subscribe(function (elem) {\n                helpers.setItemFocus(elem);\n            });\n        },\n\n        /**\n         * Set prev level from current active level parent\n         *\n         * @public\n         * @params {Object} activeLevel - current active level\n         * @return {Boolean} for stop or continuous propagation\n         */\n        setPreviousLevel: function (activeLevel) {\n            if (activeLevel().level() > 1) {\n                this.setCurrentColor(activeLevel(), activeLevel().base_color);\n                activeLevel(activeLevel().parent);\n\n                return false;\n            }\n\n            return true;\n        },\n\n        /**\n         * Set next level from current active level elems\n         *\n         * @public\n         * @params {Object} activeLevel - current active level\n         * @params {Object} elem - target elem\n         * @return {Boolean} for continuous propagation if this link\n         */\n        setNextLevel: function (activeLevel, elem) {\n            this.setCurrentColor(elem, this.color_settings.submenu_text);\n            activeLevel(elem);\n\n            return false;\n        },\n\n        /**\n         * Menu item hover handler\n         *\n         * @public\n         * @params {Object} elem\n         * @return {void}\n         */\n        onMouseenter: function (elem) {\n            this.setCurrentColor(elem, this.color_settings.submenu_text_hover);\n        },\n\n        /**\n         * Menu item mouse leave handler\n         *\n         * @public\n         * @params {Object} elem\n         * @return {void}\n         */\n        onMouseleave: function (elem) {\n            this.setCurrentColor(elem, elem.base_color);\n        },\n\n        /**\n         * Set Menu Elem Target Color\n         *\n         * @public\n         * @params {Object} elem\n         * @params {String} color\n         * @return {void}\n         */\n        setCurrentColor: function (elem, color) {\n            if (elem.current) {\n                elem.color(this.color_settings.current_category_color);\n            } else {\n                elem.color(color);\n            }\n        },\n\n        /**\n         * Init Target elements method\n         *\n         * @private\n         * @params {Object} elems\n         * @return {void}\n         */\n        _initElems: function (element) {\n            var self = this;\n\n            _.each(element.elems, function (elem) {\n                if (elem.elems.length) {\n                    self._initElems(elem);\n                }\n\n                self._initElem(elem);\n            });\n\n            if (element.elems.length && !this.hide_view_all_link) {\n                helpers.initAllItemLink(element, this.color_settings.third_level_menu);\n            }\n\n            self._initElem(element);\n        },\n\n        /**\n         * Init Target element method\n         *\n         * @params {Object} elem\n         * @return {void}\n         */\n        _initElem: function (elem) {\n            elem.isSubmenuVisible = ko.observable(elem.elems.length && !elem.hide_content);\n            this.setCurrentColor(elem, this.color_settings.third_level_menu);\n            elem.base_color = this.color_settings.third_level_menu;\n        }\n    });\n});\n","Amasty_MegaMenuLite/js/components/tree/columns.js":"/**\n *  Amasty Category Columns UI Component\n */\n\ndefine([\n    'ko',\n    'uiComponent'\n], function (ko, Component) {\n    'use strict';\n\n    return Component.extend({\n        defaults: {\n            template: 'Amasty_MegaMenuLite/components/tree/columns'\n        },\n\n        /**\n         * Init Target elements method\n         *\n         * @public\n         * @params {Object} elem - current data\n         * @return {void}\n         */\n        init: function (elem) {\n            this._initColumnCount(elem);\n        },\n\n        /**\n         * Init Columns Count for current Elem\n         *\n         * @public\n         * @params {Object} elem - current root element\n         * @return {void}\n         */\n        _initColumnCount: function (elem) {\n            if (elem.column_count() === 0) {\n                elem.column_count(elem.elems.length);\n            }\n\n            if (elem.column_count() > elem.elems.length) {\n                elem.column_count(elem.elems.length);\n            }\n        }\n    });\n});\n","Amasty_MegaMenuLite/js/components/tree/tree.js":"/**\n *  Amasty Category Tree UI Component\n */\n\ndefine([\n    'ko',\n    'uiComponent',\n    'underscore',\n    'ammenu_helpers'\n], function (ko, Component, _, helpers) {\n    'use strict';\n\n    return Component.extend({\n        defaults: {\n            template: 'Amasty_MegaMenuLite/components/tree/tree',\n            templates: {\n                title: 'Amasty_MegaMenuLite/components/tree/title',\n                active_level: 'Amasty_MegaMenuLite/components/tree/active_level'\n            },\n            imports: {\n                root_templates: 'index = ammenu_wrapper:templates',\n                color_settings: 'index = ammenu_wrapper:color_settings',\n                icons: 'index = ammenu_wrapper:icons',\n                is_icons_available: 'index = ammenu_wrapper:is_icons_available',\n                hide_view_all_link: 'index = ammenu_wrapper:hide_view_all_link'\n            }\n        },\n\n        /**\n         * Init Target elements method\n         *\n         * @public\n         * @params {Object} data - current data {activeLevel, columns}\n         * @return {void}\n         */\n        init: function (data) {\n            this._initElems(data.activeLevel);\n            this.setCurrentColor(data.activeLevel, this.color_settings.submenu_text);\n            data.activeLevel = ko.observable(data.activeLevel);\n\n            helpers.setItemFocus(data.activeLevel().parent);\n            data.activeLevel.subscribe(function (elem) {\n                helpers.setItemFocus(elem);\n            });\n        },\n\n        /**\n         * Set prev level from current active level parent\n         *\n         * @public\n         * @params {Object} activeLevel - current active level\n         * @return {Boolean} for stop or continuous propagation\n         */\n        setPreviousLevel: function (activeLevel) {\n            if (activeLevel().level() > 1) {\n                this.setCurrentColor(activeLevel(), activeLevel().base_color);\n                activeLevel(activeLevel().parent);\n\n                return false;\n            }\n\n            return true;\n        },\n\n        /**\n         * Set next level from current active level elems\n         *\n         * @public\n         * @params {Object} activeLevel - current active level\n         * @params {Object} elem - target elem\n         * @return {Boolean} for continuous propagation if this link\n         */\n        setNextLevel: function (activeLevel, elem) {\n            this.setCurrentColor(elem, this.color_settings.submenu_text);\n            activeLevel(elem);\n\n            return false;\n        },\n\n        /**\n         * Menu item hover handler\n         *\n         * @public\n         * @params {Object} elem\n         * @return {void}\n         */\n        onMouseenter: function (elem) {\n            this.setCurrentColor(elem, this.color_settings.submenu_text_hover);\n        },\n\n        /**\n         * Menu item mouse leave handler\n         *\n         * @public\n         * @params {Object} elem\n         * @return {void}\n         */\n        onMouseleave: function (elem) {\n            this.setCurrentColor(elem, elem.base_color);\n        },\n\n        /**\n         * Set Menu Elem Target Color\n         *\n         * @public\n         * @params {Object} elem\n         * @params {String} color\n         * @return {void}\n         */\n        setCurrentColor: function (elem, color) {\n            if (elem.current) {\n                elem.color(this.color_settings.current_category_color);\n            } else {\n                elem.color(color);\n            }\n        },\n\n        /**\n         * Init Target elements method\n         *\n         * @private\n         * @params {Object} elems\n         * @return {void}\n         */\n        _initElems: function (element) {\n            var self = this;\n\n            _.each(element.elems, function (elem) {\n                if (elem.elems.length) {\n                    self._initElems(elem);\n                }\n\n                self._initElem(elem);\n            });\n\n            if (element.elems.length && !this.hide_view_all_link) {\n                helpers.initAllItemLink(element, this.color_settings.third_level_menu);\n            }\n\n            self._initElem(element);\n        },\n\n        /**\n         * Init Target element method\n         *\n         * @params {Object} elem\n         * @return {void}\n         */\n        _initElem: function (elem) {\n            elem.isSubmenuVisible = ko.observable(elem.elems.length && !elem.hide_content);\n            this.setCurrentColor(elem, this.color_settings.third_level_menu);\n            elem.base_color = this.color_settings.third_level_menu;\n        }\n    });\n});\n","Magento_Translation/js/i18n-config.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\n(function () {\n    'use strict';\n\n    require.config({\n        config: {\n            'Magento_Ui/js/lib/knockout/bindings/i18n': {\n                inlineTranslation: true\n            }\n        }\n    });\n})();\n","Magento_Translation/js/mage-translation-dictionary.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'text!js-translation.json'\n], function (dict) {\n    'use strict';\n\n    return JSON.parse(dict);\n});\n","Magento_Translation/js/add-class.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine(['jquery'], function ($) {\n    'use strict';\n\n    return function (config, element) {\n        $(element).addClass(config.class);\n    };\n});\n","Amasty_Xsearch/js/wrapper.js":"/**\n * Amasty Xsearch Wrapper UI Component\n */\n\ndefine([\n    'jquery',\n    'ko',\n    'uiRegistry',\n    'amsearch_helpers',\n    'uiComponent',\n    'amsearch_color_helper',\n    'mage/translate',\n    'amsearchProductLinksStorage',\n    'Amasty_Base/vendor/slick/slick.min'\n], function ($, ko, registry, helpers, Component, colorHelper, $t, productLinksStorage) {\n    'use strict';\n\n    return Component.extend({\n        defaults: {\n            isMobile: $(window).width() < helpers.constants.mobile_view,\n            icons: {\n                chevron: 'Amasty_MegaMenuLite/components/icons/chevron'\n            },\n            nodes: {},\n            components: [\n                'index = amsearch_overlay_section'\n            ],\n            templates: {\n                preload: 'Amasty_Xsearch/components/preload.html',\n                message: 'Amasty_Xsearch/components/message.html',\n                results: 'Amasty_Xsearch/results/wrapper.html',\n                loader: 'Amasty_Xsearch/components/loader.html'\n            },\n            messages: {\n                emptyProductSearch: $t('\ud83d\ude14 We could not find anything for <b>\"%search_query%\"</b>')\n            },\n            selectors: {\n                wrapper: '[data-amsearch-wrapper=\"block\"]',\n            }\n        },\n\n        /**\n         * @inheritDoc\n         */\n        initialize: function () {\n            this._super();\n\n            registry.get(this.components, function () {\n                helpers.initComponentsArray(arguments, this);\n\n                this._initInput();\n                this._initResize();\n                this._initOverlay();\n            }.bind(this));\n\n            return this;\n        },\n\n        /**\n         * @inheritDoc\n         */\n        initObservable: function () {\n            var focusSubscriber;\n\n            this._super()\n                .observe({\n                    loading: false,\n                    focused: false,\n                    opened: false,\n                    preload: false,\n                    readyForSearch: false,\n                    searchProducts: false,\n                    inputValue: '',\n                    resultSectionStyles: false,\n                    resized: false,\n                    searchItems: [],\n                    match: false,\n                    message: ''\n                });\n\n            if (this.data.preloadEnabled) {\n                focusSubscriber = this.focused.subscribe(function (value) {\n                    if (value) {\n                        focusSubscriber.dispose();\n                        this.updatePreload();\n                    }\n                }, this);\n            }\n\n            return this;\n        },\n\n        /**\n         * Input event 'enter keydown' handle\n         *\n         * @public\n         * @param {Object} UiClass\n         * @param {Object} event\n         * @return {Boolean} for propagation\n         */\n        onEnter: function (UiClass, event) {\n            if (event.keyCode === 13) {\n                productLinksStorage.saveLinks($(this.selectors.wrapper)); // process for case redirect with one product\n                this.search();\n\n                return false;\n            }\n\n            return true;\n        },\n\n        /**\n         * Go to search page via input value\n         *\n         * @public\n         * @returns {void}\n         */\n        search: function () {\n            window.location = this.data.url_result + '?q=' + this.inputValue().replace(/\\&/g, '%26');\n        },\n\n        /**\n         * Closing Search Popup and clear text\n         *\n         * @public\n         * @returns {void}\n         */\n        close: function () {\n            this.opened(false);\n            this.inputValue('');\n            this.amsearch_overlay_section.hide();\n        },\n\n        /**\n         * Update html event handler\n         *\n         * @param {Object} node\n         * @public\n         * @returns {void}\n         */\n        updateHtml: function (node) {\n            helpers.applyBindings(node, this);\n        },\n\n        /**\n         * Initialize css variables for node element\n         * And generate names via list of the color_settings conf keys\n         *\n         * @param {Object} node\n         * @public\n         * @returns {void}\n         */\n        initCssVariables: function (node) {\n            Object.keys(this.data.color_settings).forEach(function (key) {\n                node.style.setProperty('--amsearch-color-' + key, '#' + this.data.color_settings[key]);\n                node.style.setProperty('--amsearch-color-' + key + '-focus', colorHelper.getDarken('#' + this.data.color_settings[key], 0.1));\n                node.style.setProperty('--amsearch-color-' + key + '-hover', colorHelper.getDarken('#' + this.data.color_settings[key], 0.05));\n            }.bind(this));\n        },\n\n        /**\n         * Update Preload Section\n         *\n         * @public\n         * @return {void}\n         */\n        updatePreload: function () {\n            $.ajax({\n                url: this.data.url.slice(0, -1) + 'recent',// amasty_xsearch/autocomplete/indexrecent\n                data: {\n                    uenc: this.data.currentUrlEncoded\n                },\n                dataType: 'html',\n                success: function (html) {\n                    this.preload(html);\n                }.bind(this)\n            });\n        },\n\n        /**\n         * Start Search Process\n         *\n         * @public\n         * @param {String} value\n         * @return {void}\n         */\n        searchProcess: function (value) {\n            this.loading(true);\n\n            $.get(\n                this.data.url,\n                {\n                    q: value,\n                    uenc: this.data.currentUrlEncoded,\n                    form_key: $.mage.cookies.get('form_key')\n                },\n                $.proxy(function (data) {\n                    this.opened(true);\n                    this.match(true);\n                    this.loading(false);\n                    this._parseSearchData(data);\n                }, this));\n        },\n\n        /**\n         * Initialize result section node element\n         * Added subscriber for showed position and checking viewport for rendering\n         *\n         * @public\n         * @param {Object} node\n         * @param {Boolean} isBaseSearch\n         * @returns {void}\n         */\n        initResultSection: function (node, isBaseSearch) {\n            if (!isBaseSearch) {\n                var subscriber = this.opened.subscribe(function (value) {\n                    if (value) {\n                        helpers.setNodePositionByViewport(node);\n                        subscriber.dispose();\n                    }\n                }.bind(this));\n            }\n\n            this.nodes.results = node;\n\n            this.resultSectionStyles({\n                background: this.data.color_settings.background,\n                borderColor: this.data.color_settings.border,\n                color: this.data.color_settings.text\n            });\n        },\n\n        /**\n         * @returns {string}\n         */\n        getProductsBlockClasses: function () {\n            return this.data.popup_display\n                ? 'amsearch-products-section -list'\n                : 'amsearch-products-section -grid'\n        },\n\n        /**\n         * init Input value if is setup before ko initialized\n         *\n         * @public\n         * @param {Object} node input node\n         * @returns {void}\n         */\n        initInputValue: function (node) {\n            var value = node.value;\n\n            if (value && value.length) {\n                this.inputValue(node.value);\n            }\n        },\n\n        /**\n         * init Input functionality\n         *\n         * @private\n         * @returns {void}\n         */\n        _initInput: function () {\n            this.readyForSearch = ko.computed(function () {\n                return this.inputValue().length >= this.data.minChars;\n            }.bind(this));\n\n            this.inputValue\n                .extend({\n                    rateLimit: {\n                        method: 'notifyWhenChangesStop',\n                        timeout: this.data.delay\n                    }\n                })\n                .subscribe(function (value) {\n                    var isSearch = value.length >= this.data.minChars,\n                        strippedValue = helpers.stripTags(value);\n\n                    if (isSearch && strippedValue) {\n                        this.inputValue.silentUpdate(strippedValue);\n\n                        return false;\n                    }\n\n                    this.message(false);\n\n                    if (isSearch) {\n                        this.searchProcess(value);\n                    } else {\n                        this.searchItems.removeAll();\n                        this.searchProducts(false);\n                        this.match(false);\n                    }\n                }.bind(this));\n        },\n\n        /**\n         * init overlay functionality\n         *\n         * @private\n         * @returns {void}\n         */\n        _initOverlay: function () {\n            this.focused.subscribe(function (value) {\n                if (value) {\n                    this.amsearch_overlay_section.show();\n                    this.opened(true);\n                    helpers.initProductAddToCart(this.nodes.results);\n                }\n            }.bind(this));\n\n            this.amsearch_overlay_section.opened.subscribe(function (value) {\n                if (!value) {\n                    this.opened(false);\n                }\n            }.bind(this));\n        },\n\n        /**\n         * init resize functionality\n         *\n         * @private\n         * @returns {void|Boolean}\n         */\n        _initResize: function () {\n            if (this.isMobile) {\n                return false;\n            }\n\n            this.resized = ko.computed(function () {\n                return this.readyForSearch() && this.data.width && this.opened();\n            }.bind(this));\n        },\n\n        /**\n         * Parsing data from search request\n         *\n         * @private\n         * @param {Object} data\n         * @return {void}\n         */\n        _parseSearchData: function (data) {\n            var searchItems = [];\n\n            Object.keys(data).forEach(function (key) {\n                if (data[key].type === 'product') {\n                    const isEmptyData = jQuery.isEmptyObject($.parseHTML(data[key].html.trim())),\n                        isProductsSeparateSection = this.isNeedHorizontalView();\n\n                    if (isEmptyData) {\n                        this.searchProducts([]);\n                        this.message(this.messages.emptyProductSearch.replace('%search_query%', this.inputValue()));\n\n                        return;\n                    }\n\n                    if (isProductsSeparateSection) {\n                        this.searchProducts(data[key].html);\n                    } else {\n                        searchItems.push(data[key]);\n                    }\n\n                    return;\n                }\n\n                if (data[key].html === undefined || data[key].html.length <= 1) {\n                    return;\n                }\n\n                searchItems.push(data[key]);\n            }.bind(this));\n\n            this.searchItems(searchItems);\n        },\n\n        isNeedHorizontalView: function () {\n            return this.data.fullWidth\n                || this.data.width >= 700 && window.innerWidth >= 768;\n        }\n    });\n});\n","Amasty_Xsearch/js/content-type/products/appearance/carousel/widget-override.js":"/**\n * Override Magento module-page-builder/view/base/web/js/content-type/products/appearance/carousel/widget.js\n */\n\ndefine([\n    'jquery',\n    'underscore',\n    'matchMedia',\n    'Magento_PageBuilder/js/utils/breakpoints',\n    'Magento_PageBuilder/js/events',\n    'amsearchSlick'\n], function ($, _, mediaCheck, breakpointsUtils, events) {\n    'use strict';\n\n    /**\n     * Initialize slider.\n     *\n     * @param {jQuery} $carouselElement\n     * @param {Object} config\n     */\n    function buildSlick($carouselElement, config) {\n        /**\n         * Prevent each slick slider from being initialized more than once which could throw an error.\n         */\n        if ($carouselElement.hasClass('slick-initialized')) {\n            $carouselElement.slick('unslick');\n        }\n\n        config.slidesToScroll = config.slidesToShow;\n        $carouselElement.slick(config);\n    }\n\n    return function (config, element) {\n        var $element = $(element),\n            $carouselElement = $element.children(),\n            productCount = $element.find('.amsearch-item').length,\n            centerModeClass = 'center-mode',\n            amSearchClass = 'amsearch-pagebuilder-carousel',\n            carouselMode = $element.data('carousel-mode'),\n            slickConfig = {\n                autoplay: $element.data('autoplay'),\n                autoplaySpeed: $element.data('autoplay-speed') || 0,\n                arrows: $element.data('show-arrows'),\n                dots: $element.data('show-dots')\n            };\n\n        $element.addClass(amSearchClass);\n\n        _.each(config.breakpoints, function (breakpoint) {\n            mediaCheck({\n                media: breakpointsUtils.buildMedia(breakpoint.conditions),\n\n                /** @inheritdoc */\n                entry: function () {\n                    var slidesToShow = breakpoint.options.products[carouselMode] ?\n                        breakpoint.options.products[carouselMode].slidesToShow :\n                        breakpoint.options.products.default.slidesToShow;\n\n                    slickConfig.slidesToShow = parseFloat(slidesToShow);\n\n                    if (carouselMode === 'continuous' && productCount > slickConfig.slidesToShow) {\n                        $element.addClass(centerModeClass);\n                        slickConfig.centerPadding = $element.data('center-padding');\n                        slickConfig.centerMode = config.breakpoints['mobile-small'].conditions !== breakpoint.conditions;\n                    } else {\n                        $element.removeClass(centerModeClass);\n                        slickConfig.infinite = $element.data('infinite-loop');\n                    }\n\n                    buildSlick($carouselElement, slickConfig);\n                }\n            });\n        });\n\n        // Redraw slide after content type gets redrawn\n        events.on('contentType:redrawAfter', function (args) {\n            if ($carouselElement.closest(args.element).length) {\n                $carouselElement.slick('setPosition');\n            }\n        });\n    };\n});\n","Amasty_Xsearch/js/widgets/product-item-init.js":"define([\n    'jquery',\n    'Amasty_Xsearch/js/utils/helpers',\n    'amsearchProductLinksStorage'\n], function ($, helpers, productLinksStorage) {\n    'use strict';\n\n    $.widget('mage.amsearchProductItemInit', {\n\n        /**\n         * @inheritDoc\n         */\n        _create: function () {\n            helpers.updateFormKey(this.element);\n            helpers.initProductAddToCart(this.element);\n            productLinksStorage.bindLinks(this.element);\n            $('body').trigger('amsearch.popup.contentUpdated', this.element);\n\n            return this;\n        }\n    });\n\n    return $.mage.amsearchProductItemInit;\n});\n","Amasty_Xsearch/js/widgets/product-slider.js":"/**\n * Slick Slider Initialization\n *\n * @desc Slick slider init and generating options\n */\n\ndefine([\n    'jquery',\n    'Amasty_Base/vendor/slick/slick.min'\n], function ($) {\n    $.widget('amsearch.ProductSlider', {\n        defaultSliderOptions: {\n            slidesToShow: 3,\n            slidesToScroll: 3,\n            infinite: false,\n            dots: true,\n            arrows: true,\n            responsive: [\n                {\n                    breakpoint: 1280,\n                    settings: {\n                        slidesToShow: 3,\n                        slidesToScroll: 3\n                    }\n                },\n                {\n                    breakpoint: 780,\n                    settings: {\n                        arrows: false,\n                        slidesToShow: 2,\n                        slidesToScroll: 2\n                    }\n                }\n            ]\n        },\n\n        /**\n         * @inheritDoc\n         */\n        _create: function () {\n            var options = _.extend(this.defaultSliderOptions, this.options.sliderOptions);\n\n            if (this.options.productsCount <= 3) {\n                return false;\n            }\n\n            if (this.options.observer) {\n                this._initObserver(this.options.observer);\n            }\n\n            $(this.element).slick(options);\n        },\n\n        /**\n         * Slick Slider Position checking via subscriber\n         *\n         * @desc checking and fixing new slick sliders positions\n         * @param {Object} observer - ko observer\n         * @return {void}\n         */\n        _initObserver: function (observer) {\n            var $slider = $(this.element);\n\n            observer.subscribe(function (value) {\n                if (value) {\n                    $slider.slick('setPosition');\n                    $slider.slick('refresh');\n                    $slider.slick('setDimensions');\n                }\n            }.bind(this));\n        }\n    });\n\n    return $.amsearch.ProductSlider;\n});\n","Amasty_Xsearch/js/widgets/analytics-data-collector.js":"define([\n    'jquery',\n    'mage/url',\n    'underscore',\n    'mage/translate',\n    'jquery-ui-modules/widget',\n    'mage/cookies'\n], function ($, urlBuilder, _) {\n    'use strict';\n\n    $.widget('mage.amXsearchAnalyticsDataCollector', {\n        dataCollectorPool: [],\n        dataForSend: [],\n        options: {\n            baseUrl: window.BASE_URL,\n            backendUrl: 'amasty_xsearch/analytics/collect',\n            throttleTime: 500,\n            selectors: {\n                wrapper: '[data-amsearch-wrapper=\"block\"]',\n                input: '[data-amsearch-block=\"input\"]',\n                item: '[data-amsearch-js=\"product-item\"]',\n                popup: '[data-amsearch-js=\"results\"]',\n                searchClick: '[data-amsearch-analytics=\"block\"] .amsearch-link, [data-amsearch-analytics=\"block\"]' +\n                    ' .action.view, [data-amsearch-analytics=\"block\"] .tocart'\n            }\n        },\n\n        /**\n         * @inheritDoc\n         */\n        _create: function () {\n            this.initUrls();\n            this.addListener();\n            this.sendData = _.throttle(this.sendData.bind(this), this.options.throttleTime);\n            this.initDataCollectors();\n        },\n\n\n        addListener: function () {\n            $(document).on('click', this.options.selectors.popup, this.handleClick.bind(this));\n            $(document).on('amXsearchAnalyticsAddDataCollector', function (event, collector) {\n                this.addDataCollector(collector);\n            }.bind(this));\n        },\n\n        initDataCollectors: function () {\n            this.addDataCollector(this.handleSearchClick.bind(this));\n        },\n\n        initUrls: function () {\n            urlBuilder.setBaseUrl(this.options.baseUrl);\n            this.options.backendUrl = urlBuilder.build(this.options.backendUrl);\n        },\n\n        /**\n         * Add telemetry collector function to queue\n         *\n         * @param {function(jQuery): object|false} collector\n         */\n        addDataCollector: function (collector) {\n            if (!(collector instanceof Function)) {\n                throw new Error($.mage.__('The argument must be a function'));\n            }\n\n            this.dataCollectorPool.push(collector);\n        },\n\n        /**\n         * @param {Event} event\n         */\n        handleClick: function (event) {\n            var clickedElement = $(event.target);\n\n            this.dataCollectorPool.forEach(function (dataCollector) {\n                var result = dataCollector(clickedElement);\n\n                if (result !== false) {\n                    this.dataForSend.push(result);\n                }\n            }.bind(this));\n\n            this.sendData();\n        },\n\n        sendData: function () {\n            if (this.dataForSend.length > 0) {\n                $.ajax({\n                    url: this.options.backendUrl,\n                    data: {\n                        form_key: $.mage.cookies.get('form_key'),\n                        telemetry: this.dataForSend\n                    },\n                    method: 'GET',\n                    success: function () {\n                        this.dataForSend = [];\n                    }.bind(this)\n                });\n            }\n        },\n\n        /**\n         *\n         * @param {string} type\n         * @param {object} additionalData\n         */\n        getTelemetryObject: function (type, additionalData) {\n            return Object.assign(\n                { type: type },\n                additionalData\n            );\n        },\n\n        /**\n         * User behavior analysis\n         * In case user go to a page or add a product to the cart, data about engagement will changing\n         *\n         * @param {jQuery} element\n         * @returns {boolean|object}\n         */\n        handleSearchClick: function (element) {\n            var result = false,\n                wrapper = element.closest(this.options.selectors.wrapper),\n                inputValue = wrapper.find(this.options.selectors.input)[0].value,\n                item = element.closest(this.options.selectors.item),\n                isSearched = inputValue.length >= this.options.minChars;\n\n            if (isSearched && item.length || element.closest(this.options.selectors.searchClick).length) {\n                result = this.getTelemetryObject('search_click', {});\n            }\n\n            return result;\n        }\n    });\n\n    return $.mage.amXsearchAnalyticsDataCollector;\n});\n","Amasty_Xsearch/js/widgets/collapsible.js":"/**\n * Amasty Search Collapsible Widget\n */\n\ndefine([\n    'jquery',\n    'amsearch_helpers',\n    'mage/collapsible'\n], function ($, helpers) {\n    $.widget('amsearch.Collapsible', {\n        options: {\n            isMobile: $(window).width() < helpers.constants.mobile_view\n        },\n        selectors: {\n            wrapper: '[data-amcollapse-js=\"wrapper\"]',\n            title: '[data-amcollapse-js=\"title\"]',\n            content: '[data-amcollapse-js=\"content\"]',\n            trigger: '[data-amcollapse-js=\"trigger\"]'\n        },\n\n        /**\n         * @inheritDoc\n         */\n        _create: function () {\n            if (!this.options.isMobile) {\n                return false;\n            }\n\n            $(this.element).collapsible({\n                active: true,\n                openedState: '-opened',\n                closedState: '-closed'\n            });\n        }\n    });\n\n    return $.amsearch.Collapsible;\n});\n","Amasty_Xsearch/js/widgets/handle-product-view.js":"define([\n    'jquery',\n    'mage/url',\n    'mage/cookies',\n    'domReady!'\n], function ($, urlBuilder) {\n    'use strict';\n\n    $.widget('mage.amXsearchCollectProductView', {\n        options: {\n            backendUrl: 'amasty_xsearch/analytics/collect'\n        },\n        selectors: {\n            productId: '.product-add-form [name=\"product\"]'\n        },\n\n        /**\n         * @inheritDoc\n         */\n        _create: function () {\n            var productId = this.getProductId();\n            urlBuilder.setBaseUrl(window.BASE_URL);\n\n            if (!isNaN(productId)) {\n                this.logProductView(productId);\n            }\n        },\n\n        /**\n         * @return {number|NaN}\n         */\n        getProductId: function () {\n            var result = NaN,\n                element = $(this.selectors.productId);\n\n            if (element.length) {\n                result = element.attr('value');\n            }\n\n            return result;\n        },\n\n        /**\n         * @param {number} productId\n         */\n        logProductView: function (productId) {\n            $.ajax({\n                url: urlBuilder.build(this.options.backendUrl),\n                method: 'GET',\n                data: {\n                    form_key: $.mage.cookies.get('form_key'),\n                    telemetry: [{ type: 'product_view', product_id: productId }]\n                }\n            });\n        }\n    });\n\n    return $.mage.amXsearchCollectProductView;\n});\n","Amasty_Xsearch/js/widgets/full-width.js":"/**\n * Amasty Full Width Search Widget\n */\n\ndefine([\n    'jquery',\n    'uiRegistry',\n    'amsearch_helpers'\n], function ($, registry, helpers) {\n    'use strict';\n\n    $.widget('mage.amsearchFullWidth', {\n        components: [\n            'index = amsearch_wrapper'\n        ],\n        classes: {\n            open: '-opened'\n        },\n\n        /**\n         * @inheritDoc\n         */\n        _create: function () {\n            registry.get(this.components, function () {\n                helpers.initComponentsArray(arguments, this);\n\n                this.initObservable();\n            }.bind(this));\n        },\n\n\n        /**\n         * @inheritDoc\n         */\n        initObservable: function () {\n            this.amsearch_wrapper.opened.subscribe(function (value) {\n                if (value) {\n                    this.element.addClass(this.classes.open);\n                } else {\n                    this.element.removeClass(this.classes.open);\n                }\n            }.bind(this));\n        }\n    });\n\n    return $.mage.amsearchFullWidth;\n});\n","Amasty_Xsearch/js/utils/helpers.js":"/**\n * Amasty Search helpers\n */\n\ndefine([\n    'jquery',\n    'ko',\n    'underscore',\n    'Magento_Catalog/js/catalog-add-to-cart',\n    'mage/cookies'\n], function ($, ko, _) {\n    'use strict';\n\n    /**\n     * Update ko subscribe method with silent possibilities\n     *\n     * @param {Object} value\n     * @returns {void}\n     */\n    ko.observable.fn.silentUpdate = function (value) {\n        this.notifySubscribers = function () {};\n        this(value);\n\n        this.notifySubscribers = function () {\n            ko.subscribable.fn.notifySubscribers.apply(this, arguments);\n        };\n    };\n\n    return {\n        viewport: {\n            height: $(window).height(),\n            width: $(window).width(),\n            page_wrapper_height: $('.page-wrapper')[0].getBoundingClientRect().height\n        },\n        constants: {\n            mobile_view: 768\n        },\n        regex: {\n            tags: /(<([^>]+)>)/gi\n        },\n        selectors: {\n            formKeyInput: 'input[name=\"form_key\"]',\n            addToCartForm: '[data-role=\"tocart-form\"]'\n        },\n        formKey: $.mage.cookies.get('form_key'),\n\n        /**\n         * Update Form Key\n         *\n         * @param {Object} node\n         *\n         * @desc Updating inner form key inserting\n         * @return {void}\n         */\n        updateFormKey: function (node) {\n            var self = this,\n                formKeyInput = $(node).find(self.selectors.formKeyInput);\n\n            if (formKeyInput.val() !== self.formKey) {\n                formKeyInput.val(self.formKey);\n            }\n        },\n\n        /**\n         * Initialize add to cart form handler\n         *\n         * @param {Object|Array} node\n         * @return {void}\n         */\n        initProductAddToCart: function (node) {\n            var form = $(node).find(this.selectors.addToCartForm);\n\n            form.catalogAddToCart({});\n        },\n\n        /**\n         * Strip all HTML Tags from target string\n         *\n         * @public\n         * @param {String} string target\n         * @return {Boolean|String}\n         */\n        stripTags: function (string) {\n            if (this.regex.tags.test(string)) {\n                return string.replace(this.regex.tags, '');\n            }\n\n            return false;\n        },\n\n        /**\n         * Components Array initialization and setting in target component\n         *\n         * @public\n         * @param {Array} array target uiClasses\n         * @param {Object} component current uiClass\n         * @return {void}\n         */\n        initComponentsArray: function (array, component) {\n            _.each(array, function (item) {\n                component[item.index] = item;\n            });\n        },\n\n        /**\n         * Applying Bindings in target node element\n         *\n         * @public\n         * @param {Object} element - node element\n         * @param {Object} context - current context\n         * @return {void}\n         */\n        applyBindings: function (element, context) {\n            _.defer(function () {\n                ko.applyBindingsToDescendants(context, element);\n                $(element).trigger('contentUpdated');\n            });\n        },\n\n        /**\n         * Setting result block position via available view port\n         *\n         * @public\n         * @param {Object} node - node element\n         * @return {Boolean | void} - if set\n         */\n        setNodePositionByViewport: _.debounce(function (node) {\n            var rect = _.clone(node.getBoundingClientRect()),\n                nodePosition = $(node).offset(),\n                inViewPort = this._inViewPort(rect);\n\n            node.style.top = '100%';\n            node.style.bottom = 'auto';\n\n            if (this.viewport.page_wrapper_height < nodePosition.top + rect.height) {\n                node.style.top = 'auto';\n                node.style.bottom = '100%';\n            }\n\n            if (!_.isBoolean(inViewPort)) {\n                node.style[inViewPort] = 0;\n            }\n        }),\n\n        /**\n         * Checker if current node in available view port\n         *\n         * @private\n         * @param {Object} rect - cloned current rect parameters of result node\n         * @return {Boolean | String} - true | key of parameter which is not in view port\n         */\n        _inViewPort: function (rect) {\n            var result = true;\n\n            Object.keys(rect).map(function (key) {\n                if (Math.sign(rect[key]) === -1 && !_.includes(['y', 'x'], key)) {\n                    result = key;\n\n                    return key;\n                }\n            });\n\n            return result;\n        }\n    };\n});\n","Amasty_Xsearch/js/utils/links-storage.js":"define([\n    'jquery'\n], function ($) {\n    'use strict';\n\n    /**\n     * Storage for clicked products links inside popup\n     * Used for proper breadcrumbs display\n     */\n    return {\n        /**\n         * @typedef {Object} LinkData\n         * @property {string} hash - Url hash (using btoa)\n         * @property {number} timestamp - Timestamp when the link was clicked\n         */\n\n        options: {\n            validLinkTimeout: 10 * 1000, // 10 seconds\n            storageKey: 'amsearch-product-links',\n            productsUrlSelector: 'a.amsearch-image, a.amsearch-link, a.action.view'\n        },\n\n        /**\n         * @param {Object} popupContainer\n         * @return {void}\n         */\n        bindLinks: function (popupContainer) {\n            $(popupContainer).find(this.options.productsUrlSelector)\n                .each(function (index, link) {\n                    $(link).on('click', this.clickEvent.bind(this));\n                }.bind(this));\n        },\n\n        /**\n         * @param {Object} popupContainer\n         * @return {void}\n         */\n        saveLinks: function (popupContainer) {\n            $(popupContainer).find(this.options.productsUrlSelector)\n                .each(function (index, link) {\n                    this._saveLink(link);\n                }.bind(this));\n        },\n\n        /**\n         * @param {Object} event\n         * @return {void}\n         */\n        clickEvent: function (event) {\n            const href = $(event.delegateTarget).attr('href');\n            if (!href) {\n                return;\n            }\n\n            event.preventDefault();\n            this._saveLink(href);\n            document.location.href = href;\n        },\n\n        /**\n         * @param {string} link\n         * @return {void}\n         */\n        _saveLink: function (link) {\n            let links = this.getLinks();\n            links.push({\n                hash: btoa(link),\n                timestamp: $.now()\n            });\n            this.setLinks(links);\n        },\n\n        /**\n         * @return {boolean}\n         */\n        hasCurrentLink: function () {\n            this.clearOutdated();\n\n            return this.getLinks().some(function (storageLink) {\n                return atob(storageLink.hash) === document.location.href;\n            });\n        },\n\n        /**\n         * @return {[LinkData]}\n         */\n        getLinks: function () {\n            return JSON.parse(localStorage.getItem(this.options.storageKey)) || [];\n        },\n\n        /**\n         * @param {[LinkData]} links\n         */\n        setLinks: function (links) {\n            localStorage.setItem(this.options.storageKey, JSON.stringify(links));\n        },\n\n        /**\n         * Clear storage from links that was clicked later than validLinkTimeout\n         *\n         * @return {void}\n         */\n        clearOutdated: function () {\n            let links = this.getLinks();\n\n            links = links.filter(function (link) {\n                return ($.now() - link.timestamp) <= this.options.validLinkTimeout;\n            }.bind(this));\n\n            this.setLinks(links);\n        }\n    };\n});\n\n","Amasty_Xsearch/js/utils/color.js":"/**\n * Amasty MegaMenu Colors Helper Component\n */\n\ndefine([\n    'jquery',\n    'jquery-ui-modules/effect'\n], function ($) {\n    'use strict';\n\n    return {\n\n        /**\n         * Generate darken color depending on the specified percentage\n         *\n         * @param {String} color - any color format\n         * @param {Number} percent - relative values from 0.1 to 0.9\n         *\n         * @return {String} new color in rgba\n         */\n        getDarken: function (color, percent) {\n            var currentHsla = $.Color(color).hsla();\n\n            currentHsla[2] = currentHsla[2] - percent;\n\n            return $.Color(color).hsla(currentHsla).toRgbaString();\n        },\n\n        /**\n         * Generate lighten color depending on the specified percentage\n         *\n         * @param {String} color - any color format\n         * @param {Number} percent - relative values from 0.1 to 0.9\n         *\n         * @return {String} new color in rgba\n         */\n        getLighten: function (color, percent) {\n            var currentHsla = $.Color(color).hsla();\n\n            currentHsla[2] = currentHsla[2] + percent;\n\n            return $.Color(color).hsla(currentHsla).toRgbaString();\n        }\n    };\n});\n\n","Amasty_Xsearch/js/components/overlay.js":"/**\n * Amasty Xsearch Overlay UI Component\n * amsearch_overlay_section\n */\n\ndefine([\n    'jquery',\n    'ko',\n    'uiComponent'\n], function ($, ko, Component) {\n    'use strict';\n\n    return Component.extend({\n        defaults: {\n            selectors: {\n              body: 'body'\n            },\n            classes: {\n                opened: '-amsearch-overlay-opened'\n            },\n            nodes: {}\n        },\n\n        /**\n         * @inheritDoc\n         */\n        initialize: function () {\n            this._super();\n\n            this.nodes.body = $(this.selectors.body);\n\n            return this;\n        },\n\n        /**\n         * @inheritDoc\n         */\n        initObservable: function () {\n            this._super()\n                .observe({\n                    opened: false\n                });\n\n            return this;\n        },\n\n        /**\n         * Initialize wrapper node\n         *\n         * @public\n         */\n        initNode: function (node) {\n            this.nodes.wrapper = $(node.parentNode);\n        },\n\n        /**\n         * Show wrapper node\n         *\n         * @public\n         */\n        show: function () {\n            this.nodes.body.addClass(this.classes.opened);\n            this.nodes.wrapper.show();\n            this.opened(true);\n        },\n\n        /**\n         * Hide wrapper node\n         *\n         * @public\n         */\n        hide: function () {\n            this.nodes.body.removeClass(this.classes.opened);\n            this.nodes.wrapper.hide();\n            this.opened(false);\n        }\n    });\n});\n","Amasty_Xsearch/js/components/loupe-trigger.js":"/**\n * Amasty Header Loupe Trigger Search Widget\n * for mobile devices and type full width\n */\n\ndefine([\n    'jquery',\n    'ko',\n    'uiComponent',\n    'uiRegistry',\n    'amsearch_helpers'\n], function ($, ko, Component, registry, helpers) {\n    'use strict';\n\n    return Component.extend({\n        defaults: {\n            components: [\n                'index = amsearch_wrapper'\n            ]\n        },\n\n        /**\n         * @inheritDoc\n         */\n        initialize: function () {\n            this._super();\n\n            registry.get(this.components, function () {\n                helpers.initComponentsArray(arguments, this);\n\n            }.bind(this));\n\n            return this;\n        },\n\n        /**\n         * Toggling Search Menu\n         *\n         * @public\n         */\n        toggle: function () {\n            this.amsearch_wrapper.focused(!this.amsearch_wrapper.focused());\n        }\n    });\n});\n","Amasty_Xsearch/js/components/survey.js":"define([\n    'jquery',\n    'underscore',\n    'domReady!'\n], function ($, _) {\n    var params =  new URL(document.location).searchParams;\n    if(!_.isUndefined(params)){\n        var increment_id = params.get(\"id\");\n        if(!_.isUndefined(increment_id)){\n            $('input.num-order').val(increment_id);\n        }\n    }\n});\n","Amasty_Xsearch/js/mixins/multiple-wishlist.js":"/**\n * multiple-wish mixin\n */\n\ndefine([\n    'jquery'\n], function ($) {\n    'use strict';\n\n    var multipleWishlistMixin = {\n        _create: function () {\n            this._super();\n\n            this._initMultipleWishlist();\n            $('body').on('amsearch.popup.contentUpdated', this._initMultipleWishlist.bind(this));\n        },\n\n        /**\n         * Initialize multiple wishlist for products on the page\n         *\n         * @private\n         * @return {void}\n         */\n        _initMultipleWishlist: function () {\n            var wishSelector = this.options.wishlistLink;\n\n            this.options.canCreate = true;\n            this.options.wishlistLink = '.amsearch-button.-wishlist';\n            this._buildWishlistDropdown();\n            this.options.wishlistLink = wishSelector;\n        }\n    };\n\n    return function (targetWidget) {\n        $.widget('mage.multipleWishlist', targetWidget, multipleWishlistMixin);\n\n        return $.mage.multipleWishlist;\n    };\n});\n","Amasty_Xsearch/js/mixins/breadcrumbs.js":"define([\n    'jquery',\n    'amsearchProductLinksStorage'\n], function ($, linksStorage) {\n    'use strict';\n\n    let breadcrumbsMixin = {\n        _resolveCategoryUrl: function () {\n            linksStorage.clearOutdated();\n\n            if (linksStorage.hasCurrentLink()) {\n                let categoryUrl = document.location.href;\n\n                if (categoryUrl.indexOf('?') > 0) {\n                    categoryUrl = categoryUrl.substring(0, categoryUrl.indexOf('?'));\n                }\n\n                return categoryUrl;\n            }\n\n            return this._super();\n        }\n    };\n\n    return function (targetWidget) {\n        $.widget('mage.breadcrumbs', targetWidget, breadcrumbsMixin);\n\n        return $.mage.breadcrumbs;\n    };\n});\n","Amasty_Label/js/label.js":"define([\n    'jquery',\n    'underscore',\n    'Magento_Ui/js/modal/modal'\n], function ($, _) {\n    'use strict';\n\n    $.widget('mage.amShowLabel', {\n        options: {},\n        textElement: null,\n        image: null,\n        imageWidth: null,\n        imageHeight: null,\n        parent: null,\n        imageLabel: ['.amasty-label-container', '.amasty-label-image', '.amlabel-text'],\n        fotoramaStage: '[data-fotorama-stage=\"fotorama__stage\"]',\n        galleryPlaceholder: '[data-gallery-role=\"gallery-placeholder\"]',\n        positionWrapper: 'amlabel-position-wrapper',\n        mainContainer: '[data-gallery-role=\"amasty-main-container\"]',\n        slickSlider: {\n            selectors: {\n                slider: '.slick-slider',\n                slide: '.slick-slide'\n            },\n            classes: {\n                cloned: 'slick-cloned',\n                initialized: 'slick-initialized'\n            }\n        },\n\n        /**\n         * @inheritDoc\n         * @private\n         */\n        _create: function () {\n            var items,\n                priceContainer,\n                newParent,\n                me;\n\n            this.parentResizeListener = new ResizeObserver(function () {\n                this.setLabelStyle();\n                this._refreshSLickSlider();\n            }.bind(this));\n\n            this.element = $(this.element);\n\n            if (this.element.attr('amlabel-js-observed')) {\n                return;\n            }\n\n            this.element.attr('amlabel-js-observed', 1);\n\n            /* code for moving product label */\n            if (this.options.move === 1) {\n                items = this.element.closest('.page-wrapper').find(this.getPriceSelector());\n\n                if (items.length) { // find any element with product 'id'\n                    items = this._filterItems(items);\n\n                    priceContainer = items.first();\n                    newParent = this.getNewParent(priceContainer);\n\n                    // eslint-disable-next-line max-depth\n                    if (newParent && newParent.length) {\n                        priceContainer.attr('label-observered-' + this.options.label, '1');\n                        newParent.append(this.element);\n                    } else {\n                        this.element.hide();\n\n                        return;\n                    }\n                } else {\n                    this.element.hide();\n\n                    return;\n                }\n            }\n\n            this.image = this.element.find('.amasty-label-image');\n            this.textElement = this.element.find('.amlabel-text');\n            this.parent = this.element.parent();\n\n            if (!this.image.length) {\n                this.setStyleIfNotExist(\n                    this.element,\n                    {\n                        'width': '100px',\n                        'height': '50px'\n                    }\n                );\n            }\n\n            if (!this.image.length && this.options.position.includes('center')) {\n                this.textElement.addClass('-am-centered');\n            }\n\n            /* move label to container from settings*/\n            if (this.options.path && this.options.path !== '') {\n                newParent = this.parent.find(this.options.path);\n\n                if (newParent.length) {\n                    this.parent = newParent;\n                    newParent.append(this.element);\n                }\n            }\n\n            /* required for child position absolute */\n            if (!(this.parent.css('position') === 'absolute' || this.parent.css('position') === 'relative')) {\n                this.parent.css('position', 'relative');\n            }\n\n            if (this.parent.prop('tagName') === 'A' && !this.parent.closest('.block.widget').hasClass('list')) {\n                this.parent.css('display', 'block');\n            }\n\n            /* fix issue with hover on product grid */\n            if (!this.element.closest('.sidebar').length) {\n                this.element.closest('.product-item-info').css('zIndex', '996');\n            }\n\n            /* get default image size */\n            if (!this.imageLoaded(this.image)) {\n                me = this;\n\n                this.image.on('load', function () {\n                    me.element.fadeIn();\n                    me.imageWidth = this.naturalWidth;\n                    me.imageHeight = this.naturalHeight;\n                    me.setLabelStyle();\n                });\n            } else {\n                this.element.fadeIn();\n\n                if (this.image[0]) {\n                    this.imageWidth = this.image[0].naturalWidth;\n                    this.imageHeight = this.image[0].naturalHeight;\n                }\n            }\n\n            this.setLabelPosition();\n            this.updateStyles();\n\n            /* observe zoom load event for moving label*/\n            this.productPageZoomEvent();\n            this.createResizeEvent();\n            this.createFotoramaEvent();\n            this.createRedirectEvent();\n            this._refreshSLickSlider();\n        },\n\n        /**\n         * @returns {void}\n         */\n        _refreshSLickSlider: function () {\n            var slider = this.element.closest(this.slickSlider.selectors.slider);\n\n            if (slider.length && slider.hasClass(this.slickSlider.classes.initialized)) {\n                slider.slick('refresh');\n            }\n        },\n\n        /**\n         * Skip labels from slick slider cloned nodes,\n         * Skip labels that already exist in the product container,\n         * Skip labels from bundle packs\n         *\n         * @param {Array} items\n         * @return {Array}\n         */\n        _filterItems: function (items) {\n            return items.filter(function (index, element) {\n                return !$(element).closest(this.slickSlider.selectors.slide).hasClass(this.slickSlider.classes.cloned)\n                    && !$(element).closest('.amrelated-pack-item').length\n                    && !$(element).closest('.product-item-info')\n                        .find('.amasty-label-container-' + this.options.label + '-' + this.options.product + '-cat')\n                        .length;\n            }.bind(this));\n        },\n\n        /**\n         * @return {void}\n         */\n        createRedirectEvent: function () {\n            this.element.on('click', function (e) {\n                this.openLink(e);\n            }.bind(this));\n        },\n\n        /**\n         * @param {event} event\n         * @return {void}\n         */\n        openLink: function (event) {\n            var redirectUrl = this.options['redirect_url'];\n\n            if (redirectUrl && !this.isEmpty(redirectUrl)) {\n                event.preventDefault();\n                window.open(redirectUrl, '_blank');\n            }\n        },\n\n        /**\n         * @return {void}\n         */\n        createResizeEvent: function () {\n            $(window).on('resize', _.debounce(function () {\n                this.reloadParentSize();\n            }.bind(this), 300));\n\n            $(window).on('orientationchange', function () {\n                this.reloadParentSize();\n            }.bind(this));\n        },\n\n        /**\n         * @return {void}\n         */\n        createFotoramaEvent: function () {\n            $(this.galleryPlaceholder).on('fotorama:load', this.updatePositionInFotorama.bind(this));\n        },\n\n        /**\n         * @return {void}\n         */\n        updatePositionInFotorama: function () {\n            var self = this,\n                newParent = this.parent.find(this.options.path),\n                elementToMove = null;\n\n            if (this\n                && this.options.path\n                && this.options.mode === 'prod'\n            ) {\n                if (newParent.length && newParent !== this.parent) {\n                    this.parent.css('position', '');\n                    this.parent = newParent;\n\n                    elementToMove = this.element.parent().hasClass(this.positionWrapper)\n                        ? this.element.parent()\n                        : this.element;\n                    newParent.append(elementToMove);\n                    newParent.css({ 'position': 'relative' });\n\n                    self.setLabelsEventOnFotorama();\n                }\n            }\n        },\n\n        setLabelsEventOnFotorama: function () {\n            var self = this,\n                fotoramaStage = $(this.fotoramaStage),\n                mousedownOnFotoramaStage = $._data(fotoramaStage[0], 'events').mousedown,\n                pointerdownOnFotoramaStage = $._data(fotoramaStage[0], 'events').pointerdown;\n\n            if (!fotoramaStage[0].eventsUpdated) {\n                fotoramaStage.on('mousedown pointerdown', function (e) {\n                    if (e.which === 1 && $(e.target).is(self.imageLabel.join(','))) {\n                        $(this).trigger('focusout');\n                        self.openLink(e);\n                        e.stopImmediatePropagation();\n                    }\n                });\n\n                // eslint-disable-next-line max-depth\n                if (fotoramaStage.length && mousedownOnFotoramaStage) {\n                    mousedownOnFotoramaStage.unshift(mousedownOnFotoramaStage.pop());\n                }\n\n                if (fotoramaStage.length && pointerdownOnFotoramaStage) {\n                    pointerdownOnFotoramaStage.unshift(pointerdownOnFotoramaStage.pop());\n                }\n\n                fotoramaStage[0].eventsUpdated = true;\n            }\n        },\n\n        /**\n         * @param {Object} img\n         * @return {boolean}\n         */\n        imageLoaded: function (img) {\n            return !(!img.complete\n                || typeof img.naturalWidth !== 'undefined' && img.naturalWidth === 0);\n        },\n\n        /**\n         * @return {void}\n         */\n        productPageZoomEvent: function () {\n            var amastyGallery = $(this.mainContainerSelector);\n\n            if (this.options.mode === 'prod') {\n                if (amastyGallery.length) {\n                    this.parent = amastyGallery;\n                    amastyGallery.append(this.element.parent());\n                    amastyGallery.css('position', 'relative');\n                }\n            }\n        },\n\n        /**\n         * @return {void}\n         */\n        updateStyles: function () {\n            this.setLabelStyle();\n            this.setLabelPosition();\n        },\n\n        /**\n         * @param {Object} element\n         * @param {Object} styles\n         * @return {void}\n         */\n        setStyleIfNotExist: function (element, styles) {\n            // eslint-disable-next-line guard-for-in, vars-on-top\n            for (var style in styles) {\n                // eslint-disable-next-line\n                var current = element.attr('style');\n\n                if (!current ||\n                    current.indexOf('; ' + style) === -1 && current.indexOf(';' + style) === -1\n                ) {\n                    // eslint-disable-next-line no-undef\n                    element.css(style, styles[style]);\n                }\n            }\n        },\n\n        /**\n         * @return {void}\n         */\n        setLabelStyle: function () {\n            var parentWidth,\n                tmpWidth,\n                tmpHeight,\n                lineCount,\n                redirectUrl = this.options['redirect_url'],\n                display = this.options.alignment === 1 ? 'inline-block' : 'block';\n\n            /* for text element */\n            this.setStyleIfNotExist(\n                this.textElement,\n                {\n                    'padding': '0 3px',\n                    'position': 'absolute',\n                    'box-sizing': 'border-box',\n                    'white-space': 'nowrap',\n                    'width': '100%'\n                }\n            );\n\n            if (this.image.length) {\n                /* for image */\n                this.image.css({ 'width': '100%' });\n\n                /* get block size depend settings */\n                if (this.options.size > 0) {\n                    parentWidth = Math.round(this.parent.css('width').replace(/[^\\d.]/g, ''));\n\n                    if (!parentWidth) {\n                        this.parentResizeListener.observe(this.parent[0]);\n\n                        return;\n                    }\n\n                    // eslint-disable-next-line max-depth\n                    if (parentWidth) {\n                        this.parentResizeListener.disconnect();\n                        // eslint-disable-next-line no-mixed-operators\n                        this.imageWidth = Math.round(parentWidth * this.options.size / 100);\n                    }\n                } else {\n                    this.imageWidth += 'px';\n                }\n\n                this.setStyleIfNotExist(this.element, { 'width': this.imageWidth });\n                this.imageHeight = this.image.height();\n\n                /* if container doesn't load(height = 0 ) set proportional height */\n                if (!this.imageHeight && this.image[0] && this.image[0].naturalWidth !== 0) {\n                    tmpWidth = this.image[0].naturalWidth;\n                    tmpHeight = this.image[0].naturalHeight;\n\n                    this.imageHeight = Math.round(this.imageWidth * (tmpHeight / tmpWidth));\n                }\n\n                lineCount = this.textElement.html().split('<br>').length;\n                lineCount = lineCount >= 1 ? lineCount : 1;\n                this.textElement.css('lineHeight', Math.round(this.imageHeight / lineCount) + 'px');\n\n                /* for whole block */\n                if (this.imageHeight) {\n                    this.setStyleIfNotExist(this.element, {\n                        'height': this.imageHeight + 'px'\n                    });\n                }\n\n                this._fitLabelText();\n            }\n\n            this.image\n                .attr('width', this.image.width() + 'px')\n                .attr('height', this.image.height() + 'px');\n\n            this.element.parent().css({\n                'line-height': 'normal',\n                'position': 'absolute'\n            });\n\n            // dont reload display for configurable child label. visibility child label processed in reload.js\n            if (!this.element.hasClass('amlabel-swatch')) {\n                this.setStyleIfNotExist(\n                    this.element,\n                    {\n                        'position': 'relative',\n                        'display': display\n                    }\n                );\n            }\n\n            if (redirectUrl && !this.isEmpty(redirectUrl)) {\n                this.element.addClass('-link');\n            }\n\n            this.reloadParentSize();\n        },\n\n        /**\n         * @return {void}\n         */\n        _fitLabelText: function () {\n            if (this.options.size) {\n                var flag = 1;\n\n                this.textElement.css({ 'width': 'auto' });\n                this.textElement.parent().css('display', 'block');\n\n                while (this.textElement.width() > 0.9 * this.textElement.parent().width() && flag++ < 15) {\n                    this.textElement.css({ 'fontSize': 100 - flag * 5 + '%' });\n                }\n\n                this.textElement.parent().css('display', 'none');\n                this.textElement.css({ 'width': '100%' });\n            }\n        },\n\n        /**\n         * @param {*} html\n         * @return {Boolean}\n         */\n        isEmpty: function (html) {\n            return html === null || html.match(/^ *$/) !== null;\n        },\n\n        setPosition: function (position) {\n            this.options.position = position;\n            this.setLabelPosition();\n            this.reloadParentSize();\n        },\n\n        /**\n         * @return {void}\n         */\n        setStyle: function () {\n            this.setLabelStyle();\n        },\n\n        /**\n         * @return {void}\n         */\n        reloadParentSize: function () {\n            var parent = this.element.parent(),\n                height = null,\n                width = 5;\n\n            parent.css({\n                'position': 'relative',\n                'display': 'inline-block',\n                'width': 'auto',\n                'height': 'auto'\n            });\n\n            height = parent.height();\n\n            if (this.options.alignment === 1) {\n                parent.children().each(function (index, element) {\n                    width += $(element).width() + parseInt($(element).css('margin-left'), 10)\n                        + parseInt($(element).css('margin-right'), 10);\n                });\n            } else {\n                width = parent.width();\n            }\n\n            parent.css({\n                'position': 'absolute',\n                'display': 'block',\n                'height': height ? height + 'px' : '',\n                'width': width ? width + 'px' : ''\n            });\n        },\n\n        /**\n         * @return {string}\n         */\n        getWidgetLabelCode: function () {\n            var label = '';\n\n            if (this.element.parents('.widget-product-grid, .widget').length) {\n                label = 'widget';\n            }\n\n            return label;\n        },\n\n        /**\n         * @return {*|void}\n         */\n        setLabelPosition: function () {\n            var parent,\n                labelOrderMatch,\n                className = 'amlabel-position-' + this.options.position\n                    + '-' + this.options.product + '-' + this.options.mode + this.getWidgetLabelCode(),\n                wrapper = this.parent.find('.' + className);\n\n            if (wrapper.length) {\n                labelOrderMatch = false;\n\n                $.each(wrapper.find('.amasty-label-container'), function (index, prevLabel) {\n                    var nextLabel = $(prevLabel).next(),\n                        currentOrder = parseInt(this.options.order, 10),\n                        prevOrder = null,\n                        nextOrder = null;\n\n                    if ($(prevLabel).length && $(prevLabel).data('mageAmShowLabel')) {\n                        prevOrder = parseInt($(prevLabel).data('mageAmShowLabel').options.order, 10);\n                    }\n\n                    if (nextLabel.length && $(nextLabel).data('mageAmShowLabel')) {\n                        nextOrder = parseInt(nextLabel.data('mageAmShowLabel').options.order, 10);\n                    }\n\n                    if (currentOrder >= prevOrder && (!nextOrder || currentOrder <= nextOrder)) {\n                        labelOrderMatch = true;\n\n                        $(prevLabel).after(this.element);\n\n                        return false;\n                    }\n                }.bind(this));\n\n                if (!labelOrderMatch) {\n                    wrapper.prepend(this.element);\n                }\n            } else {\n                parent = this.element.parent();\n                if (parent.hasClass(this.positionWrapper)) {\n                    parent.parent().html(this.element);\n                }\n\n                this.element.wrap('<div class=\"' + className + ' ' + this.positionWrapper + '\"></div>');\n                wrapper = this.element.parent();\n            }\n\n            if (this.options.alignment === 1) {\n                wrapper.children(':not(:first-child)').each(function (index, element) {\n                    this.setStyleIfNotExist(\n                        $(element),\n                        {\n                            'marginLeft': this.options.margin + 'px'\n                        }\n                    );\n                }.bind(this));\n            } else {\n                wrapper.children(':not(:first-child)').each(function (index, element) {\n                    this.setStyleIfNotExist(\n                        $(element),\n                        {\n                            'marginTop': this.options.margin + 'px'\n                        }\n                    );\n                }.bind(this));\n            }\n\n            // clear styles before changing\n            wrapper.css({\n                'top': '',\n                'left': '',\n                'right': '',\n                'bottom': '',\n                'margin-top': '',\n                'margin-bottom': '',\n                'margin-left': '',\n                'margin-right': ''\n            });\n\n            switch (this.options.position) {\n                case 'top-left':\n                    wrapper.css({\n                        'top': 0,\n                        'left': 0\n                    });\n                    break;\n                case 'top-center':\n                    wrapper.css({\n                        'top': 0,\n                        'left': 0,\n                        'right': 0,\n                        'margin-left': 'auto',\n                        'margin-right': 'auto'\n                    });\n                    break;\n                case 'top-right':\n                    wrapper.css({\n                        'top': 0,\n                        'right': 0,\n                        'text-align': 'right'\n                    });\n                    break;\n\n                case 'middle-left':\n                    wrapper.css({\n                        'left': 0,\n                        'top': 0,\n                        'bottom': 0,\n                        'margin-top': 'auto',\n                        'margin-bottom': 'auto'\n                    });\n                    break;\n                case 'middle-center':\n                    wrapper.css({\n                        'top': 0,\n                        'bottom': 0,\n                        'margin-top': 'auto',\n                        'margin-bottom': 'auto',\n                        'left': 0,\n                        'right': 0,\n                        'margin-left': 'auto',\n                        'margin-right': 'auto'\n                    });\n                    break;\n                case 'middle-right':\n                    wrapper.css({\n                        'top': 0,\n                        'bottom': 0,\n                        'margin-top': 'auto',\n                        'margin-bottom': 'auto',\n                        'right': 0,\n                        'text-align': 'right'\n                    });\n                    break;\n\n                case 'bottom-left':\n                    wrapper.css({\n                        'bottom': 0,\n                        'left': 0\n                    });\n                    break;\n                case 'bottom-center':\n                    wrapper.css({\n                        'bottom': 0,\n                        'left': 0,\n                        'right': 0,\n                        'margin-left': 'auto',\n                        'margin-right': 'auto'\n                    });\n                    break;\n                case 'bottom-right':\n                    wrapper.css({\n                        'bottom': 0,\n                        'right': 0,\n                        'text-align': 'right'\n                    });\n                    break;\n            }\n        },\n\n        /**\n         * @param {jQuery} item\n         * @return {jQuery | null}\n         */\n        getNewParent: function (item) {\n            var imageContainer = null,\n                productContainer = item.closest('.item.product');\n\n            if (!productContainer.length) {\n                productContainer = item.closest('.product-item');\n            }\n\n            if (productContainer && productContainer.length) {\n                imageContainer = productContainer.find(this.options.path).first();\n            }\n\n            return imageContainer;\n        },\n\n        /**\n         * @return {string}\n         */\n        getPriceSelector: function () {\n            var notLabelObservered = ':not([label-observered-' + this.options.label + '])';\n\n            return '[data-product-id=\"' + this.options.product + '\"]' + notLabelObservered + ', ' +\n                '[id=\"product-price-' + this.options.product + '\"]' + notLabelObservered + ', ' +\n                '[name=\"product\"][value=\"' + this.options.product + '\"]' + notLabelObservered;\n        }\n    });\n\n    return $.mage.amShowLabel;\n});\n","Amasty_Label/js/initLabel.js":"/**\n * Initialize Module depends on the area\n * @return widget\n */\n\ndefine([\n    'jquery',\n    'Amasty_Label/vendor/tooltipster/js/tooltipster.min',\n    'Amasty_Label/js/label',\n    'matchMedia',\n    'domReady!'\n// eslint-disable-next-line no-unused-vars\n], function ($, tooltipster) {\n    'use strict';\n\n    $.widget('mage.amInitLabel', {\n        options: {\n            mode: null,\n            isAdminArea: null,\n            config: null,\n            productId: null,\n            selector: null\n        },\n        classes: {\n            amSearchSection: 'amsearch-products-section'\n        },\n        tooltipVendorClass: 'tooltip',\n        mediaBreakpoint: 'all and (max-width: 768px)',\n\n        /**\n         * @inheritDoc\n         */\n        _create: function () {\n            var self = this,\n                element = self.element.closest('.product-item, .item');\n\n            // remove label duplication\n            if (this.element.parent().hasClass(this.classes.amSearchSection)\n                && this.element.parent().find(this.options.selector).length > 1) {\n                return;\n            }\n\n            this.renderTooltip();\n\n            // observe only on category pages and without swatches\n            if (self.options.mode === 'prod'\n                || self.options.isAdminArea\n                || self.element.hasClass('amlabel-swatch')\n                || self.isIE()\n            ) {\n                self.execLabel();\n            } else if (self.options.mode === 'cat' && element.length && !self.element.hasClass('amlabel-swatch')) {\n                self._handleIntersect(element);\n            } else {\n                self.execLabel();\n            }\n        },\n\n        /**\n         * Exec Amasty Label widget\n         * @public\n         * @returns {void}\n         */\n        execLabel: function () {\n            this.element.amShowLabel(this.options.config);\n        },\n\n        /**\n         * @public\n         * @returns {Boolean}\n         */\n        isIE: function () {\n            var ua = window.navigator.userAgent;\n\n            return ua.indexOf('MSIE ') > -1 || ua.indexOf('Trident/') > -1;\n        },\n\n        /**\n         * @public\n         * @returns {void}\n         */\n        renderTooltip: function () {\n            var tooltipOptions = this.options.config.tooltip,\n                tooltipContent = decodeURIComponent(tooltipOptions.content);\n\n            if (this._isHiddenOnMobile()) {\n                return;\n            }\n\n            if (+tooltipOptions.status > 1 && tooltipContent && !this._isEmpty(tooltipContent)) {\n                this.element.addClass(this.tooltipVendorClass).tooltipster({\n                    theme: 'tooltipster-shadow',\n                    interactive: true,\n                    content: $('<span>', {\n                        html: tooltipContent\n                    }),\n                    styles: {\n                        backgroundColor: tooltipOptions.backgroundColor,\n                        textColor: tooltipOptions.color\n                    }\n                });\n            }\n        },\n\n        /**\n         * @param {String} html\n         * @private\n         * @returns {Boolean}\n         */\n        _isEmpty: function (html) {\n            return html === null || html.match(/^ *$/) !== null;\n        },\n\n        /**\n         * @private\n         * @returns {Boolean}\n         */\n        _isHiddenOnMobile: function () {\n            return matchMedia(this.mediaBreakpoint).matches && +this.options.config.tooltip.status === 3;\n        },\n\n        /**\n         * Use IntersectionObserver to lazy loading Amasty Label widget\n         *\n         * @param {Object} element\n         * @protected\n         * @returns {function}\n         */\n        _handleIntersect: function (element) {\n            var self = this,\n                observer;\n\n            observer = new IntersectionObserver(function (entries) {\n                if (entries[0].isIntersecting) {\n                    self.execLabel();\n                    observer.disconnect();\n                }\n            });\n\n            observer.observe(element[0]);\n        }\n    });\n\n    return $.mage.amInitLabel;\n});\n","Amasty_Label/js/configurable/configurable.js":"define([\n    'jquery',\n    'underscore',\n    'Amasty_Label/js/configurable/reload',\n    'Magento_Ui/js/modal/modal'\n], function ($, _, reloader) {\n    'use strict';\n\n    return function (widget) {\n        $.widget('mage.configurable', widget, {\n            /**\n             * Trigger label reload\n             *\n             * @return {void}\n             */\n            _processLabelReload: function () {\n                var productId = this.simpleProduct,\n                    imageContainer = null,\n                    originalProductId = this.options.spConfig['original_product_id'];\n\n                if (this.inProductList) {\n                    imageContainer = this.element.closest('li.item').find(this.options.spConfig['label_category']);\n                } else {\n                    imageContainer = this.element.closest('.column.main').find(this.options.spConfig['label_product']);\n                }\n\n                if (!productId) {\n                    productId = this.options.spConfig['original_product_id'];\n                }\n\n                if (typeof this.options.spConfig['label_reload'] != 'undefined') {\n                    reloader.reload(\n                        imageContainer,\n                        productId,\n                        this.options.spConfig['label_reload'],\n                        this.inProductList ? 1 : 0,\n                        originalProductId\n                    );\n                }\n            },\n\n            /**\n             * OVERRIDE\n             *\n             * @inheritDoc\n             */\n            _changeProductImage: function (noLabel) {\n                if (noLabel !== true) {\n                    this._processLabelReload();\n                }\n\n                var images,\n                    initialImages = this.options.mediaGalleryInitial,\n                    gallery = $(this.options.mediaGallerySelector).data('gallery');\n\n                if (_.isUndefined(gallery)) {\n                    $(this.options.mediaGallerySelector).on('gallery:loaded', function () {\n                        this._changeProductImage(true); // skip label reloading to prevent duplicates\n                    }.bind(this));\n\n                    return;\n                }\n\n                images = this.options.spConfig.images[this.simpleProduct];\n\n                if (images) {\n                    images = this._sortImages(images);\n\n                    if (this.options.gallerySwitchStrategy === 'prepend') {\n                        images = images.concat(initialImages);\n                    }\n\n                    images = $.extend(true, [], images);\n                    images = this._setImageIndex(images);\n\n                    gallery.updateData(images);\n                    this._addFotoramaVideoEvents(false);\n                } else {\n                    gallery.updateData(initialImages);\n                    this._addFotoramaVideoEvents(true);\n                }\n            }\n        });\n\n        return $.mage.configurable;\n    };\n});\n","Amasty_Label/js/configurable/swatch-renderer.js":"define([\n    'jquery',\n    'Amasty_Label/js/configurable/reload',\n    'Amasty_Label/js/initLabel'\n], function ($, reloader) {\n    'use strict';\n\n    return function (widget) {\n        $.widget('mage.SwatchRenderer', widget, {\n            _loadMedia: function () {\n                if (!window.isAmSwatchClickTriggered) {\n                    this.loadLabels();\n                } else {\n                    window.isAmSwatchClickTriggered = false;\n                }\n\n                return this._super();\n            },\n\n            _LoadProductMedia: function () {\n                this.loadLabels();\n\n                return this._super();\n            },\n\n            loadLabels: function () {\n                var productIds = this._CalcProducts(),\n                    imageContainer = null;\n\n                if (this.inProductList) {\n                    imageContainer = this.element.closest('li.item')\n                        .find(this.options.jsonConfig['label_category']);\n                } else {\n                    imageContainer = this.element.closest('.column.main')\n                        .find(this.options.jsonConfig['label_product']);\n                }\n\n                if (productIds.length === 0) {\n                    productIds.push(this.options.jsonConfig['original_product_id']);\n                }\n\n                if (typeof this.options.jsonConfig['label_reload'] != 'undefined') {\n                    !this.inProductList ?? imageContainer.find('.amlabel-position-wrapper').remove();\n                    reloader.reload(\n                        imageContainer,\n                        productIds[0],\n                        this.options.jsonConfig['label_reload'],\n                        this.inProductList ? 1 : 0\n                    );\n                }\n            }\n        });\n\n        return $.mage.SwatchRenderer;\n    };\n});\n","Amasty_Label/js/configurable/reload.js":"define([\n    'jquery',\n    'underscore'\n], function ($, _) {\n    'use strict';\n\n    return {\n        cache: new Map(),\n        xhrRequest: null,\n        selectors: {\n            imageContainer: '.product-image-container',\n            postDataElement: '.action[data-post]'\n        },\n\n        /**\n         * @param {String | jQuery} container\n         * @param {object} data\n         *\n         * @private\n         */\n        reloadLabels: function (container, data) {\n            var self = this,\n                postData;\n\n            if (!data.labels) {\n                return;\n            }\n\n            if (typeof container !== 'string') {\n                var label = data.labels instanceof Object ? Object.values(data.labels)[0] : data.labels;\n\n                container.find('.amasty-label-container').remove();\n                label = container.last().after(label);\n                label.trigger('contentUpdated');\n\n                return;\n            }\n\n            $(container).each(function (index, item) {\n                postData = JSON.parse($(item).find(self.selectors.postDataElement).attr('data-post'));\n\n                $(item).find(self.selectors.imageContainer)\n                    .after(data.labels[postData.data.product])\n                    .trigger('contentUpdated');\n            });\n        },\n\n        /**\n         * @param {string} url\n         * @param {object} params\n         * @param {function} callback\n         *\n         * @private\n         */\n        doAjax: function (url, params, callback) {\n            if (this.xhrRequest !== null) {\n                this.xhrRequest.abort();\n            }\n\n            this.xhrRequest = $.ajax({\n                url: url,\n                data: params,\n                method: 'GET',\n                cache: true,\n                dataType: 'json',\n                showLoader: false,\n                success: function (data) {\n                    var cacheKey = this.generateCacheKey(params);\n\n                    this.cache.set(cacheKey, data);\n                    callback(data);\n                }.bind(this)\n            });\n        },\n\n        /**\n         * @param {object} params\n         *\n         * @private\n         */\n        generateCacheKey: function (params) {\n            var processedEntry;\n\n            return Object.entries(params).reduce(function (carry, entry) {\n                processedEntry = typeof entry[1] === 'object' ? entry[1].join('-') : entry[1];\n\n                return carry + '_' + entry[0] + '_' + processedEntry;\n            }, '');\n        },\n\n        /**\n         * @param {String | jQuery} container\n         * @param {number | Array} productId\n         * @param {string} reloadUrl\n         * @param {boolean} inProductList\n         */\n        reload: function (container, productId, reloadUrl, inProductList) {\n            var imageBlock = $(container).find('.amasty-label-for-' + productId),\n                params = {\n                    product_ids: _.isArray(productId) ? productId.join(',') : productId,\n                    in_product_list: inProductList\n                },\n                cacheKey = this.generateCacheKey(params);\n\n            if (this.cache.has(cacheKey)) {\n                this.reloadLabels(container, this.cache.get(cacheKey));\n            } else {\n                this.doAjax(reloadUrl, params, this.reloadLabels.bind(this, container));\n            }\n\n            imageBlock.show();\n        }\n    };\n});\n","Amasty_Label/js/uiWidget/amLoadUiLabel.js":"define([\n    'jquery',\n    'underscore',\n    'Amasty_Label/js/configurable/reload',\n    'mage/url',\n    'Magento_Customer/js/customer-data',\n    'Magento_Catalog/js/product/view/product-ids-resolver',\n    'uiRegistry'\n], function ($, _, reloader, url, customerData, productResolver, registry) {\n    'use strict';\n\n    $.widget('mage.amInitLabelUi', {\n        options: {\n            config: null,\n            productsLifetime: 1000,\n            scope: 'group'\n        },\n        selectors: {\n            widgetWrapper: '[data-bind=\"scope: \\'%1.%2\\'\"]',\n            imageContainer: '.block-viewed-products-grid .product-item-info',\n            addToCartForm: '#product_addtocart_form'\n        },\n        modules: {\n            recentlyViewed: 'ns = widget_recently_viewed'\n        },\n        controller: 'amasty_label/ajax/label',\n\n        /**\n         * Widget constructor.\n         * @protected\n         */\n        _create: function () {\n            this.uiWidget('trigger', true);\n        },\n\n        /**\n         * @public\n         * @return {Object}\n         */\n        uiWidget: function () {\n            return registry.get(this.modules.recentlyViewed, function (component) {\n                this.setLabelHtml(component);\n            }.bind(this));\n        },\n\n        /**\n         * @public\n         * @return {void}\n         */\n        setLabelHtml: function (component) {\n            var self = this,\n                idsData = Object.keys(component.ids()\n                    ? component.ids()\n                    : this.filterIds(JSON.parse(window.localStorage.getItem('recently_viewed_product')))),\n                target = $(this.selectors.widgetWrapper\n                    .replace('%1', component.dataScope)\n                    .replace('%2', component.ns)),\n                isSyncWidgetWithBackend = +component.idsStorage.allowToSendRequest,\n                options = {\n                    childList: true,\n                    subtree: true\n                },\n                observer;\n\n            if (!idsData.length && !isSyncWidgetWithBackend) {\n                return;\n            }\n\n            observer = new MutationObserver(function (mutations) {\n                mutations.forEach(function (mutation) {\n                    if (mutation.type === 'childList'\n                        && mutation.previousSibling\n                        && typeof mutation.previousSibling.dataset !== 'undefined'\n                        && typeof mutation.previousSibling.dataset.post !== 'undefined'\n                    ) {\n                        reloader.reload(\n                            self.selectors.imageContainer,\n                            isSyncWidgetWithBackend ? Object.keys(component.ids()) : idsData,\n                            url.build(self.controller),\n                            true\n                        );\n\n                        observer.disconnect();\n                    }\n                });\n            });\n\n            observer.observe(target[0], options);\n        },\n\n        /**\n         * @param ids\n         * @public\n         * @return {Object}\n         */\n        filterIds: function (ids) {\n            var result = {},\n                lifetime = this.options.productsLifetime,\n                currentTime = new Date().getTime() / 1000,\n                currentProductIds = productResolver($(this.selectors.addToCartForm)),\n                productCurrentScope = this.options.scope,\n                scopeId = productCurrentScope === 'store' ? window.checkout.storeId :\n                    productCurrentScope === 'group' ? window.checkout.storeGroupId :\n                        window.checkout.websiteId;\n\n            _.each(ids, function (id, key) {\n                if (\n                    currentTime - ids[key]['added_at'] < lifetime &&\n                    !_.contains(currentProductIds, ids[key]['product_id']) &&\n                    (!id.hasOwnProperty('scope_id') || ids[key]['scope_id'] === scopeId)\n                ) {\n                    result[id['product_id']] = id;\n                }\n            }, this);\n\n            return result;\n        }\n    });\n\n    return $.mage.amInitLabelUi;\n});\n","Amasty_Label/vendor/tooltipster/js/tooltipster.min.js":"!function(t,i){\"function\"==typeof define&&define.amd?define([\"jquery\"],function(t){return i(t)}):\"object\"==typeof exports?module.exports=i(require(\"jquery\")):i(jQuery)}(0,function(t){var i={animation:\"fade\",animationDuration:350,content:null,contentAsHTML:!1,contentCloning:!1,debug:!0,delay:300,delayTouch:[300,500],functionInit:null,functionBefore:null,functionReady:null,functionAfter:null,functionFormat:null,IEmin:6,interactive:!1,multiple:!1,parent:null,plugins:[\"sideTip\"],repositionOnScroll:!1,restoration:\"none\",selfDestruction:!0,theme:[],timer:0,trackerInterval:500,trackOrigin:!1,trackTooltip:!1,trigger:\"hover\",triggerClose:{click:!1,mouseleave:!1,originClick:!1,scroll:!1,tap:!1,touchleave:!1},triggerOpen:{click:!1,mouseenter:!1,tap:!1,touchstart:!1},updateAnimation:\"rotate\",zIndex:9999999,styles:{backgroundColor:\"\",textColor:\"\"}},o=\"undefined\"!=typeof window?window:null,e={hasTouchCapability:!(!o||!(\"ontouchstart\"in o||o.DocumentTouch&&o.document instanceof o.DocumentTouch||o.navigator.maxTouchPoints)),hasTransitions:function(){if(!o)return!1;var t=(o.document.body||o.document.documentElement).style,i=\"transition\",e=[\"Moz\",\"Webkit\",\"Khtml\",\"O\",\"ms\"];if(\"string\"==typeof t[i])return!0;i=i.charAt(0).toUpperCase()+i.substr(1);for(var n=0;n<e.length;n++)if(\"string\"==typeof t[e[n]+i])return!0;return!1}(),IE:!1,semVer:\"4.2.8\",window:o},n=function(){this.__$emitterPrivate=t({}),this.__$emitterPublic=t({}),this.__instancesLatestArr=[],this.__plugins={},this._env=e};function s(t){this.$container,this.constraints=null,this.__$tooltip,this.__init(t)}function r(i,o){var e=!0;return t.each(i,function(t,n){if(void 0===o[t]||i[t]!==o[t])return e=!1,!1}),e}function _(i){var o=i.attr(\"id\"),n=o?e.window.document.getElementById(o):null;return n?n===i[0]:t.contains(e.window.document.body,i[0])}n.prototype={__bridge:function(o,e,n){if(!e[n]){var s=function(){};s.prototype=o;var r=new s;r.__init&&r.__init(e),t.each(o,function(t,o){0!=t.indexOf(\"__\")&&(e[t]?i.debug&&console.log(\"The \"+t+\" method of the \"+n+\" plugin conflicts with another plugin or native methods\"):(e[t]=function(){return r[t].apply(r,Array.prototype.slice.apply(arguments))},e[t].bridged=r))}),e[n]=r}return this},__setWindow:function(t){return e.window=t,this},_getRuler:function(t){return new s(t)},_off:function(){return this.__$emitterPrivate.off.apply(this.__$emitterPrivate,Array.prototype.slice.apply(arguments)),this},_on:function(){return this.__$emitterPrivate.on.apply(this.__$emitterPrivate,Array.prototype.slice.apply(arguments)),this},_one:function(){return this.__$emitterPrivate.one.apply(this.__$emitterPrivate,Array.prototype.slice.apply(arguments)),this},_plugin:function(i){if(\"string\"==typeof i){var o=i,e=null;return o.indexOf(\".\")>0?e=this.__plugins[o]:t.each(this.__plugins,function(t,i){if(i.name.substring(i.name.length-o.length-1)==\".\"+o)return e=i,!1}),e}if(i.name.indexOf(\".\")<0)throw new Error(\"Plugins must be namespaced\");return this.__plugins[i.name]=i,i.core&&this.__bridge(i.core,this,i.name),this},_trigger:function(){var t=Array.prototype.slice.apply(arguments);return\"string\"==typeof t[0]&&(t[0]={type:t[0]}),this.__$emitterPrivate.trigger.apply(this.__$emitterPrivate,t),this.__$emitterPublic.trigger.apply(this.__$emitterPublic,t),this},instances:function(i){var o=[];return t(i||\".tooltipstered\").each(function(){var i=t(this),e=i.data(\"tooltipster-ns\");e&&t.each(e,function(t,e){o.push(i.data(e))})}),o},instancesLatest:function(){return this.__instancesLatestArr},off:function(){return this.__$emitterPublic.off.apply(this.__$emitterPublic,Array.prototype.slice.apply(arguments)),this},on:function(){return this.__$emitterPublic.on.apply(this.__$emitterPublic,Array.prototype.slice.apply(arguments)),this},one:function(){return this.__$emitterPublic.one.apply(this.__$emitterPublic,Array.prototype.slice.apply(arguments)),this},origins:function(i){return t((i?i+\" \":\"\")+\".tooltipstered\").toArray()},setDefaults:function(o){return t.extend(i,o),this},triggerHandler:function(){return this.__$emitterPublic.triggerHandler.apply(this.__$emitterPublic,Array.prototype.slice.apply(arguments)),this}},t.tooltipster=new n,t.Tooltipster=function(i,o){this.__callbacks={close:[],open:[]},this.__closingTime,this.__Content,this.__contentBcr,this.__destroyed=!1,this.__$emitterPrivate=t({}),this.__$emitterPublic=t({}),this.__enabled=!0,this.__garbageCollector,this.__Geometry,this.__lastPosition,this.__namespace=\"tooltipster-\"+Math.round(1e6*Math.random()),this.__options,this.__$originParents,this.__pointerIsOverOrigin=!1,this.__previousThemes=[],this.__state=\"closed\",this.__timeouts={close:[],open:null},this.__touchEvents=[],this.__tracker=null,this._$origin,this._$tooltip,this.__init(i,o)},t.Tooltipster.prototype={__init:function(o,n){var s=this;if(s._$origin=t(o),s.__options=t.extend(!0,{},i,n),s.__optionsFormat(),!e.IE||e.IE>=s.__options.IEmin){var r=null;if(void 0===s._$origin.data(\"tooltipster-initialTitle\")&&(void 0===(r=s._$origin.attr(\"title\"))&&(r=null),s._$origin.data(\"tooltipster-initialTitle\",r)),null!==s.__options.content)s.__contentSet(s.__options.content);else{var _,a=s._$origin.attr(\"data-tooltip-content\");a&&(_=t(a)),_&&_[0]?s.__contentSet(_.first()):s.__contentSet(r)}s._$origin.removeAttr(\"title\").addClass(\"tooltipstered\"),s.__prepareOrigin(),s.__prepareGC(),t.each(s.__options.plugins,function(t,i){s._plug(i)}),e.hasTouchCapability&&t(e.window.document.body).on(\"touchmove.\"+s.__namespace+\"-triggerOpen\",function(t){s._touchRecordEvent(t)}),s._on(\"created\",function(){s.__prepareTooltip()})._on(\"repositioned\",function(t){s.__lastPosition=t.position})}else s.__options.disabled=!0},__contentInsert:function(){var t=this._$tooltip.find(\".tooltipster-content\"),i=this.__Content;return this._trigger({type:\"format\",content:this.__Content,format:function(t){i=t}}),this.__options.functionFormat&&(i=this.__options.functionFormat.call(this,this,{origin:this._$origin[0]},this.__Content)),\"string\"!=typeof i||this.__options.contentAsHTML?t.empty().append(i):t.text(i),this},__contentSet:function(i){return i instanceof t&&this.__options.contentCloning&&(i=i.clone(!0)),this.__Content=i,this._trigger({type:\"updated\",content:i}),this},__destroyError:function(){throw new Error(\"This tooltip has been destroyed and cannot execute your method call.\")},__geometry:function(){var i=this._$origin,o=this._$origin.is(\"area\");if(o){var n=this._$origin.parent().attr(\"name\");i=t('img[usemap=\"#'+n+'\"]')}var s=i[0].getBoundingClientRect(),r=t(e.window.document),_=t(e.window),a=i,l={available:{document:null,window:null},document:{size:{height:r.height(),width:r.width()}},window:{scroll:{left:e.window.scrollX||e.window.document.documentElement.scrollLeft,top:e.window.scrollY||e.window.document.documentElement.scrollTop},size:{height:_.height(),width:_.width()}},origin:{fixedLineage:!1,offset:{},size:{height:s.bottom-s.top,width:s.right-s.left},usemapImage:o?i[0]:null,windowOffset:{bottom:s.bottom,left:s.left,right:s.right,top:s.top}}};if(o){var p=this._$origin.attr(\"shape\"),c=this._$origin.attr(\"coords\");if(c&&(c=c.split(\",\"),t.map(c,function(t,i){c[i]=parseInt(t)})),\"default\"!=p)switch(p){case\"circle\":var h=c[0],d=c[1],u=c[2],g=d-u,f=h-u;l.origin.size.height=2*u,l.origin.size.width=l.origin.size.height,l.origin.windowOffset.left+=f,l.origin.windowOffset.top+=g;break;case\"rect\":var m=c[0],w=c[1],v=c[2],y=c[3];l.origin.size.height=y-w,l.origin.size.width=v-m,l.origin.windowOffset.left+=m,l.origin.windowOffset.top+=w;break;case\"poly\":for(var b=0,$=0,C=0,O=0,T=\"even\",z=0;z<c.length;z++){var E=c[z];\"even\"==T?(E>C&&(C=E,0===z&&(b=C)),E<b&&(b=E),T=\"odd\"):(E>O&&(O=E,1==z&&($=O)),E<$&&($=E),T=\"even\")}l.origin.size.height=O-$,l.origin.size.width=C-b,l.origin.windowOffset.left+=b,l.origin.windowOffset.top+=$}}for(this._trigger({type:\"geometry\",edit:function(t){l.origin.size.height=t.height,l.origin.windowOffset.left=t.left,l.origin.windowOffset.top=t.top,l.origin.size.width=t.width},geometry:{height:l.origin.size.height,left:l.origin.windowOffset.left,top:l.origin.windowOffset.top,width:l.origin.size.width}}),l.origin.windowOffset.right=l.origin.windowOffset.left+l.origin.size.width,l.origin.windowOffset.bottom=l.origin.windowOffset.top+l.origin.size.height,l.origin.offset.left=l.origin.windowOffset.left+l.window.scroll.left,l.origin.offset.top=l.origin.windowOffset.top+l.window.scroll.top,l.origin.offset.bottom=l.origin.offset.top+l.origin.size.height,l.origin.offset.right=l.origin.offset.left+l.origin.size.width,l.available.document={bottom:{height:l.document.size.height-l.origin.offset.bottom,width:l.document.size.width},left:{height:l.document.size.height,width:l.origin.offset.left},right:{height:l.document.size.height,width:l.document.size.width-l.origin.offset.right},top:{height:l.origin.offset.top,width:l.document.size.width}},l.available.window={bottom:{height:Math.max(l.window.size.height-Math.max(l.origin.windowOffset.bottom,0),0),width:l.window.size.width},left:{height:l.window.size.height,width:Math.max(l.origin.windowOffset.left,0)},right:{height:l.window.size.height,width:Math.max(l.window.size.width-Math.max(l.origin.windowOffset.right,0),0)},top:{height:Math.max(l.origin.windowOffset.top,0),width:l.window.size.width}};\"html\"!=a[0].tagName.toLowerCase();){if(\"fixed\"==a.css(\"position\")){l.origin.fixedLineage=!0;break}a=a.parent()}return l},__optionsFormat:function(){return\"number\"==typeof this.__options.animationDuration&&(this.__options.animationDuration=[this.__options.animationDuration,this.__options.animationDuration]),\"number\"==typeof this.__options.delay&&(this.__options.delay=[this.__options.delay,this.__options.delay]),\"number\"==typeof this.__options.delayTouch&&(this.__options.delayTouch=[this.__options.delayTouch,this.__options.delayTouch]),\"string\"==typeof this.__options.theme&&(this.__options.theme=[this.__options.theme]),null===this.__options.parent?this.__options.parent=t(e.window.document.body):\"string\"==typeof this.__options.parent&&(this.__options.parent=t(this.__options.parent)),\"hover\"==this.__options.trigger?(this.__options.triggerOpen={mouseenter:!0,touchstart:!0},this.__options.triggerClose={mouseleave:!0,originClick:!0,touchleave:!0}):\"click\"==this.__options.trigger&&(this.__options.triggerOpen={click:!0,tap:!0},this.__options.triggerClose={click:!0,tap:!0}),this._trigger(\"options\"),this},__prepareGC:function(){var i=this;return i.__options.selfDestruction?i.__garbageCollector=setInterval(function(){var o=(new Date).getTime();i.__touchEvents=t.grep(i.__touchEvents,function(t,i){return o-t.time>6e4}),_(i._$origin)||i.close(function(){i.destroy()})},2e4):clearInterval(i.__garbageCollector),i},__prepareOrigin:function(){var t=this;if(t._$origin.off(\".\"+t.__namespace+\"-triggerOpen\"),e.hasTouchCapability&&t._$origin.on(\"touchstart.\"+t.__namespace+\"-triggerOpen touchend.\"+t.__namespace+\"-triggerOpen touchcancel.\"+t.__namespace+\"-triggerOpen\",function(i){t._touchRecordEvent(i)}),t.__options.triggerOpen.click||t.__options.triggerOpen.tap&&e.hasTouchCapability){var i=\"\";t.__options.triggerOpen.click&&(i+=\"click.\"+t.__namespace+\"-triggerOpen \"),t.__options.triggerOpen.tap&&e.hasTouchCapability&&(i+=\"touchend.\"+t.__namespace+\"-triggerOpen\"),t._$origin.on(i,function(i){t._touchIsMeaningfulEvent(i)&&t._open(i)})}if(t.__options.triggerOpen.mouseenter||t.__options.triggerOpen.touchstart&&e.hasTouchCapability){i=\"\";t.__options.triggerOpen.mouseenter&&(i+=\"mouseenter.\"+t.__namespace+\"-triggerOpen \"),t.__options.triggerOpen.touchstart&&e.hasTouchCapability&&(i+=\"touchstart.\"+t.__namespace+\"-triggerOpen\"),t._$origin.on(i,function(i){!t._touchIsTouchEvent(i)&&t._touchIsEmulatedEvent(i)||(t.__pointerIsOverOrigin=!0,t._openShortly(i))})}if(t.__options.triggerClose.mouseleave||t.__options.triggerClose.touchleave&&e.hasTouchCapability){i=\"\";t.__options.triggerClose.mouseleave&&(i+=\"mouseleave.\"+t.__namespace+\"-triggerOpen \"),t.__options.triggerClose.touchleave&&e.hasTouchCapability&&(i+=\"touchend.\"+t.__namespace+\"-triggerOpen touchcancel.\"+t.__namespace+\"-triggerOpen\"),t._$origin.on(i,function(i){t._touchIsMeaningfulEvent(i)&&(t.__pointerIsOverOrigin=!1)})}return t},__prepareTooltip:function(){var i=this,o=i.__options.interactive?\"auto\":\"\";return i._$tooltip.attr(\"id\",i.__namespace).css({\"pointer-events\":o,zIndex:i.__options.zIndex}),t.each(i.__previousThemes,function(t,o){i._$tooltip.removeClass(o)}),t.each(i.__options.theme,function(t,o){i._$tooltip.addClass(o)}),i.__previousThemes=t.merge([],i.__options.theme),i},__scrollHandler:function(i){if(this.__options.triggerClose.scroll)this._close(i);else if(_(this._$origin)&&_(this._$tooltip)){var o=null;if(i.target===e.window.document)this.__Geometry.origin.fixedLineage||this.__options.repositionOnScroll&&this.reposition(i);else{o=this.__geometry();var n=!1;if(\"fixed\"!=this._$origin.css(\"position\")&&this.__$originParents.each(function(i,e){var s=t(e),r=s.css(\"overflow-x\"),_=s.css(\"overflow-y\");if(\"visible\"!=r||\"visible\"!=_){var a=e.getBoundingClientRect();if(\"visible\"!=r&&(o.origin.windowOffset.left<a.left||o.origin.windowOffset.right>a.right))return n=!0,!1;if(\"visible\"!=_&&(o.origin.windowOffset.top<a.top||o.origin.windowOffset.bottom>a.bottom))return n=!0,!1}if(\"fixed\"==s.css(\"position\"))return!1}),n)this._$tooltip.css(\"visibility\",\"hidden\");else if(this._$tooltip.css(\"visibility\",\"visible\"),this.__options.repositionOnScroll)this.reposition(i);else{var s=o.origin.offset.left-this.__Geometry.origin.offset.left,r=o.origin.offset.top-this.__Geometry.origin.offset.top;this._$tooltip.css({left:this.__lastPosition.coord.left+s,top:this.__lastPosition.coord.top+r})}}this._trigger({type:\"scroll\",event:i,geo:o})}return this},__stateSet:function(t){return this.__state=t,this._trigger({type:\"state\",state:t}),this},__timeoutsClear:function(){return clearTimeout(this.__timeouts.open),this.__timeouts.open=null,t.each(this.__timeouts.close,function(t,i){clearTimeout(i)}),this.__timeouts.close=[],this},__trackerStart:function(){var t=this,i=t._$tooltip.find(\".tooltipster-content\");return t.__options.trackTooltip&&(t.__contentBcr=i[0].getBoundingClientRect()),t.__tracker=setInterval(function(){if(_(t._$origin)&&_(t._$tooltip)){if(t.__options.trackOrigin){var o=t.__geometry(),e=!1;r(o.origin.size,t.__Geometry.origin.size)&&(t.__Geometry.origin.fixedLineage?r(o.origin.windowOffset,t.__Geometry.origin.windowOffset)&&(e=!0):r(o.origin.offset,t.__Geometry.origin.offset)&&(e=!0)),e||(t.__options.triggerClose.mouseleave?t._close():t.reposition())}if(t.__options.trackTooltip){var n=i[0].getBoundingClientRect();n.height===t.__contentBcr.height&&n.width===t.__contentBcr.width||(t.reposition(),t.__contentBcr=n)}}else t._close()},t.__options.trackerInterval),t},_close:function(i,o,n){var s=this,r=!0;if(s._trigger({type:\"close\",event:i,stop:function(){r=!1}}),r||n){o&&s.__callbacks.close.push(o),s.__callbacks.open=[],s.__timeoutsClear();var _=function(){t.each(s.__callbacks.close,function(t,o){o.call(s,s,{event:i,origin:s._$origin[0]})}),s.__callbacks.close=[]};if(\"closed\"!=s.__state){var a=!0,l=(new Date).getTime()+s.__options.animationDuration[1];if(\"disappearing\"==s.__state&&l>s.__closingTime&&s.__options.animationDuration[1]>0&&(a=!1),a){s.__closingTime=l,\"disappearing\"!=s.__state&&s.__stateSet(\"disappearing\");var p=function(){clearInterval(s.__tracker),s._trigger({type:\"closing\",event:i}),s._$tooltip.off(\".\"+s.__namespace+\"-triggerClose\").removeClass(\"tooltipster-dying\"),t(e.window).off(\".\"+s.__namespace+\"-triggerClose\"),s.__$originParents.each(function(i,o){t(o).off(\"scroll.\"+s.__namespace+\"-triggerClose\")}),s.__$originParents=null,t(e.window.document.body).off(\".\"+s.__namespace+\"-triggerClose\"),s._$origin.off(\".\"+s.__namespace+\"-triggerClose\"),s._off(\"dismissable\"),s.__stateSet(\"closed\"),s._trigger({type:\"after\",event:i}),s.__options.functionAfter&&s.__options.functionAfter.call(s,s,{event:i,origin:s._$origin[0]}),_()};e.hasTransitions?(s._$tooltip.css({\"-moz-animation-duration\":s.__options.animationDuration[1]+\"ms\",\"-ms-animation-duration\":s.__options.animationDuration[1]+\"ms\",\"-o-animation-duration\":s.__options.animationDuration[1]+\"ms\",\"-webkit-animation-duration\":s.__options.animationDuration[1]+\"ms\",\"animation-duration\":s.__options.animationDuration[1]+\"ms\",\"transition-duration\":s.__options.animationDuration[1]+\"ms\"}),s._$tooltip.clearQueue().removeClass(\"tooltipster-show\").addClass(\"tooltipster-dying\"),s.__options.animationDuration[1]>0&&s._$tooltip.delay(s.__options.animationDuration[1]),s._$tooltip.queue(p)):s._$tooltip.stop().fadeOut(s.__options.animationDuration[1],p)}}else _()}return s},_off:function(){return this.__$emitterPrivate.off.apply(this.__$emitterPrivate,Array.prototype.slice.apply(arguments)),this},_on:function(){return this.__$emitterPrivate.on.apply(this.__$emitterPrivate,Array.prototype.slice.apply(arguments)),this},_one:function(){return this.__$emitterPrivate.one.apply(this.__$emitterPrivate,Array.prototype.slice.apply(arguments)),this},_open:function(i,o){var n=this;if(!n.__destroying&&_(n._$origin)&&n.__enabled){var s=!0;if(\"closed\"==n.__state&&(n._trigger({type:\"before\",event:i,stop:function(){s=!1}}),s&&n.__options.functionBefore&&(s=n.__options.functionBefore.call(n,n,{event:i,origin:n._$origin[0]}))),!1!==s&&null!==n.__Content){o&&n.__callbacks.open.push(o),n.__callbacks.close=[],n.__timeoutsClear();var r,a=function(){\"stable\"!=n.__state&&n.__stateSet(\"stable\"),t.each(n.__callbacks.open,function(t,i){i.call(n,n,{origin:n._$origin[0],tooltip:n._$tooltip[0]})}),n.__callbacks.open=[]};if(\"closed\"!==n.__state)r=0,\"disappearing\"===n.__state?(n.__stateSet(\"appearing\"),e.hasTransitions?(n._$tooltip.clearQueue().removeClass(\"tooltipster-dying\").addClass(\"tooltipster-show\"),n.__options.animationDuration[0]>0&&n._$tooltip.delay(n.__options.animationDuration[0]),n._$tooltip.queue(a)):n._$tooltip.stop().fadeIn(a)):\"stable\"==n.__state&&a();else{if(n.__stateSet(\"appearing\"),r=n.__options.animationDuration[0],n.__contentInsert(),n.reposition(i,!0),e.hasTransitions?(n._$tooltip.addClass(\"tooltipster-\"+n.__options.animation).addClass(\"tooltipster-initial\").css({\"-moz-animation-duration\":n.__options.animationDuration[0]+\"ms\",\"-ms-animation-duration\":n.__options.animationDuration[0]+\"ms\",\"-o-animation-duration\":n.__options.animationDuration[0]+\"ms\",\"-webkit-animation-duration\":n.__options.animationDuration[0]+\"ms\",\"animation-duration\":n.__options.animationDuration[0]+\"ms\",\"transition-duration\":n.__options.animationDuration[0]+\"ms\"}),setTimeout(function(){\"closed\"!=n.__state&&(n._$tooltip.addClass(\"tooltipster-show\").removeClass(\"tooltipster-initial\"),n.__options.animationDuration[0]>0&&n._$tooltip.delay(n.__options.animationDuration[0]),n._$tooltip.queue(a))},0)):n._$tooltip.css(\"display\",\"none\").fadeIn(n.__options.animationDuration[0],a),n.__trackerStart(),t(e.window).on(\"resize.\"+n.__namespace+\"-triggerClose\",function(i){var o=t(document.activeElement);(o.is(\"input\")||o.is(\"textarea\"))&&t.contains(n._$tooltip[0],o[0])||n.reposition(i)}).on(\"scroll.\"+n.__namespace+\"-triggerClose\",function(t){n.__scrollHandler(t)}),n.__$originParents=n._$origin.parents(),n.__$originParents.each(function(i,o){t(o).on(\"scroll.\"+n.__namespace+\"-triggerClose\",function(t){n.__scrollHandler(t)})}),n.__options.triggerClose.mouseleave||n.__options.triggerClose.touchleave&&e.hasTouchCapability){n._on(\"dismissable\",function(t){t.dismissable?t.delay?(h=setTimeout(function(){n._close(t.event)},t.delay),n.__timeouts.close.push(h)):n._close(t):clearTimeout(h)});var l=n._$origin,p=\"\",c=\"\",h=null;n.__options.interactive&&(l=l.add(n._$tooltip)),n.__options.triggerClose.mouseleave&&(p+=\"mouseenter.\"+n.__namespace+\"-triggerClose \",c+=\"mouseleave.\"+n.__namespace+\"-triggerClose \"),n.__options.triggerClose.touchleave&&e.hasTouchCapability&&(p+=\"touchstart.\"+n.__namespace+\"-triggerClose\",c+=\"touchend.\"+n.__namespace+\"-triggerClose touchcancel.\"+n.__namespace+\"-triggerClose\"),l.on(c,function(t){if(n._touchIsTouchEvent(t)||!n._touchIsEmulatedEvent(t)){var i=\"mouseleave\"==t.type?n.__options.delay:n.__options.delayTouch;n._trigger({delay:i[1],dismissable:!0,event:t,type:\"dismissable\"})}}).on(p,function(t){!n._touchIsTouchEvent(t)&&n._touchIsEmulatedEvent(t)||n._trigger({dismissable:!1,event:t,type:\"dismissable\"})})}n.__options.triggerClose.originClick&&n._$origin.on(\"click.\"+n.__namespace+\"-triggerClose\",function(t){n._touchIsTouchEvent(t)||n._touchIsEmulatedEvent(t)||n._close(t)}),(n.__options.triggerClose.click||n.__options.triggerClose.tap&&e.hasTouchCapability)&&setTimeout(function(){if(\"closed\"!=n.__state){var i=\"\",o=t(e.window.document.body);n.__options.triggerClose.click&&(i+=\"click.\"+n.__namespace+\"-triggerClose \"),n.__options.triggerClose.tap&&e.hasTouchCapability&&(i+=\"touchend.\"+n.__namespace+\"-triggerClose\"),o.on(i,function(i){n._touchIsMeaningfulEvent(i)&&(n._touchRecordEvent(i),n.__options.interactive&&t.contains(n._$tooltip[0],i.target)||n._close(i))}),n.__options.triggerClose.tap&&e.hasTouchCapability&&o.on(\"touchstart.\"+n.__namespace+\"-triggerClose\",function(t){n._touchRecordEvent(t)})}},0),n._trigger(\"ready\"),n.__options.functionReady&&n.__options.functionReady.call(n,n,{origin:n._$origin[0],tooltip:n._$tooltip[0]})}if(n.__options.timer>0){h=setTimeout(function(){n._close()},n.__options.timer+r);n.__timeouts.close.push(h)}}}return n},_openShortly:function(t){var i=this,o=!0;if(\"stable\"!=i.__state&&\"appearing\"!=i.__state&&!i.__timeouts.open&&(i._trigger({type:\"start\",event:t,stop:function(){o=!1}}),o)){var e=0==t.type.indexOf(\"touch\")?i.__options.delayTouch:i.__options.delay;e[0]?i.__timeouts.open=setTimeout(function(){i.__timeouts.open=null,i.__pointerIsOverOrigin&&i._touchIsMeaningfulEvent(t)?(i._trigger(\"startend\"),i._open(t)):i._trigger(\"startcancel\")},e[0]):(i._trigger(\"startend\"),i._open(t))}return i},_optionsExtract:function(i,o){var e=this,n=t.extend(!0,{},o),s=e.__options[i];return s||(s={},t.each(o,function(t,i){var o=e.__options[t];void 0!==o&&(s[t]=o)})),t.each(n,function(i,o){void 0!==s[i]&&(\"object\"!=typeof o||o instanceof Array||null==o||\"object\"!=typeof s[i]||s[i]instanceof Array||null==s[i]?n[i]=s[i]:t.extend(n[i],s[i]))}),n},_plug:function(i){var o=t.tooltipster._plugin(i);if(!o)throw new Error('The \"'+i+'\" plugin is not defined');return o.instance&&t.tooltipster.__bridge(o.instance,this,o.name),this},_touchIsEmulatedEvent:function(t){for(var i=!1,o=(new Date).getTime(),e=this.__touchEvents.length-1;e>=0;e--){var n=this.__touchEvents[e];if(!(o-n.time<500))break;n.target===t.target&&(i=!0)}return i},_touchIsMeaningfulEvent:function(t){return this._touchIsTouchEvent(t)&&!this._touchSwiped(t.target)||!this._touchIsTouchEvent(t)&&!this._touchIsEmulatedEvent(t)},_touchIsTouchEvent:function(t){return 0==t.type.indexOf(\"touch\")},_touchRecordEvent:function(t){return this._touchIsTouchEvent(t)&&(t.time=(new Date).getTime(),this.__touchEvents.push(t)),this},_touchSwiped:function(t){for(var i=!1,o=this.__touchEvents.length-1;o>=0;o--){var e=this.__touchEvents[o];if(\"touchmove\"==e.type){i=!0;break}if(\"touchstart\"==e.type&&t===e.target)break}return i},_trigger:function(){var i=Array.prototype.slice.apply(arguments);return\"string\"==typeof i[0]&&(i[0]={type:i[0]}),i[0].instance=this,i[0].origin=this._$origin?this._$origin[0]:null,i[0].tooltip=this._$tooltip?this._$tooltip[0]:null,this.__$emitterPrivate.trigger.apply(this.__$emitterPrivate,i),t.tooltipster._trigger.apply(t.tooltipster,i),this.__$emitterPublic.trigger.apply(this.__$emitterPublic,i),this},_unplug:function(i){var o=this;if(o[i]){var e=t.tooltipster._plugin(i);e.instance&&t.each(e.instance,function(t,e){o[t]&&o[t].bridged===o[i]&&delete o[t]}),o[i].__destroy&&o[i].__destroy(),delete o[i]}return o},close:function(t){return this.__destroyed?this.__destroyError():this._close(null,t),this},content:function(t){var i=this;if(void 0===t)return i.__Content;if(i.__destroyed)i.__destroyError();else if(i.__contentSet(t),null!==i.__Content){if(\"closed\"!==i.__state&&(i.__contentInsert(),i.reposition(),i.__options.updateAnimation))if(e.hasTransitions){var o=i.__options.updateAnimation;i._$tooltip.addClass(\"tooltipster-update-\"+o),setTimeout(function(){\"closed\"!=i.__state&&i._$tooltip.removeClass(\"tooltipster-update-\"+o)},1e3)}else i._$tooltip.fadeTo(200,.5,function(){\"closed\"!=i.__state&&i._$tooltip.fadeTo(200,1)})}else i._close();return i},destroy:function(){var i=this;if(i.__destroyed)i.__destroyError();else{\"closed\"!=i.__state?i.option(\"animationDuration\",0)._close(null,null,!0):i.__timeoutsClear(),i._trigger(\"destroy\"),i.__destroyed=!0,i._$origin.removeData(i.__namespace).off(\".\"+i.__namespace+\"-triggerOpen\"),t(e.window.document.body).off(\".\"+i.__namespace+\"-triggerOpen\");var o=i._$origin.data(\"tooltipster-ns\");if(o)if(1===o.length){var n=null;\"previous\"==i.__options.restoration?n=i._$origin.data(\"tooltipster-initialTitle\"):\"current\"==i.__options.restoration&&(n=\"string\"==typeof i.__Content?i.__Content:t(\"<div></div>\").append(i.__Content).html()),n&&i._$origin.attr(\"title\",n),i._$origin.removeClass(\"tooltipstered\"),i._$origin.removeData(\"tooltipster-ns\").removeData(\"tooltipster-initialTitle\")}else o=t.grep(o,function(t,o){return t!==i.__namespace}),i._$origin.data(\"tooltipster-ns\",o);i._trigger(\"destroyed\"),i._off(),i.off(),i.__Content=null,i.__$emitterPrivate=null,i.__$emitterPublic=null,i.__options.parent=null,i._$origin=null,i._$tooltip=null,t.tooltipster.__instancesLatestArr=t.grep(t.tooltipster.__instancesLatestArr,function(t,o){return i!==t}),clearInterval(i.__garbageCollector)}return i},disable:function(){return this.__destroyed?(this.__destroyError(),this):(this._close(),this.__enabled=!1,this)},elementOrigin:function(){if(!this.__destroyed)return this._$origin[0];this.__destroyError()},elementTooltip:function(){return this._$tooltip?this._$tooltip[0]:null},enable:function(){return this.__enabled=!0,this},hide:function(t){return this.close(t)},instance:function(){return this},off:function(){return this.__destroyed||this.__$emitterPublic.off.apply(this.__$emitterPublic,Array.prototype.slice.apply(arguments)),this},on:function(){return this.__destroyed?this.__destroyError():this.__$emitterPublic.on.apply(this.__$emitterPublic,Array.prototype.slice.apply(arguments)),this},one:function(){return this.__destroyed?this.__destroyError():this.__$emitterPublic.one.apply(this.__$emitterPublic,Array.prototype.slice.apply(arguments)),this},open:function(t){return this.__destroyed?this.__destroyError():this._open(null,t),this},option:function(i,o){return void 0===o?this.__options[i]:(this.__destroyed?this.__destroyError():(this.__options[i]=o,this.__optionsFormat(),t.inArray(i,[\"trigger\",\"triggerClose\",\"triggerOpen\"])>=0&&this.__prepareOrigin(),\"selfDestruction\"===i&&this.__prepareGC()),this)},reposition:function(t,i){return this.__destroyed?this.__destroyError():\"closed\"!=this.__state&&_(this._$origin)&&(i||_(this._$tooltip))&&(i||this._$tooltip.detach(),this.__Geometry=this.__geometry(),this._trigger({type:\"reposition\",event:t,helper:{geo:this.__Geometry}})),this},show:function(t){return this.open(t)},status:function(){return{destroyed:this.__destroyed,enabled:this.__enabled,open:\"closed\"!==this.__state,state:this.__state}},triggerHandler:function(){return this.__destroyed?this.__destroyError():this.__$emitterPublic.triggerHandler.apply(this.__$emitterPublic,Array.prototype.slice.apply(arguments)),this}},t.fn.tooltipster=function(){var o=Array.prototype.slice.apply(arguments),e=\"You are using a single HTML element as content for several tooltips. You probably want to set the contentCloning option to TRUE.\";if(0===this.length)return this;if(\"string\"==typeof o[0]){var n=\"#*$~&\";return this.each(function(){var i=t(this).data(\"tooltipster-ns\"),s=i?t(this).data(i[0]):null;if(!s)throw new Error(\"You called Tooltipster's \\\"\"+o[0]+'\" method on an uninitialized element');if(\"function\"!=typeof s[o[0]])throw new Error('Unknown method \"'+o[0]+'\"');this.length>1&&\"content\"==o[0]&&(o[1]instanceof t||\"object\"==typeof o[1]&&null!=o[1]&&o[1].tagName)&&!s.__options.contentCloning&&s.__options.debug&&console.log(e);var r=s[o[0]](o[1],o[2]);if(r!==s||\"instance\"===o[0])return n=r,!1}),\"#*$~&\"!==n?n:this}t.tooltipster.__instancesLatestArr=[];var s=o[0]&&void 0!==o[0].multiple,r=s&&o[0].multiple||!s&&i.multiple,_=o[0]&&void 0!==o[0].content,a=_&&o[0].content||!_&&i.content,l=o[0]&&void 0!==o[0].contentCloning,p=l&&o[0].contentCloning||!l&&i.contentCloning,c=o[0]&&void 0!==o[0].debug,h=c&&o[0].debug||!c&&i.debug;return this.length>1&&(a instanceof t||\"object\"==typeof a&&null!=a&&a.tagName)&&!p&&h&&console.log(e),this.each(function(){var i=!1,e=t(this),n=e.data(\"tooltipster-ns\"),s=null;n?r?i=!0:h&&(console.log(\"Tooltipster: one or more tooltips are already attached to the element below. Ignoring.\"),console.log(this)):i=!0,i&&(s=new t.Tooltipster(this,o[0]),n||(n=[]),n.push(s.__namespace),e.data(\"tooltipster-ns\",n),e.data(s.__namespace,s),s.__options.functionInit&&s.__options.functionInit.call(s,s,{origin:this}),s._trigger(\"init\")),t.tooltipster.__instancesLatestArr.push(s)}),this},s.prototype={__init:function(i){this.__$tooltip=i,this.__$tooltip.css({left:0,overflow:\"hidden\",position:\"absolute\",top:0}).find(\".tooltipster-content\").css(\"overflow\",\"auto\"),this.$container=t('<div class=\"tooltipster-ruler\"></div>').append(this.__$tooltip).appendTo(e.window.document.body)},__forceRedraw:function(){var t=this.__$tooltip.parent();this.__$tooltip.detach(),this.__$tooltip.appendTo(t)},constrain:function(t,i){return this.constraints={width:t,height:i},this.__$tooltip.css({display:\"block\",height:\"\",overflow:\"auto\",width:t}),this},destroy:function(){this.__$tooltip.detach().find(\".tooltipster-content\").css({display:\"\",overflow:\"\"}),this.$container.remove()},free:function(){return this.constraints=null,this.__$tooltip.css({display:\"\",height:\"\",overflow:\"visible\",width:\"\"}),this},measure:function(){this.__forceRedraw();var t=this.__$tooltip[0].getBoundingClientRect(),i={size:{height:t.height||t.bottom-t.top,width:t.width||t.right-t.left}};if(this.constraints){var o=this.__$tooltip.find(\".tooltipster-content\"),n=this.__$tooltip.outerHeight(),s=o[0].getBoundingClientRect(),r={height:n<=this.constraints.height,width:t.width<=this.constraints.width&&s.width>=o[0].scrollWidth-1};i.fits=r.height&&r.width}return e.IE&&e.IE<=11&&i.size.width!==e.window.document.documentElement.clientWidth&&(i.size.width=Math.ceil(i.size.width)+1),i}};var a=navigator.userAgent.toLowerCase();-1!=a.indexOf(\"msie\")?e.IE=parseInt(a.split(\"msie\")[1]):-1!==a.toLowerCase().indexOf(\"trident\")&&-1!==a.indexOf(\" rv:11\")?e.IE=11:-1!=a.toLowerCase().indexOf(\"edge/\")&&(e.IE=parseInt(a.toLowerCase().split(\"edge/\")[1]));return t.tooltipster._plugin({name:\"tooltipster.sideTip\",instance:{__defaults:function(){return{arrow:!0,distance:6,functionPosition:null,maxWidth:null,minIntersection:16,minWidth:0,position:null,side:\"top\",viewportAware:!0,defaultStyles:{backgroundColor:\"#fff\",textColor:\"#000\"}}},__init:function(t){var i=this;i.__instance=t,i.__namespace=\"tooltipster-sideTip-\"+Math.round(1e6*Math.random()),i.__previousState=\"closed\",i.__options,i.__optionsFormat(),i.__instance._on(\"state.\"+i.__namespace,function(t){\"closed\"==t.state?i.__close():\"appearing\"==t.state&&\"closed\"==i.__previousState&&i.__create(),i.__previousState=t.state}),i.__instance._on(\"options.\"+i.__namespace,function(){i.__optionsFormat()}),i.__instance._on(\"reposition.\"+i.__namespace,function(t){i.__reposition(t.event,t.helper)})},__close:function(){this.__instance.content()instanceof t&&this.__instance.content().detach(),this.__instance._$tooltip.remove(),this.__instance._$tooltip=null},__create:function(){var i=this.__instance.__options.styles,o=t('<div class=\"tooltipster-base tooltipster-sidetip\"><div class=\"tooltipster-box\"><div class=\"tooltipster-content\"></div></div><div class=\"tooltipster-arrow\"><div class=\"tooltipster-arrow-uncropped\"><div class=\"tooltipster-arrow-border\"></div><div class=\"tooltipster-arrow-background\"></div></div></div></div>');o.find(\".tooltipster-box\").css({color:i.textColor?i.textColor:this.__options.defaultStyles.textColor,backgroundColor:i.backgroundColor?i.backgroundColor:this.__options.defaultStyles.backgroundColor}),o.find(\".tooltipster-arrow-border\").css({backgroundColor:i.backgroundColor?i.backgroundColor:this.__options.defaultStyles.backgroundColor}),this.__options.arrow||o.find(\".tooltipster-box\").css(\"margin\",0).end().find(\".tooltipster-arrow\").hide(),this.__options.minWidth&&o.css(\"min-width\",this.__options.minWidth+\"px\"),this.__options.maxWidth&&o.css(\"max-width\",this.__options.maxWidth+\"px\"),this.__instance._$tooltip=o,this.__instance._trigger(\"created\")},__destroy:function(){this.__instance._off(\".\"+self.__namespace)},__optionsFormat:function(){if(this.__options=this.__instance._optionsExtract(\"tooltipster.sideTip\",this.__defaults()),this.__options.position&&(this.__options.side=this.__options.position),\"object\"!=typeof this.__options.distance&&(this.__options.distance=[this.__options.distance]),this.__options.distance.length<4&&(void 0===this.__options.distance[1]&&(this.__options.distance[1]=this.__options.distance[0]),void 0===this.__options.distance[2]&&(this.__options.distance[2]=this.__options.distance[0]),void 0===this.__options.distance[3]&&(this.__options.distance[3]=this.__options.distance[1])),this.__options.distance={top:this.__options.distance[0],right:this.__options.distance[1],bottom:this.__options.distance[2],left:this.__options.distance[3]},\"string\"==typeof this.__options.side){this.__options.side=[this.__options.side,{top:\"bottom\",right:\"left\",bottom:\"top\",left:\"right\"}[this.__options.side]],\"left\"==this.__options.side[0]||\"right\"==this.__options.side[0]?this.__options.side.push(\"top\",\"bottom\"):this.__options.side.push(\"right\",\"left\")}6===t.tooltipster._env.IE&&!0!==this.__options.arrow&&(this.__options.arrow=!1)},__reposition:function(i,o){var e,n=this,s=n.__targetFind(o),r=[];n.__instance._$tooltip.detach();var _=n.__instance._$tooltip.clone(),a=t.tooltipster._getRuler(_),l=!1,p=n.__instance.option(\"animation\");switch(p&&_.removeClass(\"tooltipster-\"+p),t.each([\"window\",\"document\"],function(e,p){var c=null;if(n.__instance._trigger({container:p,helper:o,satisfied:l,takeTest:function(t){c=t},results:r,type:\"positionTest\"}),1==c||0!=c&&0==l&&(\"window\"!=p||n.__options.viewportAware))for(e=0;e<n.__options.side.length;e++){var h={horizontal:0,vertical:0},d=n.__options.side[e];\"top\"==d||\"bottom\"==d?h.vertical=n.__options.distance[d]:h.horizontal=n.__options.distance[d],n.__sideChange(_,d),t.each([\"natural\",\"constrained\"],function(t,e){if(c=null,n.__instance._trigger({container:p,event:i,helper:o,mode:e,results:r,satisfied:l,side:d,takeTest:function(t){c=t},type:\"positionTest\"}),1==c||0!=c&&0==l){var _={container:p,distance:h,fits:null,mode:e,outerSize:null,side:d,size:null,target:s[d],whole:null},u=(\"natural\"==e?a.free():a.constrain(o.geo.available[p][d].width-h.horizontal,o.geo.available[p][d].height-h.vertical)).measure();if(_.size=u.size,_.outerSize={height:u.size.height+h.vertical,width:u.size.width+h.horizontal},\"natural\"==e?o.geo.available[p][d].width>=_.outerSize.width&&o.geo.available[p][d].height>=_.outerSize.height?_.fits=!0:_.fits=!1:_.fits=u.fits,\"window\"==p&&(_.fits?_.whole=\"top\"==d||\"bottom\"==d?o.geo.origin.windowOffset.right>=n.__options.minIntersection&&o.geo.window.size.width-o.geo.origin.windowOffset.left>=n.__options.minIntersection:o.geo.origin.windowOffset.bottom>=n.__options.minIntersection&&o.geo.window.size.height-o.geo.origin.windowOffset.top>=n.__options.minIntersection:_.whole=!1),r.push(_),_.whole)l=!0;else if(\"natural\"==_.mode&&(_.fits||_.size.width<=o.geo.available[p][d].width))return!1}})}}),n.__instance._trigger({edit:function(t){r=t},event:i,helper:o,results:r,type:\"positionTested\"}),r.sort(function(t,i){return t.whole&&!i.whole?-1:!t.whole&&i.whole?1:t.whole&&i.whole?(o=n.__options.side.indexOf(t.side))<(e=n.__options.side.indexOf(i.side))?-1:o>e?1:\"natural\"==t.mode?-1:1:t.fits&&!i.fits?-1:!t.fits&&i.fits?1:t.fits&&i.fits?(o=n.__options.side.indexOf(t.side))<(e=n.__options.side.indexOf(i.side))?-1:o>e?1:\"natural\"==t.mode?-1:1:\"document\"==t.container&&\"bottom\"==t.side&&\"natural\"==t.mode?-1:1;var o,e}),(e=r[0]).coord={},e.side){case\"left\":case\"right\":e.coord.top=Math.floor(e.target-e.size.height/2);break;case\"bottom\":case\"top\":e.coord.left=Math.floor(e.target-e.size.width/2)}switch(e.side){case\"left\":e.coord.left=o.geo.origin.windowOffset.left-e.outerSize.width;break;case\"right\":e.coord.left=o.geo.origin.windowOffset.right+e.distance.horizontal;break;case\"top\":e.coord.top=o.geo.origin.windowOffset.top-e.outerSize.height;break;case\"bottom\":e.coord.top=o.geo.origin.windowOffset.bottom+e.distance.vertical}\"window\"==e.container?\"top\"==e.side||\"bottom\"==e.side?e.coord.left<0?o.geo.origin.windowOffset.right-this.__options.minIntersection>=0?e.coord.left=0:e.coord.left=o.geo.origin.windowOffset.right-this.__options.minIntersection-1:e.coord.left>o.geo.window.size.width-e.size.width&&(o.geo.origin.windowOffset.left+this.__options.minIntersection<=o.geo.window.size.width?e.coord.left=o.geo.window.size.width-e.size.width:e.coord.left=o.geo.origin.windowOffset.left+this.__options.minIntersection+1-e.size.width):e.coord.top<0?o.geo.origin.windowOffset.bottom-this.__options.minIntersection>=0?e.coord.top=0:e.coord.top=o.geo.origin.windowOffset.bottom-this.__options.minIntersection-1:e.coord.top>o.geo.window.size.height-e.size.height&&(o.geo.origin.windowOffset.top+this.__options.minIntersection<=o.geo.window.size.height?e.coord.top=o.geo.window.size.height-e.size.height:e.coord.top=o.geo.origin.windowOffset.top+this.__options.minIntersection+1-e.size.height):(e.coord.left>o.geo.window.size.width-e.size.width&&(e.coord.left=o.geo.window.size.width-e.size.width),e.coord.left<0&&(e.coord.left=0)),n.__sideChange(_,e.side),o.tooltipClone=_[0],o.tooltipParent=n.__instance.option(\"parent\").parent[0],o.mode=e.mode,o.whole=e.whole,o.origin=n.__instance._$origin[0],o.tooltip=n.__instance._$tooltip[0],delete e.container,delete e.fits,delete e.mode,delete e.outerSize,delete e.whole,e.distance=e.distance.horizontal||e.distance.vertical;var c,h,d,u=t.extend(!0,{},e);if(n.__instance._trigger({edit:function(t){e=t},event:i,helper:o,position:u,type:\"position\"}),n.__options.functionPosition){var g=n.__options.functionPosition.call(n,n.__instance,o,u);g&&(e=g)}a.destroy(),\"top\"==e.side||\"bottom\"==e.side?(c={prop:\"left\",val:e.target-e.coord.left},h=e.size.width-this.__options.minIntersection):(c={prop:\"top\",val:e.target-e.coord.top},h=e.size.height-this.__options.minIntersection),c.val<this.__options.minIntersection?c.val=this.__options.minIntersection:c.val>h&&(c.val=h),d=o.geo.origin.fixedLineage?o.geo.origin.windowOffset:{left:o.geo.origin.windowOffset.left+o.geo.window.scroll.left,top:o.geo.origin.windowOffset.top+o.geo.window.scroll.top},e.coord={left:d.left+(e.coord.left-o.geo.origin.windowOffset.left),top:d.top+(e.coord.top-o.geo.origin.windowOffset.top)},n.__sideChange(n.__instance._$tooltip,e.side),o.geo.origin.fixedLineage?n.__instance._$tooltip.css(\"position\",\"fixed\"):n.__instance._$tooltip.css(\"position\",\"\"),n.__instance._$tooltip.css({left:e.coord.left,top:e.coord.top,height:e.size.height,width:e.size.width}).find(\".tooltipster-arrow\").css({left:\"\",top:\"\"}).css(c.prop,c.val),n.__instance._$tooltip.appendTo(n.__instance.option(\"parent\")),n.__instance._trigger({type:\"repositioned\",event:i,position:e})},__sideChange:function(t,i){t.removeClass(\"tooltipster-bottom\").removeClass(\"tooltipster-left\").removeClass(\"tooltipster-right\").removeClass(\"tooltipster-top\").addClass(\"tooltipster-\"+i)},__targetFind:function(t){var i={},o=this.__instance._$origin[0].getClientRects();o.length>1&&(1==this.__instance._$origin.css(\"opacity\")&&(this.__instance._$origin.css(\"opacity\",.99),o=this.__instance._$origin[0].getClientRects(),this.__instance._$origin.css(\"opacity\",1)));if(o.length<2)i.top=Math.floor(t.geo.origin.windowOffset.left+t.geo.origin.size.width/2),i.bottom=i.top,i.left=Math.floor(t.geo.origin.windowOffset.top+t.geo.origin.size.height/2),i.right=i.left;else{var e=o[0];i.top=Math.floor(e.left+(e.right-e.left)/2),e=o.length>2?o[Math.ceil(o.length/2)-1]:o[0],i.right=Math.floor(e.top+(e.bottom-e.top)/2),e=o[o.length-1],i.bottom=Math.floor(e.left+(e.right-e.left)/2),e=o.length>2?o[Math.ceil((o.length+1)/2)-1]:o[o.length-1],i.left=Math.floor(e.top+(e.bottom-e.top)/2)}return i}}}),t});\n","Amasty_Shopby/js/amShopbyAjax.js":"/**\n * @author    Amasty Team\n * @copyright Copyright (c) Amasty Ltd. ( http://www.amasty.com/ )\n * @package   Amasty_Shopby\n */\ndefine([\n    \"underscore\",\n    \"jquery\",\n    \"knockout\",\n    'amShopbyTopFilters',\n    \"productListToolbarForm\",\n    \"amShopbyFilterAbstract\",\n    \"Magento_PageCache/js/page-cache\"\n], function (_, $, ko, amShopbyTopFilters) {\n    'use strict';\n    $.widget('mage.amShopbyAjax', {\n        prevCall: false,\n        $shopbyOverlay: null,\n        cached: [],\n        memorizeData: [],\n        blockToolbarProcessing: false,\n        swatchesTooltip: '.swatch-option-tooltip',\n        filterTooltip: '.amshopby-filter-tooltip',\n        response: null,\n        cacheKey: null,\n        startAjax: false,\n        isCategorySingleSelect: 0,\n        nodes: {\n            loader: $('<div id=\"amasty-shopby-overlay\" class=\"amshopby-overlay-block\">' +\n                '<span class=\"amshopby-loader\"></span></div>')\n        },\n        selectors: {\n            products_wrapper: '#amasty-shopby-product-list, .search.results',\n            top_nav: '.amasty-catalog-topnav',\n            products: '.products.wrapper',\n            overlay: '#amasty-shopby-overlay',\n            top_navigation: '.catalog-topnav .block.filter',\n            js_init: '[data-am-js=\"js-init\"]',\n            title_head: '#page-title-heading'\n        },\n\n        _create: function () {\n            var self = this;\n            $(function () {\n                self.initWidget();\n\n                if (typeof window.history.replaceState === \"function\") {\n                    window.history.replaceState({url: document.URL}, document.title);\n\n                    setTimeout(function () {\n                        /*\n                         Timeout is a workaround for iPhone\n                         Reproduce scenario is following:\n                         1. Open category\n                         2. Use pagination\n                         3. Click on product\n                         4. Press \"Back\"\n                         Result: Ajax loads the same content right after regular page load\n                         */\n                        window.onpopstate = function (e) {\n                            if (e.state) {\n                                if ($.mage.amShopbyApplyFilters) {\n                                    $.mage.amShopbyApplyFilters.prototype.showButtonClick = true;\n                                }\n                                self.callAjax(e.state.url, []);\n                                self.$shopbyOverlay.show();\n                            }\n                        };\n                    }, 0)\n                }\n            });\n        },\n\n        initWidget: function () {\n            var self = this,\n                swatchesTooltip = $(self.swatchesTooltip),\n                filterTooltip = $(self.filterTooltip);\n\n            $(document).on('baseCategory', function (event, eventData) {\n                self.currentCategoryId = eventData;\n            });\n\n            $(document).on('amshopby:submit_filters', function (event, eventData) {\n                var data = eventData.data,\n                    clearUrl = self.options.clearUrl,\n                    isSorting = eventData.isSorting,\n                    pushState = !self.options.submitByClick,\n                    isGetCounter = data?.isGetCounter && !pushState;\n\n                if (typeof data.clearUrl !== 'undefined') {\n                    clearUrl = data.clearUrl;\n                    delete data.clearUrl;\n                }\n\n                if (self.prevCall) {\n                    self.prevCall.abort();\n                }\n\n                var dataAndUrl = data.slice(0);\n\n                dataAndUrl.push(clearUrl ? clearUrl : self.options.clearUrl);\n\n                var cacheKey = JSON.stringify(dataAndUrl) + (isGetCounter ? 'IsCounter' : '');\n                $.mage.amShopbyAjax.prototype.cacheKey = cacheKey;\n                if (self.cached[cacheKey]) {\n                    var response = self.cached[cacheKey];\n\n                    if (pushState || isSorting || !isGetCounter) {\n                        if (response.newClearUrl\n                            && response.newClearUrl.indexOf('?p=') == -1\n                            && response.newClearUrl.indexOf('&p=') == -1\n                        ) {\n                            self.options.clearUrl = response.newClearUrl;\n                        }\n\n                        window.history.pushState({url: response.url}, '', response.url);\n                        self.reloadHtml(response);\n                        self.initAjax();\n                    } else if ($.mage.amShopbyApplyFilters) {\n                        $.mage.amShopbyApplyFilters.prototype.showButtonCounter(\n                            response.productsCount\n                        );\n                    }\n\n                    return;\n                }\n\n                self.prevCall = self.callAjax(clearUrl, data, pushState, cacheKey, isSorting, isGetCounter);\n            });\n\n            $(document).on('touchstart touchmove scroll', function () {\n                if (swatchesTooltip) {\n                    swatchesTooltip.hide();\n                    filterTooltip.trigger('mouseleave');\n                }\n            });\n\n            $(document).on('amshopby:reload_html', function (event, eventData) {\n                self.reloadHtml(eventData.response);\n            });\n\n            filterTooltip.on('tap', function () {\n                $(this).trigger('mouseenter');\n            });\n\n            self.initAjax();\n        },\n\n        callAjax: function (clearUrl, data, pushState, cacheKey, isSorting, isGetCounter) {\n            var self = this;\n\n            data = data.filter(item => (item.name !== 'shopbyCounterAjax' || item.name !== 'shopbyAjax'));\n\n            if (pushState || isSorting || !isGetCounter) {\n                this.$shopbyOverlay.show();\n            }\n\n            data.every(function (item, key) {\n                if (item.name.indexOf('[cat]') != -1) {\n                    if (item.value == self.options.currentCategoryId) {\n                        data.splice(key, 1);\n                    } else {\n                        item.value.split(',').filter(function (element) {\n                            return element != self.options.currentCategoryId\n                        }).join(',');\n                    }\n\n                    return false;\n                }\n\n                return true;\n            });\n\n            data.push({name: 'shopbyAjax', value: 1});\n\n            if (isGetCounter) {\n                data.push({name: 'shopbyCounterAjax', value: 1});\n            }\n\n            data = this.addMemorizeData(data);\n            $.mage.amShopbyAjax.prototype.startAjax = true;\n\n            if (!clearUrl) {\n                clearUrl = self.options.clearUrl;\n            }\n            clearUrl = clearUrl.replace(/amp;/g, '');\n            self.clearUrl = clearUrl;\n\n            return $.ajax({\n                url: clearUrl,\n                data: data,\n                cache: true,\n                success: function (response) {\n                    try {\n                        $.mage.amShopbyAjax.prototype.startAjax = false;\n\n                        response = JSON.parse(response);\n\n                        if (response.isDisplayModePage) {\n                            throw new Error();\n                        }\n\n                        if (response.productsCount && response.url && $.mage.amShopbyApplyFilters) {\n                            $.mage.amShopbyApplyFilters.prototype.responseUrl = response.url;\n                        }\n\n                        if (cacheKey) {\n                            self.cached[cacheKey] = response;\n                        }\n\n                        $.mage.amShopbyAjax.prototype.response = response;\n                        if (response.newClearUrl\n                            && (response.newClearUrl.indexOf('?p=') == -1 && response.newClearUrl.indexOf('&p=') == -1)) {\n                            self.options.clearUrl = response.newClearUrl;\n                        }\n\n                        if (pushState || ($.mage.amShopbyApplyFilters && $.mage.amShopbyApplyFilters.prototype.showButtonClick) || isSorting) {\n                            window.history.pushState({url: response.url}, '', response.url);\n                        }\n\n                        if (self.options.submitByClick !== 1 || isSorting || !isGetCounter) {\n                            self.reloadHtml(response);\n                        }\n\n                        if ($.mage.amShopbyApplyFilters && $.mage.amShopbyApplyFilters.prototype.showButtonClick) {\n                            $.mage.amShopbyApplyFilters.prototype.showButtonClick = false;\n                            $.mage.amShopbyAjax.prototype.response = false;\n                            self.reloadHtml(response);\n                        }\n\n                        if ($.mage.amShopbyApplyFilters) {\n                            $.mage.amShopbyApplyFilters.prototype.showButtonCounter(response.productsCount);\n                        }\n\n                        $(document).trigger('amshopby:ajax_filter_applied');\n                    } catch (e) {\n                        var url = self.clearUrl ? self.clearUrl : self.options.clearUrl;\n                        window.location = (this.url.indexOf('shopbyAjax') == -1) ? this.url : url;\n                    }\n                },\n                error: function (response) {\n                    try {\n                        if (response.getAllResponseHeaders() != '') {\n                            self.options.clearUrl ? window.location = self.options.clearUrl : location.reload();\n                        }\n                    } catch (e) {\n                        window.location = (this.url.indexOf('shopbyAjax') == -1) ? this.url : self.options.clearUrl;\n                    }\n                },\n                complete: function () {\n                    if (self.$shopbyOverlay) {\n                        self.$shopbyOverlay.hide();\n                    }\n                }\n            });\n        },\n\n        addMemorizeData: function (data) {\n            if (this.memorizeData) {\n                $.each(this.memorizeData, function (key, param) {\n                    var current = this.filterDataByProp(data, param, 'name');\n\n                    if (_.isUndefined(current)) {\n                        data.push({ name: param.name, value: param.value });\n                    } else {\n                        current.value = param.value;\n                    }\n                }.bind(this));\n            }\n\n            return data;\n        },\n\n        filterDataByProp: function (data, param, prop) {\n            return data.find(function (obj) {\n                return obj[prop] === param[prop];\n            });\n        },\n\n        reloadHtml: function (data) {\n            var selectSidebarNavigation = '.sidebar.sidebar-main .block.filter',\n                selectTopNavigation = selectSidebarNavigation + '.amshopby-all-top-filters-append-left',\n                selectMainNavigation = '',\n                $productsWrapper = this.getProductBlock();\n\n            this.options.currentCategoryId = data.currentCategoryId\n                ? data.currentCategoryId\n                : this.options.currentCategoryId;\n\n            if ($(selectTopNavigation).first().length > 0) {\n                selectMainNavigation = selectTopNavigation; //if all filters are top\n            } else if ($(selectSidebarNavigation).first().length > 0) {\n                selectMainNavigation = selectSidebarNavigation;\n            }\n\n            $('.am_shopby_apply_filters').remove();\n            if (!selectMainNavigation) {\n                if ($('.sidebar.sidebar-main').first().length) {\n                    $('.sidebar.sidebar-main').first().prepend(\"<div class='block filter'></div>\");\n                    selectMainNavigation = selectSidebarNavigation;\n                } else {\n                    selectMainNavigation = '.block.filter';\n                }\n            }\n\n            $(selectMainNavigation).first().replaceWith(data.navigation);\n            $(selectMainNavigation).first().trigger('contentUpdated');\n\n            //top nav already exist into categoryProducts\n            if (!data.categoryProducts || data.categoryProducts.indexOf('amasty-catalog-topnav') == -1) {\n                $(this.selectors.top_navigation).first().replaceWith(data.navigationTop);\n                $(this.selectors.top_navigation).first().trigger('contentUpdated');\n            }\n\n            var mainContent  = data.categoryProducts || data.cmsPageData;\n\n            if (mainContent) {\n                $productsWrapper.replaceWith(mainContent);\n                // we should reinitialize element - because it was replaced and removed\n                $productsWrapper = this.getProductBlock();\n                try {\n                    if (typeof $.fn.applyBindings !== 'undefined') {\n                        ko.cleanNode($productsWrapper)\n                        $productsWrapper.applyBindings();\n                    }\n                    $productsWrapper.trigger('contentUpdated');\n                } catch (e) {\n                    //do nothing. error with third party extension\n                }\n            }\n\n            $(this.selectors.title_head).closest('.page-title-wrapper').replaceWith(data.h1);\n            $(this.selectors.title_head).trigger('contentUpdated');\n\n            this.replaceBlock('.breadcrumbs', 'breadcrumbs', data);\n            this.replaceBlock('.switcher-currency', 'currency', data);\n            this.replaceBlock('.switcher-language', 'store', data);\n            this.replaceBlock('.switcher-store', 'store_switcher', data);\n            this.replaceCategoryView(data);\n\n            if (data.behaviour) {\n                this.updateMultipleWishlist(data.behaviour);\n            }\n\n            $(window).trigger('google-tag');\n\n            mediaCheck({\n                media: '(max-width: 768px)',\n                entry: function () {\n                    amShopbyTopFilters.moveTopFiltersToSidebar();\n                    if (selectMainNavigation == selectTopNavigation\n                        && $(selectSidebarNavigation + ':not(.amshopby-all-top-filters-append-left)').length != 0) {\n                        $(selectSidebarNavigation).first().remove();\n                    }\n                },\n                exit: function () {\n                    amShopbyTopFilters.removeTopFiltersFromSidebar();\n                }\n            });\n            var swatchesTooltip = $('.swatch-option-tooltip');\n            if (swatchesTooltip.length) {\n                swatchesTooltip.hide();\n            }\n\n            if (this.$shopbyOverlay) {\n                this.$shopbyOverlay.hide();\n            }\n\n            var productList = $(this.selectors.products_wrapper).last();\n\n            this.scrollUp();\n\n            $('.amshopby-filters-bottom-cms').remove();\n            productList.append(data.bottomCmsBlock);\n\n            $(this.selectors.js_init).first().replaceWith(data.js_init);\n            $(this.selectors.js_init).first().trigger('contentUpdated');\n            window.history.pushState({url: data.url}, '', data.url);\n\n            this.afterChangeContentExternal(productList);\n            this.initAjax();\n        },\n\n        /**\n         * @public\n         * @return {Object}\n         */\n        getProductBlock: function () {\n            var $productsWrapper = $(this.selectors.products_wrapper).last();\n\n            if ($productsWrapper.parent('.search.results').length) {\n                $productsWrapper = $productsWrapper.parent('.search.results');\n            }\n\n            return $productsWrapper;\n        },\n\n        scrollUp: function () {\n            var productList = $(this.selectors.products_wrapper).last(),\n                topNavBlock = $(this.selectors.top_nav);\n\n            if (this.options.scrollUp && productList.length) {\n                $(document).scrollTop(this.options.scrollUp === 1\n                    ? (topNavBlock.length ? topNavBlock.offset().top : productList.offset().top)\n                    : 0);\n            }\n        },\n\n        afterChangeContentExternal: function (productList) {\n            //compatibility with Amasty Scroll extension\n            $(document).trigger('amscroll_refresh');\n\n            //fix issue with wrong form key\n            productList.formKey();\n\n            //porto theme compatibility\n            var lazyImg = $(\"img.porto-lazyload:not(.porto-lazyload-loaded)\");\n            if (lazyImg.length && typeof $.fn.lazyload == 'function') {\n                lazyImg.lazyload({effect:\"fadeIn\"});\n            }\n\n            if ($('head').html().indexOf('Infortis') > -1) {\n                $(document).trigger('last-swatch-found');\n            }\n        },\n\n        updateMultipleWishlist: function (data) {\n            $('#popup-tmpl').remove();\n            $('#split-btn-tmpl').remove();\n            $('#form-tmpl-multiple').replaceWith(data);\n            $('body').off('click', '[data-post-new-wishlist]');\n            require('uiRegistry').remove('multipleWishlist');\n            $('.page-wrapper').trigger('contentUpdated');\n        },\n\n        replaceBlock: function (blockClass, dataName, data) {\n            $(blockClass).replaceWith(data[dataName]);\n            $(blockClass).trigger('contentUpdated');\n        },\n\n        replaceCategoryView: function (data) {\n            var imageElement = $(\".category-image\"),\n                descrElement = $(\".category-description\");\n            if (data.image) {\n                 if (imageElement.length !== 0) {\n                     imageElement.replaceWith(data.image);\n                 } else {\n                     imageElement.prependTo(\"column.main\");\n                 }\n            } else {\n                imageElement.remove();\n            }\n\n\n            if (data.description) {\n                if (descrElement.length !== 0) {\n                    descrElement.replaceWith(data.description);\n                } else {\n                    if (imageElement.length !== 0) {\n                        $(data.description).insertAfter(imageElement.selector);\n                    } else {\n                        descrElement.prependTo(\"column.main\");\n                    }\n                }\n            } else {\n                descrElement.remove();\n            }\n\n            $('title').html(data.title);\n            if (data.categoryData) {\n                var categoryViewSelector = \".category-view\";\n                if ($(categoryViewSelector).length === 0) {\n                    $('<div class=\"category-view\"></div>').insertAfter('.page.messages');\n                }\n                $(categoryViewSelector).replaceWith(data.categoryData);\n            }\n        },\n\n        generateOverlayElement: function () {\n            var selectors = this.selectors,\n                productListContainer = $(selectors.products_wrapper\n                    .replace(',', ' ' + selectors.products + ',') + ' ' + selectors.products);\n\n            if (!$(this.selectors.overlay).length) {\n                productListContainer.append(this.nodes.loader);\n            }\n\n            this.$shopbyOverlay = $(this.selectors.overlay);\n        },\n\n        initAjax: function () {\n            var self = this;\n            this.generateOverlayElement();\n\n            if ($.mage.productListToolbarForm) {\n                //change page limit\n                $.mage.productListToolbarForm.prototype.changeUrl = function (paramName, paramValue, defaultValue) {\n                    // Workaround to prevent double method call\n                    if (self.blockToolbarProcessing) {\n                        return;\n                    }\n                    self.blockToolbarProcessing = true;\n                    setTimeout(function () {\n                        self.blockToolbarProcessing = false;\n                    }, 300);\n\n                    var decode = window.decodeURIComponent,\n                        urlPaths = this.options.url.split('?'),\n                        urlParams = urlPaths[1] ? urlPaths[1].split('&') : [],\n                        paramData = {},\n                        currentPage = this.getCurrentPage ? this.getCurrentPage() : '1',\n                        newPage;\n\n                    for (var i = 0; i < urlParams.length; i++) {\n                        var parameters = urlParams[i].split('=');\n                        paramData[decode(parameters[0])] = parameters[1] !== undefined\n                            ? decode(parameters[1].replace(/\\+/g, '%20'))\n                            : '';\n                    }\n\n                    if (currentPage > 1 && paramName === this.options.limit) {\n                        newPage = Math.floor(this.getCurrentLimit() * (currentPage - 1) / paramValue) + 1;\n\n                        if (newPage > 1) {\n                            paramData[this.options.page] = newPage;\n                        } else {\n                            delete paramData[this.options.page];\n                        }\n                    }\n\n                    paramData[paramName] = paramValue;\n\n                    if (paramValue == defaultValue) {\n                        delete paramData[paramName];\n                    }\n\n                    if (self.options.isMemorizerAllowed) {\n                        self.memorizeData.push({name: paramName, value: paramValue});\n                    }\n\n                    self.options.clearUrl = self.getNewClearUrl(\n                        paramName,\n                        paramData[paramName] ? paramData[paramName] : '',\n                        paramData[this.options.page]\n                    );\n\n                    //add ajax call\n                    $.mage.amShopbyFilterAbstract.prototype.prepareTriggerAjax(null, null, null, true);\n                };\n            }\n\n            //change page number\n            $(\".toolbar .pages a\").unbind('click').bind('click', function (e) {\n                var newUrl = $(this).prop('href'),\n                    updatedUrl = null,\n                    urlPaths = newUrl.split('?'),\n                    urlParams = urlPaths[1] ? urlPaths[1].split('&') : [];\n\n                for (var i = 0; i < urlParams.length; i++) {\n                    if (urlParams[i].indexOf(\"p=\") === 0) {\n                        var pageParam = urlParams[i].split('=');\n                        updatedUrl = self.getNewClearUrl(pageParam[0], pageParam[1] > 1 ? pageParam[1] : '');\n                        break;\n                    }\n                }\n\n                if (!updatedUrl) {\n                    updatedUrl = this.href;\n                }\n                updatedUrl = updatedUrl.replace('amp;', '');\n                $.mage.amShopbyFilterAbstract.prototype.prepareTriggerAjax(document, updatedUrl, false, true);\n                $(document).scrollTop($(self.selectors.products_wrapper).offset().top);\n\n                e.stopPropagation();\n                e.preventDefault();\n            });\n        },\n\n        //Update url after change page size or current page.\n        getNewClearUrl: function (key, value, page) {\n            var url = new URL(window.location.href),\n                params = new window.URLSearchParams(url.search);\n\n            if (value !== '') {\n                params.set(key, value);\n            } else {\n                params.delete(key);\n            }\n\n            if (page) {\n                params.set('p', page);\n            } else if (key !== 'p') {\n                params.delete('p');\n            }\n\n            url.search = params;\n\n            return window.decodeURIComponent(url.toString());\n        }\n    });\n\n    return $.mage.amShopbyAjax;\n});\n","Amasty_Shopby/js/amShopbyResponsive.js":"/**\n * @author    Amasty Team\n * @copyright Copyright (c) Amasty Ltd. ( http://www.amasty.com/ )\n * @package   Amasty_Shopby\n */\n\ndefine([\n    'jquery',\n    'matchMedia',\n    'amShopbyTopFilters',\n    'mage/tabs',\n    'domReady!'\n], function ($, mediaCheck, amShopbyTopFilters) {\n    'use strict';\n\n    mediaCheck({\n        media: '(max-width: 768px)',\n        entry: function () {\n            amShopbyTopFilters.moveTopFiltersToSidebar();\n        },\n\n        exit: function () {\n\n            amShopbyTopFilters.removeTopFiltersFromSidebar();\n        }\n    });\n});\n","Amasty_Shopby/js/amShopbyFiltersSync.js":"define([\n    \"underscore\",\n    \"jquery\"\n], function (_, $) {\n    'use strict';\n    return function (options) {\n        var beforeValue = [];\n        $(document).on(\"sync\", \"[data-amshopby-filter]\", function (event, clearFilter) {\n            syncFilters(this, clearFilter);\n        });\n\n        function syncFilters(element, clearFilter) {\n            var currentForm = $(element);\n            var attributeCode = currentForm.attr('data-amshopby-filter');\n\n            $('[data-amshopby-filter=\"' + attributeCode + '\"]').each(function () {\n                if (this !== currentForm.get(0) || clearFilter) {\n                    beforeValue = $(this).serializeArray();\n\n                    var data = normalizeData(currentForm.serializeArray());\n                    delete data['amshopby[attr_price_from][]'];\n                    delete data['amshopby[attr_price_to][]'];\n\n                    _(data).each(function (values, name) {\n                        var element = $(this).find('[name=\"' + name + '\"]');\n\n                        if (values[0] || clearFilter) {\n                            element.val(values);\n                            element.trigger(\"amshopby:sync_change\", [values]);\n                            element.trigger(\"chosen:updated\");\n                        }\n                    }.bind(this));\n                }\n            });\n        }\n\n        function normalizeData(data) {\n            _(beforeValue).each(function (beforeItem) {\n                var item = _.filter(data, function (item) {\n                    return item.name === beforeItem.name;\n                });\n\n                if (item.length === 0) {\n                    data.push({\n                        name: beforeItem.name,\n                        value: ''\n                    });\n                }\n            });\n\n            var normalizedData = {};\n            _(data).each(function (item) {\n                if (!normalizedData[item.name]) {\n                    normalizedData[item.name] = [];\n                }\n\n                normalizedData[item.name].push(item.value);\n            });\n            return normalizedData;\n        }\n    }\n});\n","Amasty_Shopby/js/amShopbyTopFilters.js":"/**\n * Methods to moving and removing filters from top to sidebar on mobile devices\n */\n\ndefine([\n    'jquery'\n], function ($) {\n    'use strict';\n\n    var options = {\n        widgets: {\n            collapsible: '{\"collapsible\":{\"openedState\": \"active\", \"collapsible\": true, \"active\": false, '\n                + '\"collateral\": { \"openedState\": \"filter-active\", \"element\": \"body\" } }}',\n            accordion: '{\"accordion\":{\"openedState\": \"active\", \"collapsible\": true, \"active\": false, '\n                + '\"multipleCollapsible\": %1}}'\n        },\n        selectors: {\n            sidebar: '.sidebar.sidebar-main',\n            sidebarList: '.sidebar.sidebar-main #narrow-by-list',\n            list: '#narrow-by-list',\n            topNav: '.catalog-topnav',\n            topFilterActions: '.catalog-topnav .filter-actions',\n            topNarrowList: '.catalog-topnav #narrow-by-list',\n            layeredFilter: '#layered-filter-block',\n            blockFilter: '.block.filter',\n            optionsItem: '.filter-options-item',\n            filterTitle: '.filter-title:before',\n            filterActions: '.block-actions.filter-actions',\n            swatches: '.items, .swatch-attribute'\n        },\n        classes: {\n            allTop: 'amshopby-all-top-filters-append-left',\n            filterTop: 'amshopby-filter-top'\n        }\n    };\n\n    return {\n        /**\n         * @public\n         * @returns {void}\n         */\n        moveTopFiltersToSidebar: function () {\n            if ($(options.selectors.sidebarList).length === 0) {\n                var blockClass = $(options.selectors.layeredFilter).length\n                        ? options.selectors.layeredFilter\n                        : options.selectors.blockFilter,\n                    $element = $(options.selectors.topNav + ' ' + blockClass).clone(),\n                    $sidebar = $(options.selectors.sidebar).first();\n\n                $(options.selectors.topFilterActions).hide();\n                $element.find(options.selectors.filterTitle).css('display', 'none');\n                $element\n                    .addClass(options.classes.allTop)\n                    .attr('data-mage-init', options.widgets.collapsible);\n                $element.find(options.selectors.list)\n                    .attr('data-mage-init', options.widgets.accordion.replace('%1', 'false'));\n                $element.find(options.selectors.filterActions).remove();\n                $sidebar.append($element);\n                $sidebar.trigger('contentUpdated');\n\n                return;\n            }\n\n            $(options.selectors.topNarrowList + ' ' + options.selectors.optionsItem).each(function () {\n                var isPresent = false,\n                    classes = $(this).find(options.selectors.swatches).first().attr('class'),\n                    i;\n\n                if (classes) {\n                    var listClasses = classes.split(' '),\n                        currentClass = '';\n\n                    for (i = 0; i < listClasses.length; i++) {\n                        if (listClasses[i].indexOf('am-filter-items-') !== -1) {\n                            currentClass = listClasses[i];\n\n                            break;\n                        }\n                    }\n\n                    if (currentClass !== '' && $(options.selectors.sidebarList + ' .' + currentClass).length > 0) {\n                        isPresent = true;\n                    }\n                }\n\n                if (isPresent) {\n                    return;\n                }\n\n                $(this).addClass(options.classes.filterTop).appendTo($(options.selectors.sidebarList).first());\n            });\n\n            $(options.selectors.sidebar + ' ' + options.selectors.blockFilter).first().trigger('contentUpdated');\n        },\n\n        /**\n         * @public\n         * @returns {void}\n         */\n        removeTopFiltersFromSidebar: function () {\n            if ($(options.selectors.topNav).length === 0) {\n                return;\n            }\n\n            $(options.selectors.sidebarList + ' .' + options.classes.filterTop)\n                .appendTo($(options.selectors.topNarrowList));\n            $(options.selectors.sidebar + ' .' + options.classes.allTop).remove();\n        }\n    };\n});\n","Amasty_Shopby/js/amShopbySwatchesChoose.js":"/**\n *  Amasty Swatches Filter select\n */\n\ndefine([\n    'jquery'\n], function ($) {\n    'use strict';\n\n    $.widget('mage.amShopbySwatchesChoose', {\n        options: {\n            listSwatches: {},\n            swatchWidgetName: 'mageSwatchRenderer',\n            newSwatchWidgetName: 'mage-SwatchRenderer'\n        },\n        selectors: {\n            swatchOption: '[data-role^=\"swatch-option\"]'\n        },\n        observerConfig: {\n            attributes: true,\n            childList: false,\n            subtree: true\n        },\n        observer: null,\n\n        /**\n         * @inheritDoc\n         */\n        _create: function () {\n            var self = this;\n\n            if (!self.options.listSwatches.length) {\n                return;\n            }\n\n            self.initObserver();\n\n            self.element.find(self.selectors.swatchOption).each(function (index, element) {\n                self.observer.observe(element, self.observerConfig);\n            });\n        },\n\n        /**\n         * @public\n         * @return {void}\n         */\n        initObserver: function () {\n            this.observer = new MutationObserver(this.observerCallback.bind(this));\n        },\n\n        /**\n         * Waiting for the mageSwatchRenderer module to load\n         *\n         * @public\n         * @param {array} mutationsList\n         * @return {void}\n         */\n        observerCallback: function (mutationsList) {\n            var self = this,\n                swatchWidget;\n\n            mutationsList.forEach(function (mutation) {\n                if (mutation.type === 'attributes' && mutation.attributeName === 'data-rendered') {\n                    swatchWidget = $(mutation.target).data(self.options.swatchWidgetName) || $(mutation.target).data(self.options.newSwatchWidgetName);\n\n                    $(self.options.listSwatches).each( function (id, attribute) {\n                        if (!swatchWidget || !swatchWidget._EmulateSelected) {\n                            return;\n                        }\n\n                        swatchWidget._EmulateSelected(attribute);\n                    });\n                }\n            });\n        }\n    });\n\n    return $.mage.amShopbySwatchesChoose;\n});\n","Amasty_Shopby/js/jquery.ui.touch-punch.min.js":"/*!\n * jQuery UI Touch Punch 0.2.3\n *\n * Copyright 2011\u20132014, Dave Furfero\n * Dual licensed under the MIT or GPL Version 2 licenses.\n *\n * Depends:\n *  jquery.ui.widget.js\n *  jquery.ui.mouse.js\n */\ndefine([\n    'jquery',\n    'jquery-ui-modules/mouse'\n], function ($) {\n\n    !function(a){function f(a,b){if(!(a.originalEvent.touches.length>1)){a.preventDefault();var c=a.originalEvent.changedTouches[0],d=document.createEvent(\"MouseEvents\");d.initMouseEvent(b,!0,!0,window,1,c.screenX,c.screenY,c.clientX,c.clientY,!1,!1,!1,!1,0,null),a.target.dispatchEvent(d)}}if(a.support.touch=\"ontouchend\"in document,a.support.touch){var e,b=a.ui.mouse.prototype,c=b._mouseInit,d=b._mouseDestroy;b._touchStart=function(a){var b=this;!e&&b._mouseCapture(a.originalEvent.changedTouches[0])&&(e=!0,b._touchMoved=!1,f(a,\"mouseover\"),f(a,\"mousemove\"),f(a,\"mousedown\"))},b._touchMove=function(a){e&&(this._touchMoved=!0,f(a,\"mousemove\"))},b._touchEnd=function(a){e&&(f(a,\"mouseup\"),f(a,\"mouseout\"),this._touchMoved||f(a,\"click\"),e=!1)},b._mouseInit=function(){var b=this;b.element.bind({touchstart:a.proxy(b,\"_touchStart\"),touchmove:a.proxy(b,\"_touchMove\"),touchend:a.proxy(b,\"_touchEnd\")}),c.call(b)},b._mouseDestroy=function(){var b=this;b.element.unbind({touchstart:a.proxy(b,\"_touchStart\"),touchmove:a.proxy(b,\"_touchMove\"),touchend:a.proxy(b,\"_touchEnd\")}),d.call(b)}}}($);\n});\n","Amasty_Shopby/js/amShopby.js":"/* eslint-disable no-mixed-operators */\n/**\n *  Amasty Filter Abstract\n */\n\ndefine([\n    'jquery',\n    'underscore',\n    'amShopbyHelpers',\n    'Magento_Ui/js/modal/modal',\n    'jquery-ui-modules/slider',\n    'mage/tooltip',\n    'mage/validation',\n    'mage/translate',\n    'Amasty_Shopby/js/jquery.ui.touch-punch.min',\n    'Amasty_ShopbyBase/js/chosen/chosen.jquery',\n    'amShopbyFiltersSync'\n], function ($, _, helpers) {\n    'use strict';\n\n    $.widget('mage.amShopbyFilterAbstract', {\n        filters: {},\n        options: {\n            isAjax: 0,\n            collectFilters: 0,\n            activeClass: '-active',\n            clearUrl: null,\n            delta: [],\n            deltaFrom: 0,\n            deltaTo: 0,\n            curRate: '1',\n            digitsAfterDot: 2\n        },\n        selectors: {\n            fromToWidget: '[data-am-js=\"fromto-widget\"]',\n            filterForm: 'form[data-amshopby-filter]',\n            filterFormAttr: 'form[data-amshopby-filter={attr}]',\n            filterItems: '[class*=\"am-filter-items\"]',\n            sidebar: '.sidebar',\n            topNav: '.catalog-topnav',\n            filterOptionsContent: '.filter-options-content',\n            filterOptionsItem: '.filter-options-item',\n            ajaxOptionsSelectors: 'body.page-with-filter, body.catalogsearch-result-index, body.cms-index-index',\n            filterRequestVar: '[data-amshopby-filter-request-var=\"cat\"]',\n            dFrom: 'df=',\n            dTo: 'dt='\n        },\n        classes: {\n            active: '-active',\n            disabled: '-disabled',\n            savedFilterValues: 'amshopby-saved-values',\n            selected: 'amshopby-link-selected'\n        },\n        nodes: {\n            ranges: $('[data-amshopby-js=\"price-ranges\"]')\n        },\n\n        /**\n         * @public\n         * @return {Object}\n         */\n        getFilter: function () {\n            return {\n                'code': this.element.attr('amshopby-filter-code'),\n                'value': this.element.attr('amshopby-filter-value')\n            };\n        },\n\n        /**\n         * @public\n         * @param {String} link\n         * @param {Boolean} [clearFilter]\n         * @return {void}\n         */\n        apply: function (link, clearFilter) {\n            var linkParam;\n\n            try {\n                if ($.mage.amShopbyAjax) {\n                    $.mage.amShopbyAjax.prototype.response = null;\n                }\n\n                this.options.isAjax = $.mage.amShopbyAjax !== undefined;\n\n                linkParam = clearFilter ? link : null;\n                link = this.element?.parents('.price-ranges').length && link.includes('?')\n                    ? link + '&price-ranges=1'\n                    : link;\n\n                if (!this.options.collectFilters && this.options.isAjax === true) {\n                    this.prepareTriggerAjax(this.element, linkParam, clearFilter);\n                } else {\n                    // eslint-disable-next-line no-lonely-if\n                    if (this.options.collectFilters === 1) {\n                        this.prepareTriggerAjax(this.element, linkParam);\n                    } else {\n                        window.location = link;\n                    }\n                }\n            } catch (e) {\n                window.location = link;\n            }\n        },\n\n        /**\n         * @public\n         * @param {String | null} element\n         * @param {String | null} clearUrl\n         * @param {Boolean | null} [clearFilter]\n         * @param {Boolean} [isSorting]\n         * @return {Array}\n         */\n        prepareTriggerAjax: function (element, clearUrl, clearFilter, isSorting) {\n            var self = this,\n                widgetInstance = $.mage.amShopbyFilterAbstract.prototype,\n                selectors = this.selectors,\n                forms = $(selectors.filterForm),\n                attributeName,\n                excludedFormSelector,\n                existFields = [],\n                savedFilters = [],\n                $item,\n                className,\n                startPos,\n                endPos,\n                filterClass,\n                isPriceType,\n                serializeForms,\n                isPriceExist,\n                data,\n                ajaxData;\n\n            if (typeof this.element !== 'undefined' && clearFilter) {\n                attributeName = this.selectors.filterFormAttr\n                    .replace('{attr}', this.element\n                        .closest(selectors.filterOptionsContent)\n                        .find('form')\n                        .data('amshopby-filter'));\n                excludedFormSelector = (this.element.closest(selectors.sidebar).length === 0\n                    ? selectors.topNav : selectors.sidebar) + ' ' + attributeName;\n\n                forms = forms.not(excludedFormSelector);\n            }\n\n            forms.each(function (index, item) {\n                $item = $(item);\n                className = '';\n\n                if ($item.closest(selectors.filterItems).length) {\n                    className = $item.closest(selectors.filterItems)[0].className;\n                } else if ($item.find(selectors.filterItems).length) {\n                    className = $item.find(selectors.filterItems)[0].className;\n                }\n\n                startPos = className.indexOf('am-filter-items');\n                endPos = className.indexOf(' ', startPos + 1) === -1 ? 100 : className.indexOf(' ', startPos + 1);\n                filterClass = className.substring(startPos, endPos);\n                isPriceType = $($item.closest(selectors.filterOptionsItem))\n                    .find(selectors.fromToWidget).length;\n\n                if (filterClass && existFields[filterClass] && !isPriceType) {\n                    forms[index] = '';\n                } else {\n                    existFields[filterClass] = true;\n                }\n\n                if ($item.hasClass(self.classes.savedFilterValues)) {\n                    savedFilters.push(forms[index]);\n                    forms[index] = '';\n                }\n            });\n\n            serializeForms = forms.serializeArray();\n            isPriceExist = false;\n\n            // eslint-disable-next-line consistent-return\n            _.each(serializeForms, function (index, item) {\n                if (item.name === 'amshopby[price][]') {\n                    isPriceExist = true;\n\n                    return false;\n                }\n            });\n\n            if (!isPriceExist && savedFilters) {\n                // eslint-disable-next-line no-shadow\n                savedFilters.forEach(function (element) {\n                    serializeForms.push($(element).serializeArray()[0]);\n                });\n            }\n\n            data = this.normalizeData(serializeForms, isSorting, clearFilter);\n            clearUrl = data.clearUrl ? data.clearUrl : clearUrl;\n\n            // eslint-disable-next-line no-param-reassign\n            element = element || document;\n\n            if (widgetInstance.options.delta.length) {\n                data = data.concat(widgetInstance.options.delta);\n            }\n\n            if ($(element).parents('.price-ranges').length) {\n                data.push({name: 'price-ranges', value: 1});\n            }\n\n            data.clearUrl = clearUrl;\n\n            if (this.options.collectFilters) {\n                ajaxData = _.clone(data);\n                ajaxData.clearUrl = clearUrl;\n\n                $.mage.amShopbyAjax.prototype.prevData = {\n                    ajaxData: ajaxData,\n                    clearFilter,\n                    isSorting\n                };\n\n                if (!isSorting) {\n                    data.isGetCounter = true;\n                }\n            }\n\n            $(element).trigger('amshopby:submit_filters', {\n                data: data,\n                clearFilter: clearFilter,\n                isSorting: isSorting\n            });\n\n            return data;\n        },\n\n        /**\n         * @public\n         * @param {Array} data\n         * @param {Boolean} [isSorting]\n         * @param {Boolean} [clearFilter]\n         * @return {Array}\n         */\n        normalizeData: function (data, isSorting, clearFilter) {\n            var self = this,\n                normalizedData = [],\n                ajaxOptions = $(this.selectors.ajaxOptionsSelectors).amShopbyAjax('option'),\n                clearUrl;\n\n            _.each(data, function (item) {\n                if (item && item.value.trim() !== '' && item.value !== '-1') {\n                    // eslint-disable-next-line vars-on-top\n                    var isNormalizeItem = _.find(normalizedData, function (normalizeItem) {\n                        return normalizeItem.name === item.name && normalizeItem.value === item.value\n                            || item.name === 'amshopby[price][]' && normalizeItem.name === item.name;\n                    });\n\n                    if (!isNormalizeItem) {\n                        if (item.name === 'amshopby[price][]') {\n                            item.value = self.normalizePrice(item.value);\n                        }\n\n                        normalizedData.push(item);\n\n                        if (ajaxOptions.isCategorySingleSelect === 1\n                            && item.name === 'amshopby[cat][]'\n                            && item.value !== ajaxOptions.currentCategoryId\n                            && !clearFilter\n                            && !isSorting\n                        ) {\n                            clearUrl = $('*' + self.selectors.filterRequestVar + ' *[value=\"' + item.value + '\"]')\n                                .parent().find('a').attr('href');\n                        }\n                    }\n                }\n            });\n\n            normalizedData = this.groupDataByName(normalizedData);\n\n            if (clearUrl) {\n                normalizedData.clearUrl = clearUrl;\n            }\n\n            return normalizedData;\n        },\n\n        /**\n         * @public\n         * @param {Array} formData\n         * @return {Array}\n         */\n        groupDataByName: function (formData) {\n            var hash = Object.create(null);\n\n            return formData.reduce(function (result, currentValue) {\n                if (!hash[currentValue.name]) {\n                    hash[currentValue.name] = {};\n                    hash[currentValue.name].name = currentValue.name;\n                    result.push(hash[currentValue.name]);\n                }\n\n                if (hash[currentValue.name].value) {\n                    hash[currentValue.name].value += ',' + currentValue.value;\n                } else {\n                    hash[currentValue.name].value = currentValue.value;\n                }\n\n                return result;\n            }, []);\n        },\n\n        /**\n         * @public\n         * @return {Number}\n         */\n        getHideDigitsAfterDot: function () {\n            var value = +$('[name=\"amshopby[price][]\"]').first().attr('data-digits-after-dot');\n            return Number.isNaN(value) ? 0 : value;\n        },\n\n        /**\n         * @public\n         * @param {Number} size\n         * @return {String}\n         */\n        buildNumber: function (size) {\n            var str = '1',\n                i;\n\n            for (i = 1; i <= size; i++) {\n                str += '0';\n            }\n\n            return str;\n        },\n\n        /**\n         * @public\n         * @return {Boolean}\n         */\n        isPrice: function () {\n            return typeof this.options.code != 'undefined' && this.options.code === 'price';\n        },\n\n        /**\n         * @public\n         * @param {Object} event\n         * @param {Object} element\n         * @return {void}\n         */\n        renderShowButton: function (event, element) {\n            if ($.mage.amShopbyApplyFilters) {\n                $.mage.amShopbyApplyFilters.prototype.renderShowButton(event, element);\n            }\n        },\n\n        /**\n         * @public\n         * @param {Object} checkbox\n         * @param {Object} parent\n         * @return {void}\n         */\n        addListenerOnCheckbox: function (checkbox, parent) {\n            checkbox.bind('click', {}, function (event) {\n                event.stopPropagation();\n                event.currentTarget.checked = !event.currentTarget.checked;\n                parent.trigger('click');\n            });\n        },\n\n        /**\n         * @public\n         * @param {Object} element - jQuery\n         * @return {Boolean}\n         */\n        markAsSelected: function (element) {\n            var self = this,\n                $element = $(element);\n\n            $element\n                .closest('li')\n                .find('a')\n                .toggleClass(self.classes.selected, $element.prop('checked'));\n        },\n\n        /**\n         * @public\n         * @param {String} value\n         * @return {String}\n         */\n        normalizePrice: function (value) {\n            var result = value.split('-'),\n                i;\n\n            for (i = 0; i < result.length; i++) {\n                if (typeof result[i] == 'undefined') {\n                    result[i] = 0;\n                }\n\n                result[i] = this.processPrice(true, result[i]).amToFixed(2, this.getHideDigitsAfterDot());\n            }\n\n            return result.join('-').replace(/[ \\r\\n]/g, '');\n        },\n\n        /**\n         * @public\n         * @returns {Boolean}\n         */\n        isBaseCurrency: function () {\n            return Number(this.options.curRate) === 1;\n        },\n\n        /**\n         * @public\n         * @param {Boolean} toBasePrice\n         * @param {String | Number} input\n         * @param {String | Number} [delta]\n         * @returns {Number}\n         */\n        processPrice: function (toBasePrice, input, delta) {\n            var rate = Number(this.options.curRate),\n                inputPrice = Number(input);\n\n            // eslint-disable-next-line no-param-reassign\n            delta = typeof delta !== 'undefined' ? Number(delta) : 0;\n\n            // eslint-disable-next-line no-nested-ternary\n            return this.isBaseCurrency()\n                ? inputPrice\n                // eslint-disable-next-line no-extra-parens\n                : (toBasePrice ? (inputPrice / rate) : ((inputPrice * rate) + delta));\n        },\n\n        /**\n         * @public\n         * @param {String | Number} calculatedCurrency\n         * @param {String | Number} baseCurrency\n         * @returns {String}\n         */\n        calculateDelta: function (calculatedCurrency, baseCurrency) {\n            return (\n                Number(calculatedCurrency) - (Number(baseCurrency).toFixed(2) * Number(this.options.curRate))\n            ).toFixed(3);\n        },\n\n        /**\n         * @public\n         * @param {String} link\n         * @param {String | Number} valueFrom - base currency price\n         * @param {String | Number} from - processed price\n         * @param {String | Number} valueTo - base currency price\n         * @param {String | Number} to - processed price\n         * @param {String} deltaFrom\n         * @param {String} deltaTo\n         * @return {String}\n         */\n        getUrlWithDelta: function (link, valueFrom, from, valueTo, to, deltaFrom, deltaTo) {\n            var dFrom = this.selectors.dFrom,\n                dTo = this.selectors.dTo;\n\n            if (this.isBaseCurrency()) {\n                return link;\n            }\n\n            if (link.indexOf(dFrom) !== -1 || link.indexOf(dTo) !== -1) {\n                // eslint-disable-next-line no-param-reassign\n                link = link.replace(\n                    dFrom + parseFloat(deltaFrom).amToFixed(2, this.getHideDigitsAfterDot()),\n                    dFrom + this.calculateDelta(from, valueFrom)\n                )\n                    .replace(\n                        dTo + parseFloat(deltaTo).amToFixed(2, this.getHideDigitsAfterDot()),\n                        dTo + this.calculateDelta(to, valueTo)\n                    );\n            } else {\n                // eslint-disable-next-line no-param-reassign\n                link += this.getDeltaParams(from, valueFrom, to, valueTo, true);\n            }\n\n            return link;\n        },\n\n        /**\n         * @public\n         * @param {String | Number} from\n         * @param {String | Number} valueFrom\n         * @param {String | Number} to\n         * @param {String | Number} valueTo\n         * @param {Boolean} isUrl\n         * @returns {String | Array}\n         */\n        getDeltaParams: function (from, valueFrom, to, valueTo, isUrl) {\n            var deltaFrom = this.calculateDelta(from, valueFrom),\n                deltaTo = this.calculateDelta(to, valueTo),\n                params = '';\n\n            $.mage.amShopbyFilterAbstract.prototype.options.deltaFrom = deltaFrom;\n            $.mage.amShopbyFilterAbstract.prototype.options.deltaTo = deltaTo;\n\n            if (isUrl) {\n                if (deltaFrom % 1 !== 0) {\n                    params += '&df=' + deltaFrom;\n                }\n\n                if (deltaTo % 1 !== 0) {\n                    params += '&dt=' + deltaTo;\n                }\n\n                return params;\n            }\n\n            return [\n                { name: 'amshopby[df][]', value: deltaFrom },\n                { name: 'amshopby[dt][]', value: deltaTo }\n            ];\n        },\n\n        /**\n         * @public\n         * @param {Array} delta\n         * @returns {void}\n         */\n        setDeltaParams: function (delta) {\n            $.mage.amShopbyFilterAbstract.prototype.options.delta = delta instanceof Array ? delta : [];\n        },\n\n        /**\n         * @public\n         * @param {String | Number} curRate\n         * @returns {void}\n         */\n        setCurrency: function (curRate) {\n            this.options.curRate = curRate;\n        },\n\n        /**\n         * @public\n         * @param {Number} collectFilters\n         * @returns {void}\n         */\n        setCollectFilters: function(collectFilters) {\n            this.options.collectFilters = collectFilters;\n        }\n    });\n\n    return $.mage.amShopbyFilterAbstract;\n});\n","Amasty_Shopby/js/amShopbyApplyFilters.js":"define([\n    \"underscore\",\n    \"jquery\",\n    \"amShopbyFilterAbstract\",\n    \"mage/translate\"\n], function (_, $) {\n    'use strict';\n\n    $.widget('mage.amShopbyApplyFilters', {\n        showButtonClick: false,\n        showButtonContainer: '.am_shopby_apply_filters',\n        showButton: 'am-show-button',\n        oneColumnFilterWrapper: '#narrow-by-list',\n        isMobile: window.innerWidth < 768,\n        scrollEvent: 'scroll.amShopby',\n\n        _create: function () {\n            var self = this;\n            $(function () {\n                var element = $(self.element[0]),\n                    navigation = element.closest(self.options.navigationSelector),\n                    isMobile = $.mage.amShopbyApplyFilters.prototype.isMobile;\n\n                $('body').append(element.closest($.mage.amShopbyApplyFilters.prototype.showButtonContainer));\n\n                if (!isMobile) {\n                    $('.amasty-catalog-topnav .filter-options-content .item,' +\n                        ' .amasty-catalog-topnav .am-filter-items-attr_price,' +\n                        '.amasty-catalog-topnav .am-filter-items-attr_decimal,' +\n                        '.amasty-catalog-topnav .am-fromto-widget').addClass('am-top-filters');\n                    self.applyShowButtonForSwatch();\n                }\n\n                element.on('click', function (e) {\n                    $.mage.amShopbyFilterAbstract.prototype.options.isCategorySingleSelect\n                        = self.options.isCategorySingleSelect;\n\n                    window.onpopstate = function () {\n                        location.reload();\n                    };\n\n                    if (self.options.ajaxSettingEnabled !== 1) {\n                        document.location.href = $.mage.amShopbyApplyFilters.prototype.responseUrl;\n                    } else {\n                        let {ajaxData, clearFilter, isSorting} = $.mage.amShopbyAjax.prototype.prevData;\n\n                        ajaxData.isGetCounter = false;\n\n                        $(element).trigger('amshopby:submit_filters', {\n                            data: ajaxData,\n                            clearFilter: clearFilter,\n                            isSorting: isSorting\n                        });\n                    }\n\n                    this.blur();\n                    self.removeShowButton();\n\n                    return true;\n                });\n\n            });\n        },\n\n        renderShowButton: function (e, element) {\n            var button = $('.' + $.mage.amShopbyApplyFilters.prototype.showButton),\n                buttonHeight = button.outerHeight();\n\n            if ($.mage.amShopbyApplyFilters.prototype.isMobile) {\n                $('#narrow-by-list .filter-options-item:last-child').css({\n                    \"padding-bottom\": buttonHeight,\n                    \"margin-bottom\": \"15px\"\n                });\n                $($.mage.amShopbyApplyFilters.prototype.showButtonContainer).addClass('visible');\n                $('.' + $.mage.amShopbyApplyFilters.prototype.showButton + ' > .am-items').html('').addClass('-loading');\n\n                return;\n            }\n\n            var sideBar = $('.sidebar-main .filter-options'),\n                leftPosition = sideBar.length ? sideBar : $('[data-am-js=\"shopby-container\"]'),\n                priceElement = '.am-filter-items-attr_price',\n                orientation,\n                elementType,\n                posTop,\n                posLeft,\n                oneColumn = $('body').hasClass('page-layout-1column'),\n                rightSidebar = $('body').hasClass('page-layout-2columns-right'),\n                marginWidth = 30, // margin for button:before\n                marginHeight = 10, // margin height\n                $element = $(element),\n                oneColumnWrapper = $($.mage.amShopbyApplyFilters.prototype.oneColumnFilterWrapper),\n                topFiltersWrapper = $('.amasty-catalog-topnav'),\n                self = this,\n                elementPosition = element.offset ? element.offset() : [];\n\n            $(self.showButtonContainer).css('width', 'inherit');\n            // get orientation\n            if ($element.parents('.amasty-catalog-topnav').length || oneColumn) {\n                button.removeClass().addClass($.mage.amShopbyApplyFilters.prototype.showButton + ' -horizontal');\n                orientation = 0;\n            } else {\n                if (rightSidebar) {\n                    button.removeClass().addClass($.mage.amShopbyApplyFilters.prototype.showButton + ' -vertical-right');\n                } else {\n                    button.removeClass().addClass($.mage.amShopbyApplyFilters.prototype.showButton + ' -vertical');\n                }\n                orientation = 1;\n            }\n\n            //get position\n            if (orientation) {\n                elementPosition['top'] = elementPosition ? elementPosition['top'] : 0;\n                posTop = (e.pageY ? e.pageY : elementPosition['top']) - buttonHeight / 2;\n                rightSidebar ?\n                    posLeft = leftPosition.offset().left - button.outerWidth() - marginWidth :\n                    posLeft = leftPosition.offset().left + leftPosition.outerWidth() + marginWidth;\n            } else {\n                if (oneColumn) {\n                    oneColumnWrapper.length ?\n                        posTop = oneColumnWrapper.offset().top - buttonHeight - marginHeight :\n                        console.warn('Improved Layered Navigation: You do not have default selector for filters in one-column design.');\n                } else {\n                    posTop = topFiltersWrapper.offset().top - buttonHeight - marginHeight;\n                }\n\n                elementPosition['left'] = elementPosition ? elementPosition['left'] : 0;\n                posLeft = (e.pageX ? e.pageX : elementPosition['left']) - button.outerWidth() / 2;\n            }\n\n            elementType = self.getShowButtonType($element);\n\n            switch (elementType) {\n                case 'dropdown':\n                    if (orientation) {\n                        posTop = $element.offset().top - buttonHeight / 2;\n                    } else {\n                        posLeft = $element.offset().left - marginHeight;\n                    }\n                    break;\n                case 'flyout':\n                    if (orientation) {\n                        rightSidebar ?\n                            posLeft = $element.parents('.item').offset().left - button.outerWidth() - marginWidth :\n                            posLeft = $element.parents('.item').offset().left\n                                + $element.parents('.item').outerWidth() + marginWidth;\n                    }\n                    break;\n                case 'price':\n                    if (orientation) {\n                        posTop = $(priceElement).not('.am-top-filters').offset().top - buttonHeight / 2 + marginHeight;\n                    } else {\n                        posLeft = $(priceElement).offset().left - marginHeight;\n                    }\n                    break;\n                case 'decimal':\n                    if (orientation) {\n                        posTop = $element.offset().top - buttonHeight / 2 + marginHeight;\n                    } else {\n                        posLeft = $element.offset().left - marginHeight;\n                    }\n                    break;\n                case 'price-widget':\n                    if (orientation) {\n                        posTop = $element.offset().top - buttonHeight / 2 + marginHeight;\n                    } else {\n                        posLeft = $element.offset().left - marginHeight;\n                    }\n                    break;\n            }\n\n            self.setShowButton(posTop, posLeft, leftPosition);\n        },\n\n        getShowButtonType: function (element) {\n            var elementType;\n\n            if (element.is('select') || element.find('select').length) {\n                elementType = 'dropdown';\n            } else if (element.parents('.amshopby-fly-out-view').length) {\n                elementType = 'flyout';\n            } else if (element.parents('.am-filter-items-attr_price').length\n                || element.is('[data-am-js=\"fromto-widget\"]')\n            ) {\n\n                var elementParent = element.parents('.am-filter-items-attr_price')[0];\n\n                element.is('[data-am-js=\"fromto-widget\"]') ? elementType = 'price-widget' : elementType = 'price';\n\n                if (elementParent && $(elementParent).has('[data-am-js=\"ranges\"]').length) {\n                    elementType = 'price-ranges';\n                }\n\n            } else if (element.is('[data-am-js=\"slider-container\"]')) {\n                elementType = 'decimal';\n            }\n\n            return elementType;\n        },\n\n        setShowButton: function (top, left, leftPosition) {\n            var self = this;\n\n            $('.' + $.mage.amShopbyApplyFilters.prototype.showButton + ' > .am-items').html('').addClass('-loading');\n\n            $($.mage.amShopbyApplyFilters.prototype.showButtonContainer).removeClass('-fixed').css({\n                \"top\": top,\n                \"left\": left,\n                \"visibility\": \"visible\",\n                \"display\": \"block\"\n            });\n\n            //temporary fix for apply button on 1column\n            if (leftPosition.length) {\n                self.changePositionOnScroll(top, left, leftPosition);\n            }\n        },\n\n        changePositionOnScroll: function (buttonTop, buttonLeft, leftPosition) {\n            var self = this,\n                windowHeight = $(window).height(),\n                buttonContainer = $(self.showButtonContainer),\n                buttonContainerHeight = buttonContainer.outerHeight(),\n                filterLeft = leftPosition.length ? leftPosition.offset().left : buttonTop,\n                filterWidth = leftPosition.length ? leftPosition.width() : windowHeight;\n\n            $(window).off(self.scrollEvent).on(self.scrollEvent, function () {\n                var scrollTop = $(window).scrollTop(),\n                    scrollBottom = scrollTop + windowHeight;\n\n                if ((scrollBottom - buttonTop) <= buttonContainerHeight) {\n                    buttonContainer\n                        .addClass('-fixed')\n                        .css({\n                            'top': windowHeight - buttonContainerHeight,\n                            'left': filterLeft,\n                            'width': filterWidth\n                        });\n                } else if (buttonTop - scrollTop <= 0) {\n                    buttonContainer\n                        .addClass('-fixed')\n                        .css({\n                            'top': '5px',\n                            'left': filterLeft,\n                            'width': filterWidth\n                        });\n                } else if (buttonContainer.hasClass('-fixed')) {\n                    buttonContainer\n                        .css({\n                            'top': buttonTop,\n                            'left': buttonLeft,\n                            'width': 'inherit'\n                        })\n                        .removeClass('-fixed');\n                }\n            });\n\n            $(window).trigger(self.scrollEvent);\n        },\n\n        removeShowButton: function () {\n            $($.mage.amShopbyApplyFilters.prototype.showButtonContainer).remove();\n        },\n\n        showButtonCounter: function (count) {\n            var items = $('.' + $.mage.amShopbyApplyFilters.prototype.showButton + ' .am-items'),\n                button = $('.' + $.mage.amShopbyApplyFilters.prototype.showButton + ' .amshopby-button');\n\n            items.removeClass('-loading');\n\n            count = parseInt(count);\n\n            if (count > 1) {\n                items.html(count + ' ' + $.mage.__('Items'));\n                button.prop('disabled', false);\n            } else if (count === 1) {\n                items.html(count + ' ' + $.mage.__('Item'));\n                button.prop('disabled', false);\n            } else {\n                items.html(count + ' ' + $.mage.__('Items'));\n                button.prop('disabled', true);\n            }\n        },\n\n        applyShowButtonForSwatch: function () {\n            var self = this;\n\n            $('.filter-options-content .swatch-option').on('click', function (e) {\n                var element = jQuery(e.target);\n                self.renderShowButton(e, element);\n            });\n        }\n    });\n\n    return $.mage.amShopbyApplyFilters;\n});\n","Amasty_Shopby/js/googleTag.js":"define([\n    'jquery'\n], function ($) {\n    'use strict';\n    return function (config) {\n        var tag = 'script',\n            layer = 'dataLayer',\n            containerId = config.gtmAccountId;\n\n        $(window).on('google-tag', function () {\n            if (containerId) {\n                window[layer] = window[layer] || [];\n                window[layer].push({\n                    'gtm.start': new Date().getTime(), event: 'gtm.js'\n                });\n                var f = document.getElementsByTagName(tag)[0],\n                    j = document.createElement(tag), dl = layer != 'dataLayer' ? '&l=' + layer : '';\n                j.async = true;\n                j.src =\n                    'https://www.googletagmanager.com/gtm.js?id=' + containerId + dl;\n                f.parentNode.insertBefore(j, f);\n                f.parentNode.removeChild(f.parentNode.querySelectorAll('script[src=\"' + j.src + '\"]')[0]);\n            }\n        })\n    }\n});\n","Amasty_Shopby/js/utils/color.js":"/**\n * Amasty Shopby helpers\n */\n\ndefine([\n    'jquery',\n    'jquery-ui-modules/effect'\n], function ($) {\n    'use strict';\n\n    return {\n        color_constants: {\n            gradient: 0.675,\n            shadow: 0.8,\n            hover: 0.45\n        },\n\n        /**\n         * Generate gradient color depending on the specified percentage\n         *\n         * @param {String} color - default\n         * @param {String} type - type of gradient\n         *\n         * @return {String} new gradient color\n         */ // eslint-disable-next-line consistent-return\n        getGradient: function (color, type) {\n            var lightenColor = this._getLightness(color, this.color_constants.gradient);\n\n            if (type === 'vertical') {\n                return 'linear-gradient(160deg, ' + lightenColor + '40%, ' + color + ' 100%)';\n            }\n\n            if (type === 'horizontal') {\n                return 'linear-gradient(270deg,' + color + ' 0%, ' + lightenColor + ' 100%)';\n            }\n        },\n\n        /**\n         * Generate Box Shadow depending on the specified percentage\n         *\n         * @param {String} color - default\n         *\n         * @return {String} new box shadow\n         */\n        getShadow: function (color) {\n            var shadowColor = this._getLightness(color, this.color_constants.shadow);\n\n            return '0 3px 4px ' + shadowColor;\n        },\n\n        /**\n         * Generate Hover color depending on the specified percentage\n         *\n         * @param {String} color - default\n         * @param {Number} [percent] - default\n         *\n         * @return {String} new color\n         */\n        getHover: function (color, percent) {\n            // eslint-disable-next-line no-param-reassign\n            percent = percent || this.color_constants.hover;\n\n            return this._getLightness(color, percent);\n        },\n\n        /**\n         * Generate lightness color depending on the specified percentage\n         *\n         * @param {String} color - default\n         * @param {Number} percent - default\n         *\n         * @return {String} new color\n         */\n        _getLightness: function (color, percent) {\n            return $.Color(color).lightness(percent).toRgbaString();\n        }\n    };\n});\n","Amasty_Shopby/js/utils/helpers.js":"/**\n * ILN helpers\n */\n\ndefine([\n    'jquery'\n], function ($) {\n    'use strict';\n\n    /**\n     * Cut zeroes from value\n     *\n     * @param {Number} digits - signs after dot\n     * @returns {String | Number}\n     */\n    // eslint-disable-next-line no-extend-native\n    Number.prototype.amToFixed = function (digits, hideDigitsAfterDot) {\n        var value = this.toFixed(digits);\n\n        if (hideDigitsAfterDot && parseInt(value) == this) {\n            value = parseInt(value)\n        }\n\n        return value;\n    };\n\n    return {\n        /**\n         * Compatibility with 2.4.4\n         * Store jquery-ui-widget to $.ui if it not exist\n         *\n         * @public\n         * @param {String} path - direct path to jquery widget file\n         * @param {String} widget - widget name\n         * @param {Function} callback\n         * @returns {void}\n         */\n        jqueryWidgetCompatibility: function (path, widget, callback) {\n            if ($.ui[widget]) {\n                callback();\n\n                return;\n            }\n\n            // eslint-disable-next-line global-require\n            require([ path ], function (instance) {\n                $.ui[widget] = instance;\n\n                callback();\n            });\n        }\n    };\n});\n","Amasty_Shopby/js/components/amShopbyFilterContainer.js":"/**\n *  Amasty Filter Container Component\n */\n\ndefine([\n    'jquery',\n    'jquery-ui-modules/slider',\n    'Amasty_Shopby/js/jquery.ui.touch-punch.min',\n    'Amasty_ShopbyBase/js/chosen/chosen.jquery',\n    'amShopbyFiltersSync',\n    'amShopbyFilterAbstract'\n], function ($) {\n    'use strict';\n\n    $.widget('mage.amShopbyFilterContainer', {\n        options: {\n            collectFilters: 0\n        },\n        classes: {\n            itemRemoved: 'amshopby-item-removed'\n        },\n        selectors: {\n            filterItem: '[data-am-js=\"shopby-item\"]',\n            filterAttrName: '[data-amshopby-filter=\"attr_{name}\"]',\n            filterRemoveButton: '[data-container=\"{attr}\"][data-value=\"{value}\"] .amshopby-remove',\n            filterContainer: '[data-am-js=\"shopby-container\"]',\n            filterActions: '.filter-actions',\n            filterName: '[name=\"amshopby[{name}][]\"]',\n            swatchOptionSelected: '.swatch-option.selected',\n            filterSliderId: '[data-amshopby-slider-id=\"slider\"]',\n            filterSliderDisplay: '[data-am-js=\"slider-display\"]',\n            filterFromTo: '[data-amshopby-fromto=\"{type}\"]',\n            range: '.range',\n            filterLayeredBock: '#layered-filter-block',\n            blockFilter: '.block.filter'\n        },\n\n        /**\n         * @private\n         * @return {void}\n         */\n        _create: function () {\n            var self = this,\n                links = $(self.element[0]).find(self.selectors.filterItem),\n                filters = [];\n\n            if (!links.length) {\n                return;\n            }\n\n            $.mage.amShopbyFilterAbstract.prototype.setCollectFilters(self.options.collectFilters);\n\n            $(links).each(function (index, value) {\n                var filter = {\n                    attribute: $(value).attr('data-container'),\n                    value: self.escapeHtml($(value).attr('data-value'))\n                };\n\n                filters.push(filter);\n\n                $(value).find('a').on('click', function (event) {\n                    event.stopPropagation();\n                    event.preventDefault();\n\n                    $(this).parent().addClass(self.classes.itemRemoved);\n                    $.mage.amShopbyFilterAbstract.prototype.renderShowButton(event, this);\n                    self.apply(filter);\n                });\n\n                if (filters.length) {\n                    $.each(filters, function (index, filter) {\n                        self.checkInForm(filter);\n                    });\n                }\n            });\n        },\n\n        /**\n         * @public\n         * @param {String} text\n         * @return {String}\n         */\n        escapeHtml: function (text) {\n            var map = {\n                '&': '&amp;',\n                '<': '&lt;',\n                '>': '&gt;',\n                '\"': '&quot;',\n                \"'\": '&#039;'\n            };\n\n            return text.replace(/[&<>\"']/g, function (m) {\n                return map[m];\n            });\n        },\n\n        /**\n         * @public\n         * @param {Object} filter\n         * @return {void}\n         */\n        apply: function (filter) {\n            var self = this,\n                attrSelector,\n                link = $(self.selectors.filterItem + self.selectors.filterRemoveButton\n                    .replace('{attr}', filter.attribute)\n                    .replace('{value}', filter.value))\n                    .attr('href'),\n                value = filter.value;\n\n            try {\n                if (filter.attribute === 'price') {\n                    attrSelector = self.selectors.filterAttrName.replace('{name}', filter.attribute);\n                }\n\n                self.setDefault(filter.attribute, value);\n\n                $(attrSelector).trigger('change');\n                $(attrSelector).trigger('sync', [true]);\n\n                if ($.mage.amShopbyAjax !== 'undefined') {\n                    $.mage.amShopbyFilterAbstract.prototype.prepareTriggerAjax(null, null, true);\n                } else if (this.options.collectFilters !== 1) {\n                    window.location = link;\n                }\n            } catch (e) {\n                window.location = link;\n            }\n        },\n\n        /**\n         * @public\n         * @return {void}\n         */\n        clearBlock: function () {\n            if (!$(this.selectors.filterContainer).find('li').length) {\n                $(this.selectors.filterContainer).remove();\n                $(this.selectors.filterActions).remove();\n            }\n        },\n\n        /**\n         * @public\n         * @param {String} name\n         * @param {String} value\n         * @return {void}\n         */\n        setDefault: function (name, value) {\n            var self = this,\n                valueSelector = self.selectors.filterName.replace('{name}', name),\n                type,\n                selected;\n\n            $(valueSelector).each(function (index, filter) {\n                type = $(filter).prop('tagName');\n\n                switch (type) {\n                    case 'SELECT':\n                        if (name === 'price') {\n                            $(filter).find('option').each(function (index, element) {\n                                if (self.toValidView(element.value.split('-')) === this) {\n                                    element.selected = false;\n                                }\n                            }.bind(value));\n                        }\n\n                        $(filter).find('[value=\"' + value + '\"]').removeAttr('selected', 'selected');\n\n                        break;\n                    case 'INPUT':\n                        selected = '';\n\n                        if ($(filter).attr('type') !== 'text' && $(filter).attr('type') !== 'hidden') {\n                            selected = $(valueSelector + '[value=\"' + value + '\"]');\n\n                            selected.prop('checked', false);\n                            selected.siblings(self.selectors.swatchOptionSelected).removeClass('selected');\n                        } else if (($(filter).attr('type') === 'hidden'\n                            && self.isEquals(name, filter.value, value))\n                            || name === 'price'\n                        ) {\n                            filter.value = '';\n                        }\n\n                        break;\n                }\n            });\n        },\n\n        /**\n         * @public\n         * @param {String} name\n         * @param {String} filterValue\n         * @param {String} value\n         * @return {Boolean}\n         */\n        isEquals: function (name, filterValue, value) {\n            var values = value.split('-'),\n                filterValues = filterValue.split('-');\n\n            if (values.length > 1) {\n                filterValue = this.toValidView(filterValues);\n                value = this.toValidView(values);\n            }\n\n            return filterValue === value;\n        },\n\n        /**\n         * @public\n         * @param {Array} values\n         * @return {String}\n         */\n        toValidView: function (values) {\n            values[0] = values[0] ? parseFloat(values[0]).toFixed() : values[0];\n            values[1] = values[1] ? parseFloat(values[1]).toFixed() : values[1];\n\n            return values[0] + '-' + values[1];\n        },\n\n        /**\n         * @public\n         * @param {Object} filter\n         * @return {void}\n         */\n        checkInForm: function (filter) {\n            var name = filter.attribute,\n                value = filter.value,\n                block;\n\n            if (this.checkIfValueNotExist(name, value)) {\n                block = $(this.selectors.filterLayeredBock);\n\n                if (!block.length) {\n                    block = $(this.selectors.blockFilter);\n                }\n\n                block.append('<form class=\"amshopby-saved-values\" data-amshopby-filter=\"attr_'\n                    + name + '\"><input value=\"' + value + '\" type=\"hidden\" name=\"amshopby[' + name + '][]\"></form>');\n            }\n        },\n\n        /**\n         * @public\n         * @param {String} name\n         * @param {String} value\n         * @return {Boolean}\n         */\n        checkIfValueNotExist: function (name, value) {\n            var fromToValueElement = this.selectors.filterFromTo.replace('{type}', 'value'),\n                filterItem = $(this.selectors.filterName.replace('{name}', name)),\n                notExistValue = true,\n                multiSelectOptions,\n                splitValue,\n                splitCurrentValue;\n\n            filterItem.each(function (index, item) {\n                if (item.multiple && $(item).hasClass('am-select')) {\n                    multiSelectOptions = [];\n\n                    $(item.selectedOptions).each(function (index, option) {\n                        multiSelectOptions.push(option.value);\n                    });\n\n                    if (multiSelectOptions.length && multiSelectOptions.includes(value)) {\n                        notExistValue = false;\n                    }\n                } else if (!item.value) {\n                    notExistValue = false;\n                } else if ($(item).is(fromToValueElement)) {\n                    splitValue = value.split('-');\n                    splitCurrentValue = item.value.split('-');\n\n                    if (splitValue[0] && splitValue[1] && splitCurrentValue[0] && splitCurrentValue[1]\n                        && Number(splitValue[0]) === Number(splitCurrentValue[0])\n                        && Number(splitValue[1]) === Number(splitCurrentValue[1])\n                    ) {\n                        notExistValue = false;\n                    }\n                } else if (item.value === value) {\n                    notExistValue = false;\n                }\n            });\n\n            return notExistValue;\n        }\n    });\n\n    return $.mage.amShopbyFilterContainer;\n});\n","Amasty_Shopby/js/components/amShopbyFilterCollapse.js":"/**\n * Filter Collapse widget\n */\n\ndefine([\n    'jquery'\n], function ($) {\n    'use strict';\n\n    $.widget('mage.amShopbyFilterCollapse', {\n        options: {\n            mode: null,\n            collapseSelector: null,\n            currentCategoryId: null,\n            filterUniqId: null,\n            filterCode: null\n        },\n        selectors: {\n            collapseButton: '.am-collapse-icon',\n            filterParent: '.amshopby-filter-parent',\n            inputChecked: 'input[checked]',\n            inputCat: 'input[name^=\"amshopby[cat]\"]',\n            itemsList: '.items',\n            categoryDropdown: '[data-amshopby-js=\"category-dropdown\"]',\n            categoryDropdownElement: '[data-amshopby-js=\"category-dropdown-{id}\"]',\n            filterItems: '[data-amshopby-js=\"filter-items-{code}\"]'\n        },\n        classes: {\n            active: '-active'\n        },\n        mode: {\n            folding: 'folding',\n            dropdown: 'dropdown'\n        },\n\n        /**\n         * inheritDoc\n         *\n         * @private\n         */\n        _create: function () {\n            this._initNodes();\n\n            if (this.isModeDropdown()) {\n                this.processFilterDropdown();\n            }\n\n            this.expandCheckedItem();\n            this.filterCollapseEvent();\n        },\n\n        /**\n         * @private\n         * @return {void}\n         */\n        _initNodes: function () {\n            this.windowElement = $(window);\n            this.documentElement = $(document);\n            this.collapseSelector = $(this.options.collapseSelector + ' ' + this.selectors.collapseButton);\n            this.categoryDropdownBlock = $(this.selectors.categoryDropdownElement\n                    .replace('{id}', this.options.filterUniqId) + ' ' + this.selectors.categoryDropdown);\n        },\n\n        /**\n         * @public\n         * @return {void}\n         */\n        expandCheckedItem: function () {\n            var self = this;\n\n            this.collapseSelector.nextAll(self.selectors.itemsList).each(function () {\n                if($(this).find(self.selectors.inputChecked).length === 0) {\n                    if (self.isModeFolding() && self.isInputChecked($(this))) {\n                        return true;\n                    }\n\n                    $(this).hide();\n                } else {\n                    $(this).prevAll(self.selectors.collapseButton).toggleClass(self.classes.active);\n                }\n            });\n        },\n\n        /**\n         * @public\n         * @return {void}\n         */\n        filterCollapseEvent: function () {\n            var self = this;\n\n            this.collapseSelector.click(function (e) {\n                e.preventDefault();\n                e.stopPropagation();\n                $(this).nextAll(self.selectors.itemsList).toggle();\n                $(this).toggleClass(self.classes.active);\n            });\n        },\n\n        /**\n         * @public\n         * @return {void}\n         */\n        processFilterDropdown: function () {\n            var self = this;\n\n            if (this.options.currentCategoryId) {\n                this.windowElement.on('load', function () {\n                    self.documentElement.trigger('baseCategory', self.options.currentCategoryId);\n                });\n                this.documentElement.ajaxComplete(function () {\n                    self.documentElement.trigger('baseCategory', self.options.currentCategoryId);\n                });\n            }\n\n            this.categoryDropdownBlock.click(function () {\n                $(this).parent().toggleClass(self.classes.active);\n                $(this).parent().find(self.selectors.filterItems.replace('{code}', self.options.filterCode)).toggle();\n            });\n        },\n\n        /**\n         * @public\n         * @return {Boolean}\n         */\n        isModeFolding: function () {\n            return this.options.mode === this.mode.folding;\n        },\n\n        /**\n         * @public\n         * @return {Boolean}\n         */\n        isModeDropdown: function () {\n            return this.options.mode === this.mode.dropdown;\n        },\n\n        /**\n         * @public\n         * @param context\n         * @return {Boolean}\n         */\n        isInputChecked: function (context) {\n            if (this.isModeFolding()) {\n                return context\n                    .siblings(this.selectors.filterParent)\n                    .find(this.selectors.inputCat)\n                    .first()\n                    .prop('checked');\n            }\n\n            if (this.isModeDropdown()) {\n                return context.find(this.selectors.inputChecked).length === 0;\n            }\n        }\n    });\n\n    return $.mage.amShopbyFilterCollapse;\n});\n","Amasty_Shopby/js/components/amShopbyFilterFromTo.js":"/* eslint-disable no-extra-parens */\n/**\n *  Amasty From To Filter\n */\n\ndefine([\n    'jquery',\n    'underscore',\n    'amShopbyFilterAbstract',\n    'amShopbyHelpers',\n    'Magento_Ui/js/modal/modal',\n    'jquery-ui-modules/slider',\n    'mage/tooltip',\n    'mage/validation',\n    'mage/translate',\n    'Amasty_Shopby/js/jquery.ui.touch-punch.min',\n    'Amasty_ShopbyBase/js/chosen/chosen.jquery',\n    'amShopbyFiltersSync'\n], function ($, _, amShopbyFilterAbstract, helpers) {\n    'use strict';\n\n    $.widget('mage.amShopbyFilterFromTo', amShopbyFilterAbstract, {\n        selectors: {\n            dataFromTo: '[data-amshopby-fromto=\"{mode}\"]',\n            range: '.range'\n        },\n        classes: {\n            range: 'range'\n        },\n        from: null,\n        to: null,\n        value: null,\n        timer: null,\n        go: null,\n        skip: false,\n\n        /**\n         * @private\n         * @return {void}\n         */\n        _create: function () {\n            var self = this,\n                dataFromTo = this.selectors.dataFromTo,\n                fromValue,\n                toValue,\n                newValue;\n\n            this.setCurrency(this.options.curRate);\n\n            this.value = this.element.find(dataFromTo.replace('{mode}', 'value'));\n            this.from = this.element.find(dataFromTo.replace('{mode}', 'from'));\n            this.to = this.element.find(dataFromTo.replace('{mode}', 'to'));\n            this.go = this.element.find(dataFromTo.replace('{mode}', 'go'));\n\n            fromValue = this._getInitialRange('from');\n            toValue = this._getInitialRange('to');\n\n            // eslint-disable-next-line operator-assignment\n            this.options.min = this.options.min * this.options.curRate;\n            // eslint-disable-next-line operator-assignment\n            this.options.max = this.options.max * this.options.curRate;\n\n            this.value.on('amshopby:sync_change', self.onSyncChange.bind(this));\n\n            newValue = fromValue + '-' + toValue;\n\n            this.value.trigger('amshopby:sync_change', [ [self.value.val() ? self.value.val() : newValue, true] ]);\n\n            if (this.go.length > 0) {\n                this.go.on('click', self.applyFilter.bind(this));\n            }\n\n            this.changeEvent(this.from, self.onChange.bind(this));\n            this.changeEvent(this.to, self.onChange.bind(this));\n            this.formValidate();\n        },\n\n        /**\n         * @private\n         * @param {String} value - 'from' or 'to'\n         * @returns {String | Number}\n         */\n        _getInitialRange: function (value) {\n            // eslint-disable-next-line no-nested-ternary\n            return this.options[value] ? this.options[value] : (value === 'from' ? this.options.min : this.options.max);\n        },\n\n        /**\n         * @public\n         * @return {void}\n         */\n        formValidate: function () {\n            var self = this,\n                message = $.mage.__('Please enter a valid price range.'),\n                parent;\n\n            self.element.find('form').mage('validation', {\n                errorPlacement: function (error, element) {\n                    parent = element.parent();\n\n                    if (parent.hasClass(self.classes.range)) {\n                        parent.find(self.errorElement + '.' + self.errorClass).remove().end().append(error);\n                    } else {\n                        error.insertAfter(element);\n                    }\n                },\n                messages: {\n                    'am_shopby_filter_widget_attr_price_from': {\n                        'greater-than-equals-to': message,\n                        'validate-digits-range': message\n                    },\n                    'am_shopby_filter_widget_attr_price_to': {\n                        'greater-than-equals-to': message,\n                        'validate-digits-range': message\n                    }\n                }\n            });\n        },\n\n        /**\n         * @public\n         * @param {Object} event\n         * @return {void}\n         */\n        onChange: function (event) {\n            var to = this.to.val() ? this.to.val() : this.options.max,\n                from = this.from.val() ? this.from.val() : this.options.min,\n                hideDigitsAfterDot = this.options.hideDigitsAfterDot,\n                fromToInterval = this.checkFromTo(parseFloat(from).amToFixed(2, hideDigitsAfterDot), parseFloat(to).amToFixed(2, hideDigitsAfterDot)),\n                oldVal = this.value.val(),\n                oldValValues = oldVal.split('-'),\n                newVal = fromToInterval.from.amToFixed(2, hideDigitsAfterDot) + '-' + fromToInterval.to.amToFixed(2, hideDigitsAfterDot),\n                changed = !((fromToInterval.from === Number(oldValValues[0]))\n                    && (fromToInterval.to === Number(oldValValues[1])));\n\n            this.value.val(newVal);\n\n            if (changed) {\n                newVal = fromToInterval.from.amToFixed(2, hideDigitsAfterDot) + '-' + fromToInterval.to.amToFixed(2, hideDigitsAfterDot);\n\n                this.value.val(newVal);\n                this.value.trigger('change');\n                this.value.trigger('sync');\n\n                if (this.go.length === 0) {\n                    this.renderShowButton(event, this.element[0]);\n                    this.applyFilter();\n                }\n            }\n        },\n\n        /**\n         * @public\n         * @param {Object} event\n         * @return {void}\n         */\n        applyFilter: function (event) {\n            var valueFrom = this.processPrice(true, this.from.val()),\n                valueTo = this.processPrice(true, this.to.val()),\n                fromToInterval = this.checkFromTo(valueFrom, valueTo),\n                linkHref = this.options.url\n                    .replace('amshopby_slider_from', fromToInterval.from.amToFixed(2, this.options.hideDigitsAfterDot))\n                    .replace('amshopby_slider_to', fromToInterval.to.amToFixed(2, this.options.hideDigitsAfterDot));\n\n            linkHref = this.getUrlWithDelta(\n                linkHref,\n                valueFrom,\n                this.from.val(),\n                valueTo,\n                this.to.val(),\n                this.options.deltaFrom,\n                this.options.deltaTo\n            );\n\n            if (!this.isBaseCurrency()) {\n                this.setDeltaParams(this.getDeltaParams(this.from.val(), valueFrom, this.to.val(), valueTo, false));\n            }\n\n            this.apply(linkHref);\n\n            if (event) {\n                event.stopPropagation();\n                event.preventDefault();\n            }\n        },\n\n        /**\n         * @public\n         * @param {Object} event\n         * @param {Array} values\n         * @return {void}\n         */\n        onSyncChange: function (event, values) {\n            var abstractWidgetOptions = $.mage.amShopbyFilterAbstract.prototype.options,\n                value = values[0].split('-'),\n                hideDigitsAfterDot = this.options.hideDigitsAfterDot,\n                max = Number(this.options.max).amToFixed(2, hideDigitsAfterDot),\n                min = Number(this.options.min).amToFixed(2, hideDigitsAfterDot),\n                to = max,\n                from = min,\n                i;\n\n            if (!this.isBaseCurrency() && _.isUndefined($.mage.amShopbyAjax)) {\n                abstractWidgetOptions.deltaFrom = Number(this.options.deltaFrom);\n                abstractWidgetOptions.deltaTo = Number(this.options.deltaTo);\n            }\n\n            for (i = 0; i < value.length; i++) {\n                value[i] = this.processPrice(\n                    false,\n                    value[i],\n                    abstractWidgetOptions[i === 0 ? 'deltaFrom' : 'deltaTo']\n                ).amToFixed(2, hideDigitsAfterDot);\n            }\n\n            if (value.length === 2 && (value[0] || value[1])) {\n                from = value[0] === '' ? 0 : parseFloat(value[0]).amToFixed(2, hideDigitsAfterDot);\n                to = (value[1] === 0 || value[1] === '') ? this.options.max : parseFloat(value[1]).amToFixed(2, hideDigitsAfterDot);\n\n                if (this.isDropDown()) {\n                    to = Math.ceil(to);\n                }\n            }\n\n            this.element.find(this.selectors.dataFromTo.replace('{mode}', 'from')).val(from);\n            this.element.find(this.selectors.dataFromTo.replace('{mode}', 'to')).val(to);\n        },\n\n        /**\n         * @public\n         * @param {Number | String} from\n         * @param {Number | String} to\n         * @return {Object}\n         */\n        checkFromTo: function (from, to) {\n            var interval = {},\n                fromOld;\n\n            // eslint-disable-next-line no-param-reassign\n            from = parseFloat(from);\n            // eslint-disable-next-line no-param-reassign\n            to = parseFloat(to);\n\n            interval.from = from < this.options.min ? this.options.min : from;\n            interval.from = interval.from > this.options.max ? this.options.min : interval.from;\n            interval.to = to > this.options.max ? this.options.max : to;\n            interval.to = interval.to < this.options.min ? this.options.max : interval.to;\n\n            if (parseFloat(interval.from) > parseFloat(interval.to)) {\n                fromOld = interval.from;\n\n                interval.from = interval.to;\n                interval.to = fromOld;\n            }\n\n            interval.from = Number(interval.from);\n            interval.to = Number(interval.to);\n\n            return interval;\n        },\n\n        /**\n         * trigger keyup on input with delay\n         *\n         * @param {Object} input\n         * @param {Function} callback\n         * @returns {void}\n         */\n        changeEvent: function (input, callback) {\n            input.on('keyup input', function (event) {\n                if (this.timer !== null) {\n                    clearTimeout(this.timer);\n                }\n\n                if (this.go.length === 0) {\n                    this.timer = setTimeout(callback(event), 1000);\n                } else {\n                    callback(event);\n                }\n            }.bind(this));\n        },\n\n        /**\n         * @public\n         * @return {Boolean}\n         */\n        isSlider: function () {\n            return (typeof this.options.isSlider !== 'undefined' && this.options.isSlider);\n        },\n\n        /**\n         * @public\n         * @return {Boolean}\n         */\n        isDropDown: function () {\n            return (typeof this.options.isDropdown !== 'undefined' && this.options.isDropdown);\n        }\n    });\n\n    return $.mage.amShopbyFilterFromTo;\n});\n","Amasty_Shopby/js/components/amShopbyFilterHideMoreOptions.js":"/**\n *  Amasty Filter Abstract\n */\n\ndefine([\n    'jquery'\n], function ($) {\n    'use strict';\n\n    $.widget('mage.amShopbyFilterHideMoreOptions', {\n        options: {\n            numberUnfoldedOptions: 0,\n            buttonSelector: '',\n            isState: null,\n            isHideCurrent: false\n        },\n        classes: {\n            active: '-active',\n            disabled: '-disabled'\n        },\n        selectors: {\n            filterOptionsContent: '.filter-options-content',\n            filterContainer: '[data-am-js=\"shopby-container\"]',\n            item: '.item',\n            filterItem: '[data-am-js=\"shopby-item\"]',\n            counter: '[data-am-counter=\"counter\"]'\n        },\n\n        /**\n         * @private\n         * @return {void}\n         */\n        _create: function () {\n            var self = this,\n                selectors = this.selectors,\n                buttons = $(self.options.buttonSelector);\n\n            self.parentSelector = !self.options.isState ? selectors.filterOptionsContent : selectors.filterContainer;\n            self.filterItemSelector = !self.options.isState ? selectors.item : selectors.filterItem;\n\n            buttons.each(function () {\n                $(this).addClass(self.isButtonActive($(this)) ? self.classes.active : self.classes.disabled);\n            });\n\n            this.initListeners();\n\n            // for hide in first load\n            buttons.each(function (index, element) {\n                if (!$(element).attr('first_load')) {\n                    $(element).attr('first_load', true);\n                    $(element).click();\n                }\n            });\n        },\n\n        /**\n         * @public\n         * @return {void}\n         */\n        initListeners: function () {\n            var self = this,\n                buttons = $(self.options.buttonSelector);\n\n            $(this.element)\n                .closest(self.selectors.filterOptionsContent)\n                .on('search_active', function () {\n                    if (self.options.isHideCurrent) {\n                        self.toggle(self.options.buttonSelector);\n                    }\n\n                    buttons.removeClass(self.classes.active);\n                });\n\n            $(this.element)\n                .closest(self.selectors.filterOptionsContent)\n                .on('search_inactive', function () {\n                    if (!buttons.hasClass(self.classes.disabled)) {\n                        if (!self.options.isHideCurrent) {\n                            self.toggle(self.options.buttonSelector);\n                        }\n\n                        buttons.addClass(self.classes.active);\n                    }\n                });\n\n            buttons.unbind('click').click(function () {\n                self.toggle(this);\n            });\n        },\n\n        /**\n         * @public\n         * @param {Object} element - jQuery\n         * @return {Boolean}\n         */\n        isButtonActive: function (element) {\n            return element\n                .closest(this.parentSelector)\n                .find(this.filterItemSelector).length > this.options.numberUnfoldedOptions;\n        },\n\n        /**\n         * @public\n         * @param {Object} buttons - jQuery\n         * @return {void}\n         */\n        toggle: function (buttons) {\n            var elements = $(buttons),\n                count;\n\n            if (elements[0].isHideCurrent) {\n                let firstHiddenItem = elements.closest(this.parentSelector)\n                    .find(this.filterItemSelector + ':hidden').first().children('a').first();\n\n                this.showAll(elements);\n                elements.html(elements.attr('data-text-less'));\n                elements.attr({\n                    'data-is-hide': 'false',\n                    'aria-expanded': 'true',\n                    'title': elements.text()\n                });\n\n                firstHiddenItem.focus();\n\n                elements[0].isHideCurrent = false;\n            } else {\n                count = this.hideAll(elements);\n\n                elements.html(elements.attr('data-text-more'));\n                elements.find(this.selectors.counter).html(count);\n                elements.attr({\n                    'data-is-hide': 'true',\n                    'aria-expanded': 'false',\n                    'title': elements.text()\n                });\n\n                elements[0].isHideCurrent = true;\n            }\n        },\n\n        /**\n         * @public\n         * @param {Object} buttons - jQuery\n         * @return {Number}\n         */\n        hideAll: function (buttons) {\n            var self = this,\n                count = 0,\n                hideCount = 0;\n\n            buttons.closest(self.parentSelector).find(self.filterItemSelector).each(function () {\n                if (++count > self.options.numberUnfoldedOptions) {\n                    hideCount++;\n\n                    $(this).hide();\n                }\n            });\n\n            return hideCount;\n        },\n\n        /**\n         * @public\n         * @param {Object} buttons - jQuery\n         * @return {void}\n         */\n        showAll: function (buttons) {\n            buttons.closest(this.parentSelector).find(this.filterItemSelector).show();\n        }\n    });\n\n    return $.mage.amShopbyFilterHideMoreOptions;\n});\n","Amasty_Shopby/js/components/amShopbyFilterSwatch.js":"/**\n *  Amasty Swatch Component\n */\n\ndefine([\n    'jquery',\n    'amShopbyFilterAbstract',\n    'amShopbyFiltersSync'\n], function ($, amShopbyFilterAbstract) {\n    'use strict';\n\n    $.widget('mage.amShopbyFilterSwatch', amShopbyFilterAbstract, {\n        options: {},\n        selectors: {\n            swatchFilterName: '[name=\"amshopby[{value}][]\"]',\n            swatchOption: '.swatch-option'\n        },\n        clickEvent: 'click.amShopbySwatch',\n        classes: {\n            swatchSelected: 'selected'\n        },\n\n        /**\n         * @private\n         * @return {void}\n         */\n        _create: function () {\n            var self = this,\n                inputSelector = this.getInputSelector(),\n                input;\n\n            self.element.find('a').off(self.clickEvent).on(self.clickEvent, function (event) {\n                event.stopPropagation();\n                event.preventDefault();\n\n                input = $(this).siblings(inputSelector);\n\n                input.prop('checked', self.isChecked($(this)) ? 0 : 1);\n                input.trigger('change');\n                input.trigger('sync', true);\n                self.renderShowButton(event, this);\n                self.apply($(this).attr('href'));\n                self.markSelected.bind(self);\n            });\n\n            self.element.find(inputSelector).on('amshopby:sync_change', self.markSelected.bind(self));\n            self.markSelected.bind(self);\n        },\n\n        /**\n         * @public\n         * @return {void}\n         */\n        markSelected: function () {\n            var self = this;\n\n            self.element.find('a').each(function () {\n                $(this)\n                    .find(self.selectors.swatchOption)\n                    .toggleClass(self.classes.swatchSelected, self.isChecked($(this)));\n            });\n        },\n\n        /**\n         * @public\n         * @return {String}\n         */\n        getInputSelector: function () {\n            var value = this.element.closest(this.selectors.filterForm).attr('data-amshopby-filter');\n\n            return this.selectors.swatchFilterName.replace('{value}', value);\n        },\n\n        /**\n         * @public\n         * @param {Object} element - jQuery\n         * @return {Boolean}\n         */\n        isChecked: function (element) {\n            return element.siblings(this.getInputSelector()).prop('checked');\n        }\n    });\n\n    return $.mage.amShopbyFilterSwatch;\n});\n","Amasty_Shopby/js/components/amShopbyFilterItemDefault.js":"define([\n    'jquery',\n    'amShopbyFilterAbstract',\n    'amShopbyFiltersSync'\n], function ($, amShopbyFilterAbstract) {\n    'use strict';\n\n    $.widget('mage.amShopbyFilterItemDefault', amShopbyFilterAbstract, {\n        options: {},\n        selectors: {\n            parent: '.item',\n            checkbox: 'input[type=checkbox], input[type=radio]',\n            nameCategory: '[name=\"amshopby[cat][]\"]'\n        },\n\n        /**\n         * @private\n         * @return {void}\n         */\n        _create: function () {\n            var self = this,\n                link = self.element,\n                parent = link.closest(self.selectors.parent),\n                checkbox = link.siblings(self.selectors.checkbox),\n                params = {\n                    parent: parent,\n                    checkbox: checkbox,\n                    link: link\n                };\n\n            if (link.find(self.selectors.nameCategory).length && parent) {\n                parent = $(null); // get only current category item\n            }\n\n            checkbox.bind('click', params, function (event) {\n                var checkbox = $(this),\n                    link = event.data.link,\n                    href = link.prop('href');\n\n                event.stopPropagation();\n\n                setTimeout(function () {\n                    self.triggerSync(checkbox, !checkbox.prop('checked'));\n\n                    if (self.isFinderAndCategory(checkbox[0])) {\n                        location.href = href;\n\n                        return;\n                    }\n\n                    self.renderShowButton(event, link);\n\n                    self.apply(href);\n                }, 10);\n            });\n\n            link.bind('click', params, function (e) {\n                var element = e.data.checkbox,\n                    href = e.data.link.prop('href');\n\n                e.stopPropagation();\n                e.preventDefault();\n\n                element.prop('checked', !element.prop('checked'));\n                self.triggerSync(element, !element.prop('checked'));\n\n                if (self.isFinderAndCategory(element[0])) {\n                    location.href = href;\n\n                    return;\n                }\n\n                self.renderShowButton(e, element);\n                self.apply(href);\n            });\n\n            parent.off('click').bind('click', params, function (e) {\n                var element = e.data.checkbox,\n                    link = e.data.link;\n\n                e.stopPropagation();\n                e.preventDefault();\n\n                element.prop('checked', !element.prop('checked'));\n                self.triggerSync(element, !element.prop('checked'));\n                self.renderShowButton(e, element);\n                self.apply(link.prop('href'));\n\n                return false;\n            });\n\n            checkbox.on('change', function (e) {\n                self.markAsSelected($(this));\n            });\n\n            checkbox.on('amshopby:sync_change', function (e) {\n                self.markAsSelected($(this));\n            });\n\n            self.markAsSelected(checkbox);\n        },\n\n        /**\n         * @public\n         * @param {Object} element\n         * @param {Boolean} clearFilter\n         * @return {void}\n         */\n        triggerSync: function (element, clearFilter) {\n            element.trigger('change');\n            element.trigger('sync', [clearFilter]);\n        },\n\n        /**\n         * @public\n         * @param {Object} element\n         * @return {Boolean}\n         */\n        isFinderAndCategory: function (element) {\n            return location.href.indexOf('find=') !== -1\n                && element.type === 'radio'\n                && element.name === 'amshopby[cat][]';\n        },\n    });\n\n    return $.mage.amShopbyFilterItemDefault;\n});\n","Amasty_Shopby/js/components/amShopbyStickySidebar.js":"define([\n    'jquery',\n    'underscore',\n    'uiRegistry',\n    'matchMedia'\n], function ($, _, registry, mediaCheck) {\n    'use strict';\n\n    $.widget('mage.amShopbyStickySidebar', {\n        options: {\n            offset: 0,\n            minMegaMenuHeight: 60,\n            filtersOverflowOffset: 20,\n            mediaBreakpoint: '(min-width: 768px)'\n        },\n        classes: {\n            sticky: '-amshopby-sticky'\n        },\n        selectors: {\n            megaMenu: '.ammenu-main-container',\n            swatchOptionsContainer: '[data-am-js=\"swatch-options\"]',\n            swatchTooltip: '.page-with-filter > .swatch-option-tooltip',\n            filterTooltip: '.page-with-filter > .ui-tooltip',\n            filterContent: '.block-content.filter-content',\n            filterOptions: '.filter-options'\n        },\n        nodes: {\n            window: $(window),\n            body: $('body')\n        },\n\n        /**\n         * @private\n         * @return {void}\n         */\n        _create: function () {\n            this._initNodes();\n            this._enableSticky();\n            this._swatchTooltipObserver();\n            this._initFilterOverflow();\n\n            registry.get('index = ammenu_wrapper', function (component) {\n                if (component && (component.is_sticky === 1 || component.is_sticky === 3)) {\n                    this._stickToMegaMenu();\n                }\n            }.bind(this));\n        },\n\n        /**\n         * @private\n         * @return {void}\n         */\n        _initNodes: function () {\n            this.nodes.swatchOptionsContainer = this.element.find(this.selectors.swatchOptionsContainer);\n            this.nodes.filterContent = this.element.find(this.selectors.filterContent);\n            this.nodes.filterOptions = this.nodes.filterContent.find(this.selectors.filterOptions);\n        },\n\n        /**\n         * @private\n         * @return {void}\n         */\n        _initFilterOverflow: function () {\n            var self = this,\n                container = self.nodes.filterContent,\n                filtersBlock = self.nodes.filterOptions,\n                maxHeight;\n\n            if (!container.length && !filtersBlock.length) {\n                return;\n            }\n\n            maxHeight = container.height() - filtersBlock.height() + self.options.filtersOverflowOffset;\n\n            mediaCheck({\n                media: self.options.mediaBreakpoint,\n                entry: function () {\n                    filtersBlock.css('maxHeight', 'calc(100vh - ' + maxHeight + 'px)');\n                },\n                exit: function () {\n                    filtersBlock.css('maxHeight', '');\n                }\n            });\n        },\n\n        /**\n         * @private\n         * @return {void}\n         */\n        _swatchTooltipObserver: function () {\n            var self = this,\n                swatchOptionsContainer = self.nodes.swatchOptionsContainer,\n                swatchTooltip = null,\n                isHovered = false;\n\n            if (!swatchOptionsContainer.length) {\n                return;\n            }\n\n            swatchOptionsContainer.hover(function () {\n                isHovered = true;\n            }, function () {\n                isHovered = false;\n            });\n\n            self.nodes.filterOptions.on('touchstart touchmove scroll', function () {\n                self._scrollCallback(isHovered, swatchTooltip);\n            });\n\n            self.nodes.window.on('touchstart touchmove scroll', function () {\n                self._scrollCallback(isHovered, swatchTooltip);\n            });\n        },\n\n        /**\n         * @private\n         * @return {void}\n         */\n        _scrollCallback: _.throttle(function (isHovered, swatchTooltip) {\n            $(this.selectors.filterTooltip).hide();\n\n            if (!isHovered) {\n                return false;\n            }\n\n            if (!swatchTooltip) {\n                // eslint-disable-next-line no-param-reassign\n                swatchTooltip = $(this.selectors.swatchTooltip);\n            }\n\n            swatchTooltip.hide();\n\n            return true;\n        }, 100),\n\n        /**\n         * @private\n         * @return {void}\n         */\n        _enableSticky: function () {\n            this.element.addClass(this.classes.sticky);\n            this.nodes.body.addClass(this.classes.sticky);\n        },\n\n        /**\n         * @private\n         * @return {void}\n         */\n        _stickToMegaMenu: function () {\n            var megaMenuBlock = $(this.selectors.megaMenu),\n                observer;\n\n            if (!('ResizeObserver' in window)) {\n                this.element.css('top', this.options.minMegaMenuHeight + this.options.offset);\n\n                return;\n            }\n\n            observer = new ResizeObserver(this._resizeCallback.bind(this));\n\n            if (megaMenuBlock.length) {\n                observer.observe(megaMenuBlock[0]);\n            }\n        },\n\n        /**\n         * @private\n         * @param {Array} entries\n         * @return {void}\n         */\n        _resizeCallback: function (entries) {\n            this.element.css('top', entries[0].contentRect.height + this.options.offset);\n        }\n    });\n\n    return $.mage.amShopbyStickySidebar;\n});\n","Amasty_Shopby/js/components/amShopbyFilterDropdown.js":"/**\n *  Amasty Filter Dropdown Component\n */\n\ndefine([\n    'jquery',\n    'mage/translate',\n    'amShopbyFilterAbstract',\n    'Amasty_Shopby/js/jquery.ui.touch-punch.min',\n    'Amasty_ShopbyBase/js/chosen/chosen.jquery',\n    'amShopbyFiltersSync'\n], function ($, $t, amShopbyFilterAbstract) {\n    'use strict';\n\n    $.widget('mage.amShopbyFilterDropdown', amShopbyFilterAbstract, {\n        options: {\n            isMultiselect: false,\n            placeholderText: $t('Select Options'),\n            selectedOptions: []\n        },\n\n        /**\n         * @private\n         * @return {void}\n         */\n        _create: function () {\n            var self = this,\n                selectElement = self.element;\n\n            self.processSelectedOptions();\n\n            if (self.options.isMultiselect) {\n                selectElement.chosen({\n                    width: '100%',\n                    placeholder_text: self.options.placeholderText\n                });\n            } else {\n                selectElement.trigger('sync');\n            }\n\n            self.initListeners();\n        },\n        /**\n         * @public\n         * @return {void}\n         */\n        initListeners: function () {\n            var self = this,\n                selectElement = self.element,\n                target,\n                value;\n\n            selectElement.change(function (event, elem) {\n                if (self.options.isMultiselect) {\n                    elem = elem ? elem : $(event.target);\n                    value = elem.selected ? elem.selected : elem.deselected;\n                    target = $(event.target).parent();\n                } else {\n                    target = selectElement[0];\n                    value = selectElement.val();\n                }\n\n                selectElement.trigger('sync', [!value]);\n\n                self.renderShowButton(event, target);\n                self.apply(selectElement.find('option[value=\"' + value + '\"]').data('url'));\n            });\n        },\n\n        /**\n         * @public\n         * @return {void}\n         */\n        processSelectedOptions: function () {\n            var self = this,\n                selectedLength,\n                i;\n\n            this.options.selectedOptions[this.element[0].name] = [];\n\n            if (this.element[0].selectedOptions && this.element[0].selectedOptions.length) {\n                selectedLength = self.element[0].selectedOptions.length;\n\n                for (i = 0; i < selectedLength; i++) {\n                    self.options.selectedOptions[self.element[0].name].push(self.element[0].selectedOptions[i].value);\n                }\n            }\n        }\n    });\n\n    return $.mage.amShopbyFilterDropdown;\n});\n","Amasty_Shopby/js/components/amShopbySwiperSlider.js":"/**\n * Swiper Slider Init\n */\n\ndefine([\n    'swiper',\n    'domReady!'\n], function (Swiper) {\n    'use strict';\n\n    return function (config, element) {\n        new Swiper(element, config);\n    };\n});\n","Amasty_Shopby/js/components/amShopbyFilterSlider.js":"/**\n * Price filter Slider\n */\n\ndefine([\n    'jquery',\n    'amShopbyFilterAbstract',\n    'amshopby_color',\n    'amShopbyHelpers',\n    'jquery-ui-modules/slider',\n    'mage/tooltip',\n    'amShopbyFiltersSync'\n], function ($, amShopbyFilterAbstract, colorHelper, helpers) {\n    'use strict';\n\n    $.widget('mage.amShopbyFilterSlider', amShopbyFilterAbstract, {\n        options: {\n            gradients: {}\n        },\n        selectors: {\n            value: '[data-amshopby-slider-id=\"value\"]',\n            range: '.ui-slider-range',\n            slider: '[data-amshopby-slider-id=\"slider\"]',\n            display: '[data-amshopby-slider-id=\"display\"]',\n            container: '[data-am-js=\"slider-container\"]',\n            tooltip: '[data-amshopby-js=\"slider-tooltip\"]',\n            corner: '[data-amshopby-js=\"slider-corner\"]',\n            handle: '.ui-slider-handle',\n            topNav: '.amasty-catalog-topnav'\n        },\n        classes: {\n            tooltip: 'amshopby-slider-tooltip',\n            corner: 'amshopby-slider-corner',\n            styleDefault: '-default',\n            loaded: '-loaded'\n        },\n        attributes: {\n            tooltip: 'slider-tooltip',\n            corner: 'slider-corner'\n        },\n        slider: null,\n        value: null,\n        display: null,\n\n        /**\n         * @inheritDoc\n         */\n        _create: function () {\n            helpers.jqueryWidgetCompatibility(\n                'jquery/ui-modules/widgets/slider',\n                'slider',\n                function () {\n                    this._initializeWidget();\n                }.bind(this)\n            );\n\n            $.mage.amShopbyFilterAbstract.prototype.setCollectFilters(this.options.collectFilters);\n        },\n\n        /**\n         * @private\n         * @returns {void}\n         */\n        _initializeWidget: function () {\n            var hideDigitsAfterDot = this.options.hideDigitsAfterDot,\n                fromLabel = Number(this._getInitialFromTo('from')).amToFixed(2, hideDigitsAfterDot),\n                toLabel = Number(this._getInitialFromTo('to')).amToFixed(2, hideDigitsAfterDot);\n\n            this.setCurrency(this.options.curRate);\n            this._initNodes();\n            this._initColors();\n\n            if (this.options.to) {\n                this.value.val(fromLabel + '-' + toLabel);\n            } else {\n                this.value.trigger('change');\n                this.value.trigger('sync');\n            }\n\n            fromLabel = this.processPrice(false, fromLabel, this.options.deltaFrom).amToFixed(2, hideDigitsAfterDot);\n            toLabel = this.processPrice(false, toLabel, this.options.deltaTo).amToFixed(2, hideDigitsAfterDot);\n\n            this._initSlider(fromLabel, toLabel);\n            this._renderLabel(fromLabel, toLabel);\n            this._setTooltipValue(this.slider, fromLabel, toLabel);\n            this.value.on('amshopby:sync_change', this._onSyncChange.bind(this));\n\n            if (this.options.hideDisplay) {\n                this.display.hide();\n            }\n        },\n\n        /**\n         * @private\n         * @param {String} value - 'from' or 'to'\n         * @returns {String | Number}\n         */ // eslint-disable-next-line consistent-return\n        _getInitialFromTo: function (value) {\n            // eslint-disable-next-line default-case\n            switch (value) {\n                case 'from':\n                    return this.options.from && this.options.from >= this.options.min\n                        ? this.options.from\n                        : this.options.min;\n                case 'to':\n                    return this.options.to && this.options.to <= this.options.max\n                        ? this.options.to\n                        : this.options.max;\n            }\n        },\n\n        /**\n         * @private\n         * @returns {void}\n         */\n        _initNodes: function () {\n            this.value = this.element.find(this.selectors.value);\n            this.slider = this.element.find(this.selectors.slider);\n            this.display = this.element.find(this.selectors.display);\n        },\n\n        /**\n         * @private\n         * @returns {void}\n         */\n        _initColors: function () {\n            var colors = this.options.colors,\n                mainColor = colors.main,\n                gradients = this.options.gradients;\n\n            gradients.vertical = colorHelper.getGradient(mainColor, 'vertical');\n            gradients.horizontal = colorHelper.getGradient(mainColor, 'horizontal');\n\n            colors.shadow = colorHelper.getShadow(mainColor);\n            colors.hover = colorHelper.getHover(mainColor);\n        },\n\n        /**\n         * @private\n         * @param {Number} fromLabel\n         * @param {Number} toLabel\n         * @returns {void}\n         */\n        _initSlider: function (fromLabel, toLabel) {\n            this.slider.slider({\n                step: (this.options.step ? this.options.step : 1) * +this.options.curRate,\n                range: true,\n                min: this.options.min * +this.options.curRate,\n                max: this.options.max * +this.options.curRate,\n                values: [+fromLabel, +toLabel],\n                slide: this._onSlide.bind(this),\n                change: this._onChange.bind(this)\n            });\n\n            this.handles = this.element.find(this.selectors.handle);\n            this.range = this.element.find(this.selectors.range);\n\n            if (this._isNotDefaultSlider()) {\n                this._renderTooltips();\n            }\n\n            switch (this.options.style) {\n                case '-volumetric':\n                    this._initVolumetric();\n                    break;\n                case '-improved':\n                    this._initImproved();\n                    break;\n                case '-light':\n                    this._initLight();\n                    break;\n                case '-dark':\n                    this._initDark();\n                    break;\n                default:\n                    this._initDefault();\n                    break;\n            }\n\n            this._initHandles();\n            this.slider.addClass(this.classes.loaded);\n        },\n\n        /**\n         * @private\n         * @returns {void}\n         */\n        _initVolumetric: function () {\n            $(this.tooltips).css({\n                'background': this.options.gradients.horizontal\n            });\n\n            $(this.tooltipCorners).css({\n                'background': this.options.gradients.horizontal,\n                'border-color': this.options.colors.main\n            });\n\n            $(this.handles).css({\n                'background': this.options.gradients.vertical,\n                'box-shadow': this.options.colors.shadow\n            });\n\n            $(this.range).css({\n                'background': this.options.gradients.horizontal\n            });\n        },\n\n        /**\n         * @private\n         * @returns {void}\n         */\n        _initImproved: function () {\n            $(this.tooltips).css({\n                'background': this.options.colors.main,\n                'border-color': this.options.colors.main\n            });\n\n            $(this.tooltipCorners).css({\n                'background': this.options.colors.main,\n                'border-color': this.options.colors.main\n            });\n\n            $(this.handles).css({\n                'background': this.options.colors.main\n            });\n\n            $(this.range).css({\n                'background': this.options.colors.main\n            });\n        },\n\n        /**\n         * @private\n         * @returns {void}\n         */\n        _initDark: function () {\n            $(this.tooltips).css({\n                'background': this.options.colors.main,\n                'border-color': this.options.colors.main\n            });\n\n            $(this.tooltipCorners).css({\n                'background': this.options.colors.main,\n                'border-color': this.options.colors.main\n            });\n\n            $(this.handles).css({\n                'background': this.options.colors.main,\n                'box-shadow': this.options.colors.shadow\n            });\n\n            $(this.range).css({\n                'background': this.options.colors.main\n            });\n        },\n\n        /**\n         * @private\n         * @returns {void}\n         */\n        _initLight: function () {\n            $(this.tooltips).css({\n                'color': this.options.colors.main\n            });\n\n            $(this.range).css({\n                'background': this.options.colors.main\n            });\n        },\n\n        /**\n         * @private\n         * @returns {void}\n         */\n        _initDefault: function () {\n            $(this.handles).css({\n                'background': this.options.colors.main\n            });\n        },\n\n        /**\n         * @private\n         * @returns {void}\n         */\n        _initHandles: function () {\n            var self = this,\n                handles = self.handles,\n                sliderStyle = self.options.style,\n                mainColor = handles.css('background-color');\n\n            if (sliderStyle === '-light') {\n                mainColor = handles.css('border-color');\n            }\n\n            if (sliderStyle === '-volumetric') {\n                mainColor = handles.css('background-image');\n            }\n\n            handles.on('mouseover', function () {\n                if (self.options.style === '-light') {\n                    $(this).css({\n                        'border-color': self.options.colors.hover\n                    });\n                } else {\n                    $(this).css({\n                        'background': self.options.colors.hover\n                    });\n                }\n            });\n\n            handles.on('mouseout', function () {\n                if (self.options.style === '-light') {\n                    $(this).css({\n                        'border-color': mainColor\n                    });\n                } else {\n                    $(this).css({\n                        'background': mainColor\n                    });\n                }\n            });\n        },\n\n        /**\n         * @private\n         * @returns {Boolean}\n         */\n        _isNotDefaultSlider: function () {\n            return this.options.style !== this.classes.styleDefault;\n        },\n\n        /**\n         * @private\n         * @param {Object} event\n         * @param {Object} ui\n         * @returns {Boolean}\n         */\n        _onChange: function (event, ui) {\n            var rate;\n\n            if (this.slider.skipOnChange !== true) {\n                rate = $(ui.handle).closest(this.selectors.container).data('rate');\n\n                this._setValue(\n                    Number(ui.values[0]).amToFixed(2, this.options.hideDigitsAfterDot),\n                    Number(ui.values[1]).amToFixed(2, this.options.hideDigitsAfterDot),\n                    true,\n                    rate\n                );\n            }\n\n            return true;\n        },\n\n        /**\n         * @private\n         * @param {Object} event\n         * @param {Object} ui\n         * @returns {Boolean}\n         */\n        _onSlide: function (event, ui) {\n            var valueFrom = this._parseValue(ui.values[0]),\n                valueTo = this._parseValue(ui.values[1]);\n\n            this._setValue(valueFrom, valueTo, false);\n            this._renderLabel(valueFrom, valueTo);\n\n            this._setTooltipValue(event.target, valueFrom, valueTo);\n\n            return true;\n        },\n\n        /**\n         * @private\n         * @param {Object} event\n         * @param {Array} values\n         * @returns {void}\n         */\n        _onSyncChange: function (event, values) {\n            var value = values[0].split('-'),\n                valueFrom,\n                valueTo;\n\n            if (value.length === 2) {\n                valueFrom = this._parseValue(value[0]);\n                valueTo = this._parseValue(value[1]);\n\n                this.slider.skipOnChange = true;\n\n                this.slider.slider('values', [valueFrom, valueTo]);\n                this._setValueWithoutChange(valueFrom, valueTo);\n                this._setTooltipValue(this.slider, valueFrom, valueTo);\n                this.slider.skipOnChange = false;\n            }\n        },\n\n        /**\n         * @private\n         * @param {Number} from\n         * @param {Number} to\n         * @param {Boolean} apply\n         * @returns {void}\n         */\n        _setValue: function (from, to, apply) {\n            var valueFrom = this._parseValue(this.processPrice(true, from)),\n                valueTo = this._parseValue(this.processPrice(true, to)),\n                newValue,\n                changedValue,\n                linkHref;\n\n            newValue = valueFrom + '-' + valueTo;\n            changedValue = this.value.val() !== newValue;\n\n            this.value.val(newValue);\n\n            if (!this.isBaseCurrency()) {\n                this.setDeltaParams(this.getDeltaParams(from, valueFrom, to, valueTo, false));\n            }\n\n            if (changedValue) {\n                this.value.trigger('change');\n                this.value.trigger('sync');\n            }\n\n            if (apply !== false) {\n                newValue = valueFrom + '-' + valueTo;\n                linkHref = this.options.url\n                    .replace('amshopby_slider_from', valueFrom)\n                    .replace('amshopby_slider_to', valueTo);\n\n                linkHref = this.getUrlWithDelta(\n                    linkHref,\n                    valueFrom,\n                    from,\n                    valueTo,\n                    to,\n                    this.options.deltaFrom,\n                    this.options.deltaTo\n                );\n\n                this.value.val(newValue);\n                $.mage.amShopbyFilterAbstract.prototype.renderShowButton(0, this.element[0]);\n                $.mage.amShopbyFilterAbstract.prototype.apply(linkHref);\n            }\n        },\n\n        /**\n         * @private\n         * @param {Number} from\n         * @param {Number} to\n         * @returns {void}\n         */\n        _setValueWithoutChange: function (from, to) {\n            this.value.val(this._parseValue(from) + '-' + this._parseValue(to));\n        },\n\n        /**\n         * @private\n         * @param {String} from\n         * @param {String} to\n         * @returns {String}\n         */\n        _getLabel: function (from, to) {\n            return this.options.template.replace('{from}', from.toString()).replace('{to}', to.toString());\n        },\n\n        /**\n         * @private\n         * @param {Number} from\n         * @param {Number} to\n         * @returns {void}\n         */\n        _renderLabel: function (from, to) {\n            var valueFrom = this._parseValue(from),\n                valueTo = this._parseValue(to);\n\n            this.display.html(this._getLabel(valueFrom, valueTo));\n        },\n\n        /**\n         * @private\n         * @returns {Object}\n         */\n        _getTooltip: function () {\n            return $('<span>', {\n                'class': this.classes.tooltip,\n                'data-amshopby-js': this.attributes.tooltip\n            });\n        },\n\n        /**\n         * @private\n         * @returns {Object}\n         */\n        _getCorner: function () {\n            return $('<span>', {\n                'class': this.classes.corner,\n                'data-amshopby-js': this.attributes.corner\n            });\n        },\n\n        /**\n         * @private\n         * @returns {void}\n         */\n        _renderTooltips: function () {\n            this.handles.prepend(this._getTooltip());\n            this.handles.prepend(this._getCorner());\n            this.tooltips = this.handles.find(this.selectors.tooltip);\n            this.tooltipCorners = this.handles.find(this.selectors.corner);\n        },\n\n        /**\n         * @private\n         * @param {Object} element\n         * @param {String} from\n         * @param {String} to\n         * @returns {void}\n         */\n        _setTooltipValue: function (element, from, to) {\n            var handle = this.selectors.handle,\n                tooltip = this.selectors.tooltip,\n                currencySymbol = this.options.currencySymbol,\n                currencyPosition = parseInt(this.options.currencyPosition),\n                valueFrom = this._parseValue(from),\n                valueTo = this._parseValue(to),\n                firstElement = $(element).find(handle + ':first-of-type ' + tooltip),\n                lastElement = $(element).find(handle + ':last-of-type ' + tooltip);\n\n            if (!this._isNotDefaultSlider()) {\n                return;\n            }\n\n            if (currencyPosition) {\n                firstElement.html(valueFrom + currencySymbol);\n                lastElement.html(valueTo + currencySymbol);\n            } else {\n                firstElement.html(currencySymbol + valueFrom);\n                lastElement.html(currencySymbol + valueTo);\n            }\n\n            this._setTooltipOffset(firstElement, 'left');\n            this._setTooltipOffset(lastElement, 'right');\n        },\n\n        /**\n         * @private\n         * @param {Object} tooltip - jQuery Element\n         * @param {String} side - 'right' or 'left'\n         * @returns {void}\n         */\n        _setTooltipOffset: function (tooltip, side) {\n            var width = tooltip.width() / 2,\n                sliderWidth = tooltip.closest(this.selectors.slider)[0].clientWidth,\n                parent = tooltip.parent(),\n                parentOffset = parent[0].offsetLeft,\n                volumetricStyleOffset = this.options.style === '-volumetric' ? 3 : 0,\n                offset,\n                isFixed;\n\n            offset = side === 'right' ? sliderWidth - parentOffset : parentOffset;\n\n            offset += volumetricStyleOffset;\n\n            isFixed = offset < width || width < 0;\n\n            if (tooltip.closest(this.selectors.topNav) && width < 0) {\n                parent.on('hover.amShopby', function () {\n                    this._setTooltipOffset(tooltip, side);\n                    parent.off('hover.amShopby');\n                }.bind(this));\n            }\n\n            tooltip.css(side, isFixed ? -(offset > 3 ? offset : 3 + volumetricStyleOffset) : 'unset');\n        },\n\n        /**\n         * @private\n         * @param {String | Number} value\n         * @returns {String}\n         */\n        _parseValue: function (value) {\n            return parseFloat(value).amToFixed(2, this.options.hideDigitsAfterDot);\n        },\n\n        /**\n         * @private\n         * @param {String} value\n         * @returns {String}\n         */\n        _replacePriceDelimiter: function (value) {\n            return value.replace('.', ',');\n        }\n    });\n\n    return $.mage.amShopbyFilterSlider;\n});\n","Amasty_Shopby/js/components/amShopbyFilterSearch.js":"/**\n *  Amasty Search Component\n */\n\ndefine([\n    'jquery',\n    'amShopbyFiltersSync'\n], function ($) {\n    'use strict';\n\n    $.widget('mage.amShopbyFilterSearch', {\n        options: {\n            highlightTemplate: '',\n            itemsSelector: ''\n        },\n        selectors: {\n            item: '.item',\n            swatchLink: '.am-swatch-link',\n            filterOptionsContent: '.filter-options-content',\n            filterContainer: '[data-am-js=\"shopby-container\"]',\n            label: '.label'\n        },\n        classes: {\n            hidden: '-amshopby-hidden'\n        },\n        previousSearch: '',\n\n        /**\n         * @private\n         * @return {void}\n         */\n        _create: function () {\n            var self = this,\n                items = $(this.options.itemsSelector\n                    + ' ' + this.selectors.item +  ', ' + this.options.itemsSelector + ' ' + this.selectors.swatchLink);\n\n            $(self.element).keyup(function () {\n                self.search(this.value, items);\n            });\n        },\n\n        /**\n         * @public\n         * @param {String} searchText\n         * @param {Object} items\n         * @return {void}\n         */\n        search: function (searchText, items) {\n            var self = this,\n                value,\n                parentSelector = !self.options.isState\n                    ? self.selectors.filterOptionsContent : self.selectors.filterContainer;\n\n            searchText = searchText.toLowerCase();\n\n            if (searchText === self.previousSearch) {\n                return;\n            }\n\n            self.previousSearch = searchText;\n\n            if (searchText !== '') {\n                $(self.element).trigger('search_active');\n            }\n\n            items.each(function (key, item) {\n                if (item.hasAttribute('data-label')) {\n                    value = item.getAttribute('data-label').toLowerCase();\n\n                    if (!value || value.indexOf(searchText) > -1) {\n                        if (searchText !== '' && value.indexOf(searchText) > -1) {\n                            self.highlight(item, searchText);\n                        } else {\n                            self.unHighlight(item);\n                        }\n\n                        $(item).parent().removeClass(self.classes.hidden);\n                        $(item).show();\n                        $(item).parentsUntil(parentSelector).show();\n                    } else {\n                        self.unHighlight(item);\n                        $(item).parent().addClass(self.classes.hidden);\n                        $(item).hide();\n                    }\n                }\n            });\n\n            if (searchText === '') {\n                $(self.element).trigger('search_inactive');\n            }\n        },\n\n        /**\n         * @public\n         * @param {Object} element\n         * @param {String} searchText\n         * @return {void}\n         */\n        highlight: function (element, searchText) {\n            var target = $(element).find('a').length !== 0 ? $(element).find('a') : $(element),\n                label = $(element).attr('data-label'),\n                newLabel = label.replace(new RegExp(searchText, 'gi'), this.options.highlightTemplate);\n\n            this.unHighlight(element);\n            target.find(this.selectors.label).html(newLabel);\n        },\n\n        /**\n         * @public\n         * @param {Object} element\n         * @return {void}\n         */\n        unHighlight: function (element) {\n            var target = $(element).find('a').length !== 0 ? $(element).find('a') : $(element),\n                label = $(element).attr('data-label');\n\n            target.find(this.selectors.label).html(label);\n        }\n    });\n\n    return $.mage.amShopbyFilterSearch;\n});\n","Amasty_Shopby/js/components/amShopbyFilterCategory.js":"/**\n *  Amasty Filter Category Component\n */\n\ndefine([\n    'jquery',\n    'amShopbyFilterAbstract',\n    'amShopbyFiltersSync'\n], function ($, amShopbyFilterAbstract) {\n    'use strict';\n\n    $.widget('mage.amShopbyFilterCategory', amShopbyFilterAbstract, {\n        options: {\n            type: null,\n            collectFilters: null,\n            clearUrl: null\n        },\n        selectors: {\n            items: '.items',\n            parent: '.item',\n            radioButton: 'input[type=radio]',\n            checkboxButton: 'input[type=checkbox]',\n            checkbox: 'input[type=checkbox], input[type=radio]'\n        },\n\n        /**\n         * @private\n         * @return {void}\n         */\n        _create: function () {\n            var self = this,\n                parent = $(self.element.parents(self.selectors.parent)[0]),\n                checkbox = self.element.siblings(self.selectors.checkbox);\n\n            this.initEventListeners();\n            this.addListenerOnCheckbox(checkbox, parent);\n            this.markAsSelected(checkbox);\n        },\n\n        /**\n         * @public\n         * @return {void}\n         */\n        initEventListeners: function () {\n            var self = this,\n                link = self.element,\n                parent = $(link.parents(self.selectors.parent)[0]),\n                checkbox = link.siblings(self.selectors.checkbox),\n                params = {\n                    parent: parent,\n                    checkbox: checkbox,\n                    link: link\n                },\n                element,\n                href;\n\n            parent.off('click').on('click', params, function (event) {\n                element = event.data.checkbox;\n                href = event.data.link.prop('href');\n\n                event.stopPropagation();\n                event.preventDefault();\n\n                if ($(this).find(self.selectors.radioButton)[0] && location.href.indexOf('find=') !== -1) {\n                    location.href = href;\n\n                    return;\n                }\n\n                element.prop('checked', !element.prop('checked'));\n                self.triggerSync(element, !element.prop('checked'));\n                self.renderShowButton(event, element);\n                self.apply(href);\n                self.togglingTree(event.data.parent, self.isTypeFolding() ? false : element.prop('checked'));\n            });\n\n            checkbox.on('change', function () {\n                self.markAsSelected($(this));\n            });\n\n            checkbox.on('amshopby:sync_change', function () {\n                self.markAsSelected($(this));\n            });\n        },\n\n        /**\n         * @public\n         * @param {Object} element - jQuery\n         * @param {Boolean} clearFilter\n         * @return {void}\n         */\n        triggerSync: function (element, clearFilter) {\n            element.trigger('change');\n            element.trigger('sync', [clearFilter]);\n        },\n\n        /**\n         * @public\n         * @param {Object} element - jQuery\n         * @param {Boolean} isChecked\n         * @return {void}\n         */\n        togglingTree: function (element, isChecked) {\n            if (this.isTypeFolding()) {\n                element\n                    .find(this.selectors.items + ' ' + this.selectors.checkboxButton)\n                    .prop('checked', false);\n            }\n\n            element\n                .parents(this.selectors.parent)\n                .find('> a ' + this.selectors.checkboxButton).prop('checked', isChecked);\n        },\n\n        /**\n         * @public\n         * @return {Boolean}\n         */\n        isTypeFolding: function () {\n            return this.options.type === 'labelsFolding';\n        }\n    });\n\n    return $.mage.amShopbyFilterCategory;\n});\n","Amasty_Shopby/js/components/amShopbyFilterFlyout.js":"/**\n * Filter fly-out mode\n */\n\ndefine([\n    'jquery',\n    'matchMedia',\n    'mage/menu'\n], function ($) {\n    'use strict';\n\n    $.widget('mage.amShopbyFilterFlyout', {\n        options: {\n            currentCategoryId: null\n        },\n        mediaBreakpoint: 'all and (min-width: 768px)',\n        triggerType: 'baseCategory',\n        classes: {\n            jet: 'amasty-jet-theme'\n        },\n        positions: {\n            'desktop': {\n                my: 'left top',\n                at: 'right top-13',\n                collision: 'flipfit'\n            },\n            'mobile': {\n                my: 'center top',\n                at: 'center bottom'\n            },\n            'jet': {\n                at: 'right+5 top-6'\n            }\n        },\n\n        /**\n         * inheritDoc\n         *\n         * @private\n         */\n        _create: function () {\n            this._initNodes();\n            this._setPositionForJetTheme();\n            this._initEvents();\n        },\n\n        /**\n         * @private\n         */\n        _initNodes: function () {\n            this.document = $(document);\n            this.body = $('body');\n        },\n\n        /**\n         * @private\n         */\n        _initEvents: function () {\n            var self = this;\n\n            self.document.trigger(self.triggerType, self.options.currentCategoryId);\n            self._addFlyOut();\n\n            self.document.ajaxComplete(function () {\n                self._addFlyOut();\n                self.document.trigger(self.triggerType, self.options.currentCategoryId);\n            });\n        },\n\n        /**\n         * @private\n         */\n        _addFlyOut: function () {\n            this.element.menu({ position: this.positions[this._checkScreenSize() ? 'desktop' : 'mobile'] });\n        },\n\n        /**\n         * @private\n         * @returns {Boolean}\n         */\n        _checkScreenSize: function () {\n            return matchMedia(this.mediaBreakpoint).matches;\n        },\n\n        /**\n         * @private\n         */\n        _setPositionForJetTheme: function () {\n            if (this.body.hasClass(this.classes.jet)) {\n                this.positions.desktop.at = this.positions.jet.at;\n            }\n        }\n    });\n\n    return $.mage.amShopbyFilterFlyout;\n});\n","Amasty_Shopby/js/components/amShopbySwatchTooltip.js":"/**\n * Magento Swatch Tooltip Init\n */\n\ndefine([\n    'jquery',\n    'Magento_Swatches/js/swatch-renderer'\n], function ($) {\n    'use strict';\n\n    return function (config, element) {\n        $(element).SwatchRendererTooltip(config);\n    };\n});\n","Amasty_Shopby/js/components/amShopbyFilterAddTooltip.js":"/**\n *  Amasty Add Tooltip Component\n */\n\ndefine([\n    'jquery',\n    'mage/tooltip'\n], function ($) {\n    'use strict';\n\n    $.widget('mage.amShopbyFilterAddTooltip', {\n        options: {\n            content: '',\n            tooltipTemplate: ''\n        },\n        selectors: {\n            optionsTitle: '.filter-options-title',\n            optionsItem: '.filter-options-item',\n            tooltip: '.tooltip'\n        },\n\n        /**\n         * @private\n         * @return {void}\n         */\n        _create: function () {\n            var template = $(this.options.tooltipTemplate.replaceAll('{content}', this.options.content)),\n                place = $(this.element).parents(this.selectors.optionsItem).find(this.selectors.optionsTitle);\n\n            if (place.length === 0) {\n                place = $(this.element).parents('dd').prev('dt');\n            }\n\n            if (place.length > 0 && !place.find(this.selectors.tooltip).length) {\n                place.append(template);\n\n                template.tooltip({\n                    position: {\n                        my: 'left bottom-10',\n                        at: 'left top',\n                        collision: 'flipfit flip',\n                        using: function (position, feedback) {\n                            $(this).css(position);\n                            $('<div>')\n                                .addClass('arrow')\n                                .addClass(feedback.vertical)\n                                .addClass(feedback.horizontal)\n                                .appendTo(this);\n                        }\n                    },\n                    content: function () {\n                        return $(this).prop('title');\n                    }\n                });\n            }\n        }\n    });\n\n    return $.mage.amShopbyFilterAddTooltip;\n});\n","Amasty_Shopby/js/components/amShopbyFilterCategoryDropdown.js":"/**\n *  Amasty Filter Category Dropdown Component\n */\n\ndefine([\n    'jquery',\n    'amShopbyFilterAbstract',\n    'amShopbyFiltersSync'\n], function ($, amShopbyFilterAbstract) {\n    'use strict';\n\n    $.widget('mage.amShopbyFilterCategoryDropdown', amShopbyFilterAbstract, {\n        options: {},\n        classes: {\n            itemRemoved: 'amshopby-item-removed'\n        },\n\n        /**\n         * @private\n         * @return {void}\n         */\n        _create: function () {\n            var self = this,\n                element = self.element;\n\n            element.click(function (e) {\n                e.preventDefault();\n                e.stopPropagation();\n\n                element.parent().addClass(self.classes.itemRemoved);\n                element.trigger('sync');\n                self.renderShowButton(e, element);\n                self.apply(element.data('remove-url'), true);\n            });\n        }\n    });\n\n    return $.mage.amShopbyFilterCategoryDropdown;\n});\n","Amasty_Shopby/js/mixins/slider.js":"define([ 'jquery' ], function ($) {\n    'use strict'; // eslint-disable-line\n\n    var mixin = {\n        /**\n         * OVERRIDE\n         *\n         * @inheritDoc\n         */\n        _calculateNewMax: function () {\n            var max = this.options.max,\n                min = this._valueMin(),\n                step = this.options.step,\n                aboveMin = ( max - min ) / step * step;\n\n            max = aboveMin + min;\n\n            if ( max > this.options.max ) {\n                // If max is not divisible by step, rounding off may increase its value\n                max -= step;\n            }\n\n            this.max = parseFloat(max.toFixed( this._precision()));\n        }\n    };\n\n    return function (target) {\n        $.widget('ui.slider', target, mixin);\n\n        return $.ui.slider;\n    };\n});\n","Amasty_Customform/js/form-init.js":"define([\n    'jquery',\n    'jquery-ui-modules/tabs',\n    'jquery/validate'\n], function ($) {\n    'use strict';\n\n    $.widget('mage.amFormInit', {\n        options: {\n            formSelector: '[data-amcform-js=\"multi-page\"]',\n            nextButton: '[data-amcform-js=\"next-button\"]',\n            prevButton: '[data-amcform-js=\"prev-button\"]',\n            pageTitles: '[data-amcform-js=\"page-titles\"]'\n        },\n\n        _create: function () {\n            var self = this;\n\n            // Call initialization for Ajax events\n            $(document).on('amcform-init-multipage', function (e, form) {\n                var $form = form.find('[data-amcform-js=\"multi-page\"]');\n\n                if ($form.length) {\n                    self.initialization($form);\n                }\n            });\n\n            self.initialization(self.element);\n        },\n\n        initialization: function (element) {\n            var self = this,\n                stepsWrap = element.find(self.options.pageTitles);\n\n            $.ui.tabs({active: 0}, element);\n\n            if (stepsWrap.children().length === 1) {\n                stepsWrap.remove();\n            }\n\n            $(self.options.pageTitles).children().each(function (index) {\n                if (index !== 0) {\n                    $(this).addClass('-disabled');\n                }\n            });\n\n            self.nextButtonBehavior();\n            self.prevButtonBehavior();\n            self.navigatePageForm();\n        },\n\n        /**\n         *  Behavior for next button: go to the next page\n         */\n\n        nextButtonBehavior: function () {\n            var self = this;\n\n            $(self.options.nextButton).off().on('click', function () {\n                var pageId = $(this).parents('.amcform-page-wrap').attr('id'),\n                    title = $(this)\n                        .parents(self.options.formSelector)\n                        .find('[href=\"#' + pageId + '\"]')\n                        .parent();\n\n                if ($(this).parents('form').valid()) {\n                    self.checkFormScrolling(this);\n                    title.addClass('-done');\n                    title.removeClass('-error');\n                    title.next().removeClass('-disabled').find('a').trigger('click');\n                } else {\n                    title.addClass('-error');\n                }\n            });\n        },\n\n        /**\n         *  Behavior for prev button: go to the prev page\n         */\n\n        prevButtonBehavior: function () {\n            var self = this;\n\n            $(self.options.prevButton).off().on('click', function () {\n                self.checkFormScrolling(this);\n                var pageId = $(this).parents('.amcform-page-wrap').attr('id'),\n                    title = $(this)\n                        .parents(self.options.formSelector)\n                        .find('[href=\"#' + pageId + '\"]')\n                        .parent();\n                title.prev().find('a').trigger('click');\n            });\n        },\n\n        /**\n         *  Style behavior of page headers\n         */\n\n        navigatePageForm: function () {\n            var self = this;\n\n            $(self.options.pageTitles).find('li').off().on('click', function () {\n                if ($(this).hasClass('-disabled')) {\n                    return\n                }\n\n                if ($(this).hasClass('-done')) {\n                    $(this).removeClass('-done').addClass('-active');\n                }\n\n                if ($(this).prevUntil().hasClass('-active')) {\n                    $(this).prevUntil().removeClass('-active').addClass('-done');\n                }\n\n                self.updatePages(\n                    $(this).parents(self.options.formSelector),\n                    $(this).find('a')\n                );\n            });\n        },\n\n        /**\n         * Fix default scrolling in the browser\n         * @param page - DOM element\n         */\n\n        checkFormScrolling: function (page) {\n            var form = $(page).parents('[data-amcform-js=\"multi-page\"]'),\n                docViewTop = $(window).scrollTop(),\n                elemTop = form.offset().top,\n                isPopup = form.parents('.amform-popup').length;\n\n            if (docViewTop > elemTop && !isPopup) {\n                $('html, body').animate({\n                    scrollTop: (form.offset().top) - 50\n                },0);\n            }\n        },\n\n        /**\n         * Set class for not current pages for ignore jquery validate\n         * @param form\n         * @param pageTitle\n         */\n\n        updatePages: function (form, pageTitle) {\n            form.find('input, textarea').addClass('amcform-hidden-page');\n            form\n                .find(pageTitle.attr('href') + ' input, ' + pageTitle.attr('href') + ' textarea')\n                .removeClass('amcform-hidden-page');\n        }\n    });\n\n    return $.mage.amFormInit;\n});\n","Amasty_Customform/js/form-data.js":"define([\n    \"jquery\",\n    'Amasty_Customform/js/form-builder',\n    'Amasty_Customform/js/form-render',\n    'Amasty_Customform/js/am-google-map'\n], function ($, customFormBuilder) {\n    'use strict';\n\n    $.widget('mage.amformData', {\n        _create: function () {\n            var self = this;\n\n            self.options.formWrapper = $('[data-amcform-js=\"form-builder-wrap\"]');\n            self.options.formEditor = $('[data-amcform-js=\"fb-editor\"]');\n            self.options.addNewPage = $('[data-amcform-js=\"add-new-page\"]');\n            self.options.deletePage = '[data-amcform-js=\"delete-tab\"]';\n\n            self.generateEventsListener();\n\n            self.options.formEditor.customFormBuilder(self.options);\n        },\n\n        /**\n         * Set events listeners on form builder\n         */\n\n        generateEventsListener: function () {\n            var self = this,\n                tabsWrap = '[data-amcform-js=\"tabs-wrap\"]',\n                tab = '[data-amcform-role=\"page-link\"]',\n                tabForKeyboard = tab + ', [data-amcform-role=\"page\"], [data-amcform-js=\"add-new-page\"]',\n                formJson = '[name=\"form_json\"]',\n                keyCodes = [$.ui.keyCode.RIGHT, $.ui.keyCode.DOWN, $.ui.keyCode.LEFT, $.ui.keyCode.UP];\n\n            // jQ UI tabs\n            self.options.formWrapper.tabs({\n                beforeActivate: function (event, ui) {\n                    if (ui.newPanel.selector === \"#new-page\") {\n                        return false;\n                    }\n                }\n            });\n\n            // Save form config\n            $('#edit_form').on('beforeSubmit', function (event, submitData, handlerName) {\n                if (['saveAndContinueEdit', 'save'].indexOf(handlerName) != -1) {\n                    self.options.formEditor.customFormBuilder('generateSaveEvent', event);\n                }\n            });\n\n            // Switch between page tabs\n            $(tabsWrap).on('click', tab, function () {\n                self.options.formEditor.customFormBuilder('navigatePageForm', this);\n            });\n\n            // Switch between tpage tabs via keyboard\n            $(tabsWrap).on('keydown', tabForKeyboard, function (event) {\n                if (keyCodes.indexOf(event.keyCode) != -1) {\n                    self.options.formEditor.customFormBuilder('navigateKeyboard', this);\n                }\n            });\n\n            // Delete page\n            $(tabsWrap).on('click', self.options.deletePage, function (e) {\n                self.options.formEditor.customFormBuilder('deleteCurentPage', this, e);\n            });\n\n            // Add new page\n            self.options.addNewPage.on('click', function () {\n                $(formJson).val('[]');\n                self.options.formEditor.customFormBuilder('createNewPage');\n            });\n        }\n    });\n\n    return $.mage.amformData;\n});\n","Amasty_Customform/js/form-builder-helper.js":"/* eslint-disable one-var, vars-on-top, max-depth, no-shadow */\n\ndefine([\n    'jquery',\n    'underscore',\n    'mage/adminhtml/events',\n    'mage/adminhtml/wysiwyg/tiny_mce/setup',\n    'Magento_Ui/js/modal/modal'\n], function ($, _) {\n    'use strict';\n\n    // compatibility for M244\n    var tinymce = window.tinymce;\n\n    if (_.isUndefined(tinymce)) {\n        return;\n    }\n\n    if (!('remove' in Element.prototype)) {\n        Element.prototype.remove = function () {\n            if (this.parentNode) {\n                this.parentNode.removeChild(this);\n            }\n        };\n    }\n\n    // Event polyfill\n    if (typeof Event !== 'function') {\n        (function () {\n            window.Event = function (evt) {\n                var event = document.createEvent('Event');\n\n                event.initEvent(evt, true, true);\n                return event;\n            };\n        })();\n    }\n\n    // Object.assign polyfill\n    if (typeof Object.assign != 'function') {\n        Object.assign = function (target) {\n            'use strict';\n\n            if (target === null) {\n                throw new TypeError('Cannot convert undefined or null to object');\n            }\n\n            target = Object(target);\n\n            for (var index = 1; index < arguments.length; index++) {\n                var source = arguments[index];\n\n                if (source !== null) {\n                    for (var key in source) {\n                        if (Object.prototype.hasOwnProperty.call(source, key)) {\n                            target[key] = source[key];\n                        }\n                    }\n                }\n            }\n            return target;\n        };\n    }\n\n    var _typeof = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? function (obj) {\n        return typeof obj;\n    } : function (obj) {\n        return obj && typeof Symbol === 'function' && obj.constructor === Symbol\n            && obj !== Symbol.prototype ? 'symbol' : typeof obj;\n    },\n\n     fbUtils = {};\n\n    // cleaner syntax for testing indexOf element\n    fbUtils.inArray = function (needle, haystack) {\n        return haystack.indexOf(needle) !== -1;\n    };\n\n    /**\n     * Remove null or undefined values\n     * @param  {Object} attrs {attrName: attrValue}\n     * @return {Object} Object trimmed of null or undefined values\n     */\n    fbUtils.trimObj = function (attrs) {\n        var xmlRemove = [null, undefined, false, 'false'];\n\n        for (var attr in attrs) {\n            if (fbUtils.inArray(attrs[attr], xmlRemove)) {\n                delete attrs[attr];\n            } else if (Array.isArray(attrs[attr])) {\n                if (!attrs[attr].length) {\n                    delete attrs[attr];\n                }\n            }\n        }\n\n        return attrs;\n    };\n\n    /**\n     * Test if attribute is a valid HTML attribute\n     * @param  {String} attr\n     * @return {Boolean}\n     */\n    fbUtils.validAttr = function (attr) {\n        var invalid = [\n            'values',\n            'enableOther',\n            'other',\n            'label',\n            // 'style',\n            'subtype'\n        ];\n\n        return !fbUtils.inArray(attr, invalid);\n    };\n\n    /**\n     * Convert an attrs object into a string\n     *\n     * @param  {Object} attrs object of attributes for markup\n     * @return {string}\n     */\n    fbUtils.attrString = function (attrs) {\n        var attributes = [];\n\n        for (var attr in attrs) {\n            if (attr === 'map_position' || attr === 'zoom') {\n                continue;\n            }\n\n            if (attrs.hasOwnProperty(attr) && fbUtils.validAttr(attr)) {\n                attr = fbUtils.safeAttr(attr, attrs[attr]);\n                attributes.push(attr.name + attr.value);\n            }\n        }\n        return attributes.join(' ');\n    };\n\n    /**\n     * Convert attributes to markup safe strings\n     * @param  {String} name  attribute name\n     * @param  {String} value attribute value\n     * @return {Object} {attrName: attrValue}\n     */\n    fbUtils.safeAttr = function (name, value) {\n        name = fbUtils.safeAttrName(name);\n\n        if (value) {\n            if (Array.isArray(value)) {\n                value = value.join(' ');\n            } else if (typeof value === 'boolean') {\n                value = value.toString();\n            }\n        }\n\n        value = value ? '=\"' + value + '\"' : '';\n\n        return {\n            name: name,\n            value: value\n        };\n    };\n\n    fbUtils.safeAttrName = function (name) {\n        var safeAttr = {\n            className: 'class'\n        };\n\n        return safeAttr[name] || fbUtils.hyphenCase(name);\n    };\n\n    /**\n     * Convert strings into lowercase-hyphen\n     *\n     * @param  {String} str\n     * @return {String}\n     */\n    fbUtils.hyphenCase = function (str) {\n        str = str.replace(/[^\\w\\s\\-]/gi, '');\n        str = str.replace(/([A-Z])/g, function ($1) {\n            return '-' + $1.toLowerCase();\n        });\n\n        return str.replace(/\\s/g, '-').replace(/^-+/g, '');\n    };\n\n    /**\n     * convert a hyphenated string to camelCase\n     * @param  {String} str\n     * @return {String}\n     */\n    fbUtils.camelCase = function (str) {\n        return str.replace(/-([a-z])/g, function (m, w) {\n            return w.toUpperCase();\n        });\n    };\n\n    /**\n     * Generate markup wrapper where needed\n     *\n     * @param  {string} tag\n     * @return {String}\n     */\n    fbUtils.markup = function (tag) {\n        var content = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '',\n         attrs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n\n         contentType = void 0,\n            field = document.createElement(tag),\n\n            getContentType = function getContentType(content) {\n                return Array.isArray(content)\n                    ? 'array' : typeof content === 'undefined' ? 'undefined' : _typeof(content);\n            },\n\n            appendContent = {\n                string: function string(content) {\n                    field.innerHTML = content;\n                },\n                object: function object(content) {\n                    return field.appendChild(content);\n                },\n                array: function array(content) {\n                    for (var i = 0; i < content.length; i++) {\n                        contentType = getContentType(content[i]);\n                        appendContent[contentType](content[i]);\n                    }\n                }\n            };\n\n        for (var attr in attrs) {\n            if (attrs.hasOwnProperty(attr)) {\n                var name = fbUtils.safeAttrName(attr);\n\n                field.setAttribute(name, attrs[attr]);\n            }\n        }\n\n        contentType = getContentType(content);\n\n        if (content) {\n            appendContent[contentType].call(this, content);\n        }\n\n        return field;\n    };\n\n    /**\n     * Convert html element attributes to key/value object\n     * @return {Object} ex: {attrName: attrValue}\n     * @param {Object} elem\n     */\n    fbUtils.parseAttrs = function (elem) {\n        var attrs = elem.attributes,\n         data = {};\n\n        fbUtils.forEach(attrs, function (attr) {\n            var attrVal = attrs[attr].value;\n\n            if (attrVal.match(/false|true/g)) {\n                attrVal = attrVal === 'true';\n            } else if (attrVal.match(/undefined/g)) {\n                attrVal = undefined;\n            }\n\n            if (attrVal) {\n                data[attrs[attr].name] = attrVal;\n            }\n        });\n\n        return data;\n    };\n\n    /**\n     * Convert field options to optionData\n     * @return {Array} optionData array\n     * @param {Object} field\n     */\n    fbUtils.parseOptions = function (field) {\n        var options = field.getElementsByTagName('option'),\n            optionData = {},\n            data = [];\n\n        if (options.length) {\n            for (var i = 0; i < options.length; i++) {\n                optionData = fbUtils.parseAttrs(options[i]);\n                optionData.label = options[i].textContent;\n                data.push(optionData);\n            }\n        }\n\n        return data;\n    };\n\n    /**\n     * Parse XML formData\n     * @param  {String} xmlString\n     * @return {Array} formData array\n     */\n    fbUtils.parseXML = function (xmlString) {\n        var parser = new window.DOMParser(),\n            xml = parser.parseFromString(xmlString, 'text/xml'),\n            formData = [];\n\n        if (xml) {\n            var fields = xml.getElementsByTagName('field');\n\n            for (var i = 0; i < fields.length; i++) {\n                var fieldData = fbUtils.parseAttrs(fields[i]);\n\n                if (fields[i].children.length) {\n                    fieldData.values = fbUtils.parseOptions(fields[i]);\n                }\n\n                formData.push(fieldData);\n            }\n        }\n\n        return formData;\n    };\n\n    /**\n     * Escape markup, so it can be displayed rather than rendered\n     * @param  {String} html markup\n     * @return {String} escaped html\n     */\n    fbUtils.escapeHtml = function (html) {\n        var escapeElement = document.createElement('textarea');\n\n        escapeElement.textContent = html;\n\n        return escapeElement.innerHTML;\n    };\n\n    // Escape an attribute\n    fbUtils.escapeAttr = function (str) {\n        var match = {\n            '\"': '&quot;',\n          //  '&': '&amp;',\n            '<': '&lt;',\n            '>': '&gt;'\n        };\n\n        function replaceTag(tag) {\n            return match[tag] || tag;\n        }\n\n        return typeof str === 'string' ? str.replace(/[\"&<>]/g, replaceTag) : str;\n    };\n\n    // Escape attributes\n    fbUtils.escapeAttrs = function (attrs) {\n        for (var attr in attrs) {\n            if (attrs.hasOwnProperty(attr)) {\n                attrs[attr] = fbUtils.escapeAttr(attrs[attr]);\n            }\n        }\n\n        return attrs;\n    };\n\n    // forEach that can be used on nodeList\n    fbUtils.forEach = function (array, callback, scope) {\n        for (var i = 0; i < array.length; i++) {\n            callback.call(scope, i, array[i]); // passes back stuff we need\n        }\n    };\n\n    /**\n     * Remove duplicates from an array of elements\n     * @return {Array} array with only unique values\n     * @param {Array} array\n     */\n    fbUtils.unique = function (array) {\n        return array.filter(function (elem, pos, arr) {\n            return arr.indexOf(elem) === pos;\n        });\n    };\n\n    /**\n     * Generate preview markup\n     * @param {object} fieldData\n     * @param {object} opts\n     * @return {string} preview markup for field\n     */\n    fbUtils.fieldRender = function (fieldData, opts) {\n        var preview = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false,\n            utils = fbUtils;\n\n        fieldData.placeholder = fieldData.placeholder\n            ? fbUtils.cutJs(utils.escapeAttr(fieldData.placeholder))\n            : '';\n        fieldData.label = fieldData.label\n            ? fbUtils.cutJs(utils.escapeAttr(fieldData.label))\n            : '';\n\n        var fieldMarkup = '',\n            fieldLabel = '',\n            optionsMarkup = '',\n            fieldLabelText = fieldData.label || '',\n            fieldDesc = fieldData.description || '',\n            fieldRequired = '',\n            fieldValue = fieldData.value,\n            fieldOptions = fieldData.values;\n\n        fieldData.name = preview ? fieldData.name + '-preview' : fieldData.name;\n        fieldData.id = fieldData.name;\n        fieldData.name = fieldData.multiple ? fieldData.name + '[]' : fieldData.name;\n        if (utils.inArray(\n            fieldData.type,\n            ['textinput', 'number', 'file', 'dropdown', 'listbox', 'textarea']\n        ) && fieldData.className !== 'form-control'\n        ) {\n            fieldData.className += ' form-control';\n        }\n\n        fieldData.type = fieldData.subtype || fieldData.type;\n        if (fieldData.type === 'datetime') {\n            fieldData.type = 'datetime-local';\n        }\n\n        if (fieldData.required) {\n            fieldData.required = null;\n            fieldData['aria-required'] = 'true';\n            fieldRequired = '<span class=\"required\">*</span>';\n        }\n\n        if (fieldData.type !== 'hidden') {\n            if (fieldDesc) {\n                fieldDesc = '<span class=\"tooltip-element\" tooltip=\"' + fieldDesc + '\">?</span>';\n            }\n\n            fieldLabel = '<label for=\"' + fieldData.id + '\" class=\"fb-' + fieldData.type + '-label\">'\n                + fieldLabelText + ' ' + fieldRequired + ' ' + fieldDesc + '</label>';\n        }\n\n        var fieldLabelVal = fieldData.label;\n\n        delete fieldData.label;\n        delete fieldData.description;\n\n        if (fieldData.type === 'wysiwyg'\n            || fieldData.type === 'textarea'\n            || fieldData.type === 'rich-text'\n        ) {\n            delete fieldData.value;\n        }\n\n        var fieldDataString = fbUtils.attrString(fieldData),\n\n        /* rendering text fields*/\n         withBr = true;\n\n        switch (fieldData.type) {\n            case 'text':\n                fieldData.type = 'div';\n                break;\n            case 'hone':\n                fieldData.type = 'h1';\n                break;\n            case 'htwo':\n                fieldData.type = 'h2';\n                break;\n            case 'hthree':\n                fieldData.type = 'h3';\n                break;\n            case 'checkboxtwo':\n                fieldData.type = 'checkbox';\n                withBr = false;\n                break;\n            case 'radiotwo':\n                fieldData.type = 'radio';\n            // eslint-disable-next-line no-fallthrough\n            case 'rating':\n                withBr = false;\n                break;\n            case 'listbox':\n                fieldData.type = 'dropdown';\n                fieldData.multiple = true;\n                break;\n            case 'wysiwyg':\n                fieldData.type = 'wysiwyg';\n                break;\n        }\n\n        switch (fieldData.type) {\n            case 'wysiwyg':\n                fieldMarkup = '<textarea ' + fieldDataString + '>' + (fieldValue || '') + '</textarea>';\n                break;\n            case 'textarea':\n            case 'rich-text':\n                delete fieldData.type;\n                var fieldVal = fieldValue || '';\n\n                fieldMarkup = fieldLabel + '<textarea ' + fieldDataString + '>' + fieldVal + '</textarea>';\n                break;\n            case 'dropdown':\n                var optionAttrsString;\n\n                fieldData.type = fieldData.type.replace('-group', '');\n\n                if (fieldOptions) {\n\n                    if (fieldData.placeholder) {\n                        optionsMarkup += '<option disabled selected>' + fieldData.placeholder + '</option>';\n                    }\n\n                    for (var i = 0; i < fieldOptions.length; i++) {\n                        if (!fieldOptions[i].selected || fieldData.placeholder) {\n                            delete fieldOptions[i].selected;\n                        }\n\n                        var optionLabel = fieldOptions[i].label\n                            ? fbUtils.cutJs(fieldOptions[i].label)\n                            : '';\n\n                        optionAttrsString = fbUtils.attrString(fieldOptions[i]);\n                        optionsMarkup += '<option ' + optionAttrsString + '>' + optionLabel + '</option>';\n                    }\n                }\n\n                fieldMarkup = fieldLabel + '<select ' + fieldDataString + '>' + optionsMarkup + '</select>';\n                break;\n            case 'checkbox':\n            case 'radio':\n            case 'rating':\n                var optionAttrs = void 0,\n                    ratingClass = '';\n\n                fieldData.type = fieldData.type.replace('-group', '');\n\n                if (fieldData.type === 'rating') {\n                    fieldData.type = 'radio';\n                    ratingClass = 'amform-rating-container ';\n                    fieldOptions = fieldOptions.reverse();\n                }\n\n                if (fieldData.type === 'checkbox' || fieldData.type === 'checkboxtwo') {\n                    fieldData.name += '[]';\n                }\n\n                if (fieldOptions) {\n                    var _optionAttrsString = void 0;\n\n                    for (var _i = 0; _i < fieldOptions.length; _i++) {\n                        optionAttrs = Object.assign({value: '', label: ''}, fieldData, fieldOptions[_i]);\n\n                        if (optionAttrs.value) {\n                            if (optionAttrs.selected) {\n                                delete optionAttrs.selected;\n                                optionAttrs.checked = null;\n                            }\n\n                            optionAttrs.id = fieldData.id + '-' + _i;\n                            _optionAttrsString = fbUtils.attrString(optionAttrs);\n\n                            var br = '',\n                             classNameLabel = ' class=\"amform-versiontwo-label\"';\n\n                            if (withBr) {\n                                br = '<br>';\n                                // eslint-disable-next-line no-use-before-define\n                                className = '';\n                            }\n\n                            var labelText = ratingClass ? '' : optionAttrs.label;\n                            let inputAsString = '<input ' + _optionAttrsString + '/' + '> <label for=\"'\n                                + optionAttrs.id + '\" ' + classNameLabel + '>'\n                                + fbUtils.cutJs(labelText) + '</label>' + br;\n\n                            if (optionAttrs.name.startsWith('checkboxtwo') || optionAttrs.name.startsWith('radiotwo')) {\n                                inputAsString = `<div class=\"amform-groupv2\">${inputAsString}</div>`;\n                            }\n\n                            optionsMarkup += inputAsString;\n                        }\n\n                    }\n\n                    if (fieldData.other) {\n                        var otherOptionAttrs = {\n                            id: fieldData.id + '-' + 'other',\n                            className: fieldData.className + ' other-option',\n                            onclick: 'fbUtils.otherOptionCB(\\'' + fieldData.id + '-other\\')'\n                        };\n\n                        _optionAttrsString = fbUtils.attrString(Object.assign({}, fieldData, otherOptionAttrs));\n\n                        // eslint-disable-next-line max-len\n                        optionsMarkup += '<input ' + _optionAttrsString + '/' + '>'\n                            + '<label for=\"' + otherOptionAttrs.id + '\">'\n                            + opts.messages.other + '</label> <input type=\"text\" name=\"'\n                            + fieldData.name + '\" id=\"' + otherOptionAttrs.id\n                            + '-value\" class=\"amform-no-display\"' + '/' + '>';\n                    }\n                }\n\n                fieldMarkup = fieldLabel + '<div class=\"' + ratingClass + fieldData.type + '-group\">'\n                    + optionsMarkup + '</div>';\n                break;\n            case 'textinput':\n            case 'password':\n            case 'email':\n            case 'number':\n            case 'file':\n            case 'hidden':\n            case 'date':\n            case 'time':\n            case 'datetime-local':\n            case 'daterange':\n            case 'tel':\n            case 'autocomplete':\n                fieldMarkup = fieldLabel + ' <input ' + fieldDataString + '>';\n                break;\n            case 'color':\n                fieldMarkup = fieldLabel + ' <input ' + fieldDataString + '> ' + opts.messages.selectColor;\n                break;\n            case 'button':\n            case 'submit':\n                fieldMarkup = '<button ' + fieldDataString + '>' + fieldLabelVal + '</button>';\n                break;\n            case 'googlemap':\n                fieldMarkup = fieldLabel + ' <input ' + fieldDataString + '><div class=\"map\"></div>';\n                break;\n            default:\n                fieldMarkup = '<' + fieldData.type + ' ' + fieldDataString + '>' + fieldLabelVal + '</' + fieldData.type + '>';\n        }\n\n        if (fieldData.type !== 'hidden') {\n            var className = fieldData.id ? 'fb-' + fieldData.type + ' form-group field-' + fieldData.id : '';\n\n            className += ' amform-layout-' + fieldData.layout;\n            fieldMarkup = fbUtils.markup('div', fieldMarkup, {\n                className: className\n            });\n        } else {\n            fieldMarkup = fbUtils.markup('input', null, fieldData);\n        }\n\n        if (fieldData.type === 'googlemap') {\n            var position = null,\n                zoom = 1,\n                oldMapSelector = '.' + fieldMarkup.className.replace(/\\s+/g, '.'),\n                oldMap = $(oldMapSelector);\n\n            if (oldMap.length > 0\n                && $.data(oldMap[0], 'mage-amGoogleMap')\n            ) {\n                position = oldMap.amGoogleMap('getPosition');\n                zoom = oldMap.amGoogleMap('getZoom');\n            } else if (fieldData.map_position) {\n                var lat = _.isUndefined(fieldData.map_position.lat) ? 0 : parseFloat(fieldData.map_position.lat),\n                    lng = _.isUndefined(fieldData.map_position.lng) ? 0 : parseFloat(fieldData.map_position.lng);\n\n                position = {\n                    'lat': lat,\n                    'lng': lng\n                };\n                zoom = fieldData.zoom;\n            }\n            $(fieldMarkup).amGoogleMap({\n                'position': position,\n                'zoom': zoom\n            });\n        }\n\n        return fieldMarkup;\n    };\n\n    /**\n     * Listen to create or init wysiwyg editor\n     *\n     * @param  {String} selector - css selector of the target type='wysiwyg'\n     * @param  {String} html - wysiwyg content\n     * @param  {Object} wysiwygConfig - wysiwyg config\n     * @returns {void}\n     */\n    fbUtils.wysiwygListener = function (selector, html, wysiwygConfig) {\n        var editors = Object.keys(tinymce.EditorManager.editors);\n\n        if (tinymce.EditorManager.editors.length && editors.includes(selector)) {\n            fbUtils.setWysiwygContent(selector, html);\n            fbUtils.refreshWysiwyg(selector);\n        } else {\n            fbUtils.createWysiwyg(selector, html, wysiwygConfig);\n        }\n    };\n\n    /**\n     * @param  {String} selector - css selector of the target type='wysiwyg'\n     * @param  {String} html - wysiwyg content\n     * @param  {Object} wysiwygConfig - wysiwyg config\n     * @returns {void}\n     */\n    fbUtils.createWysiwyg = function (selector, html, wysiwygConfig) {\n        // eslint-disable-next-line new-cap,no-undef\n        var wysiwyg = new wysiwygSetup(selector, _.extend(wysiwygConfig, {\n            'width': '100%',\n            'height': '200px'\n        }));\n\n        wysiwyg.setup('exact');\n        fbUtils.setWysiwygContent(selector, html);\n    };\n\n    /**\n     * @param  {String} selector - css selector of the target type='wysiwyg'\n     * @returns {void}\n     */\n    fbUtils.refreshWysiwyg = function (selector) {\n        tinymce.EditorManager.execCommand('mceRemoveEditor', true, selector);\n        tinymce.EditorManager.execCommand('mceAddEditor', true, selector);\n    };\n\n    /**\n     * @param  {String} selector - css selector of the target type='wysiwyg'\n     * @param  {String} html - wysiwyg content\n     * @returns {void}\n     */\n    fbUtils.setWysiwygContent = function (selector, html) {\n        $('.amform-wysiwyg#' + selector).html(html);\n    };\n\n    /**\n     * Callback for other option.\n     * Toggles the hidden text area for \"other\" option.\n     * @param  {String} otherId id of the \"other\" option input\n     */\n    fbUtils.otherOptionCB = function (otherId) {\n        var otherInput = document.getElementById(otherId),\n            otherInputValue = document.getElementById(otherId + '-value');\n\n        if (otherInput.checked) {\n            otherInput.style.display = 'none';\n            otherInputValue.style.display = 'inline-block';\n        } else {\n            otherInput.style.display = 'inline-block';\n            otherInputValue.style.display = 'none';\n        }\n    };\n\n    /**\n     * Capitalizes a string\n     * @param  {String} str uncapitalized string\n     * @return {String} str capitalized string\n     */\n    fbUtils.capitalize = function (str) {\n        return str.replace(/\\b\\w/g, function (m) {\n            return m.toUpperCase();\n        });\n    };\n\n    fbUtils.cutJs = function (str) {\n        return str.replace(/<\\/?script.*?>/ig, '');\n    };\n\n    'use strict';\n\n    function formBuilderHelpersFn(opts, formBuilder) {\n\n\n        var _helpers = {\n            doCancel: false\n        },\n         utils = fbUtils;\n\n        // eslint-disable-next-line no-use-before-define\n        formBuilder.events = formBuilderEventsFn();\n\n        _helpers.wysiwygHtmlCache = {};\n\n        /**\n         * Convert converts messy `cl#ssNames` into valid `class-names`\n         *\n         * @param  {string} str\n         * @return {string}\n         */\n        _helpers.makeClassName = function (str) {\n            str = str.replace(/[^\\w\\s\\-]/gi, '');\n            return utils.hyphenCase(str);\n        };\n\n        /**\n         * Add a mobile class\n         *\n         * @return {string}\n         */\n        _helpers.mobileClass = function () {\n            var mobileClass = '';\n\n            (function (a) {\n                // eslint-disable-next-line max-len\n                if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0, 4))) {\n                    mobileClass = ' fb-mobile';\n                }\n            })(navigator.userAgent || navigator.vendor || window.opera);\n            return mobileClass;\n        };\n\n        /**\n         * Callback for when a drag begins\n         *\n         * @param  {Object} event\n         * @param  {Object} ui\n         */\n        _helpers.startMoving = function (event, ui) {\n            ui.item.show().addClass('moving');\n            _helpers.startIndex = $('li', this).index(ui.item);\n        };\n\n        /**\n         * Callback for when a drag ends\n         *\n         * @param  {Object} event\n         * @param  {Object} ui\n         */\n        _helpers.stopMoving = function (event, ui) {\n            var wysiwygElement = ui.item.find('.amform-wysiwyg[type=\"wysiwyg\"]');\n\n            if (wysiwygElement.length) {\n                fbUtils.refreshWysiwyg(wysiwygElement.attr('id'));\n            }\n\n            ui.item.removeClass('moving');\n\n            if (_helpers.doCancel || $(event.target).hasClass('frmb-control')) {\n                $(ui.sender).sortable('cancel');\n                $(this).sortable('cancel');\n            }\n\n            _helpers.save();\n            _helpers.doCancel = false;\n        };\n\n        /**\n         * Callback for when the user stopped sorting\n         *\n         * @param  {Object} event\n         * @param  {Object} ui\n         */\n        _helpers.update = function (event, ui) {\n            if (_helpers.doCancel) {\n                return false;\n            }\n\n            if (ui.item.parent()[0] === formBuilder.sortableFields[0]) {\n                formBuilder.processControl(ui.item);\n                _helpers.doCancel = true;\n            } else {\n                _helpers.setFieldOrder(event.target);\n                _helpers.doCancel = !opts.sortableControls;\n            }\n        };\n\n        /**\n         * jQuery UI sortable beforeStop callback used for both lists.\n         * Logic for canceling the sort or drop.\n         */\n        _helpers.beforeStop = function (event, ui) {\n            var form = document.getElementById(opts.formID),\n                lastIndex = form.children.length - 1,\n                cancelArray = [];\n\n            _helpers.stopIndex = ui.placeholder.index() - 1;\n\n            if (!opts.sortableControls && ui.item.parent().hasClass('frmb-control')) {\n                cancelArray.push(true);\n            }\n\n            if (opts.prepend) {\n                cancelArray.push(_helpers.stopIndex === 0);\n            }\n\n            if (opts.append) {\n                cancelArray.push(_helpers.stopIndex + 1 === lastIndex);\n            }\n\n            _helpers.doCancel = cancelArray.some(function (elem) {\n                return elem === true;\n            });\n        };\n\n        /**\n         * Make strings safe to be used as classes\n         *\n         * @param  {string} str string to be converted\n         * @return {string}     converter string\n         */\n        _helpers.safename = function (str) {\n            return str.replace(/\\s/g, '-')\n                .replace(/[^a-zA-Z0-9\\-]/g, '')\n                .toLowerCase();\n        };\n\n        /**\n         * Strips non-numbers from a number only input\n         *\n         * @param  {string} str string with possible number\n         * @return {string}     string without numbers\n         */\n        _helpers.forceNumber = function (str) {\n            return str.replace(/[^0-9]/g, '');\n        };\n\n        /**\n         * hide and show mouse tracking tooltips, only used for disabled\n         * fields in the editor.\n         *\n         * @todo   remove or refactor to make better use\n         * @param  {Object} tt jQuery option with nexted tooltip\n         * @return {void}\n         */\n        _helpers.initTooltip = function (tt) {\n            var tooltip = tt.find('.tooltip');\n\n            tt.mouseenter(function () {\n                if (tooltip.outerWidth() > 200) {\n                    tooltip.addClass('max-width');\n                }\n                tooltip.css('left', tt.width() + 14);\n                tooltip.stop(true, true).fadeIn('fast');\n            }).mouseleave(function () {\n                tt.find('.tooltip').stop(true, true).fadeOut('fast');\n            });\n\n            tooltip.hide();\n        };\n\n        /**\n         * Attempts to get element type and subtype\n         *\n         * @param  {Object} $field\n         * @return {Object}\n         */\n        _helpers.getTypes = function ($field) {\n            var types = {\n                    type: $field.attr('type')\n                },\n                subtype = $('.fld-subtype', $field).val();\n\n            if (subtype !== types.type) {\n                types.subtype = subtype;\n            }\n\n            return types;\n        };\n\n        /**\n         * Get option data for a field\n         * @param  {Object} field jQuery field object\n         * @return {Array}        Array of option values\n         */\n        _helpers.fieldOptionData = function (field) {\n            var options = [];\n\n            $('.sortable-options li', field).each(function () {\n                var $option = $(this),\n                    selected = $('.option-selected', $option).is(':checked'),\n                    attrs = {\n                        label: $('.option-label', $option).val(),\n                        value: $('.option-value', $option).val()\n                    };\n\n                if (selected) {\n                    attrs.selected = selected;\n                }\n                if (attrs.value) {\n                    options.push(attrs);\n                }\n            });\n\n            return options;\n        };\n\n        /**\n         * XML save\n         *\n         * @param  {Object} form sortableFields node\n         */\n        _helpers.xmlSave = function (form) {\n            var formData = _helpers.prepData(form),\n                xml = ['<form-template>\\n\\t<fields>'];\n\n            utils.forEach(formData, function (fieldIndex, field) {\n                var fieldContent = null;\n\n                // Handle options\n                if (field.type.match(/(select|checkbox-group|radio-group)/)) {\n                    var optionData = field.values,\n                        options = [];\n\n                    for (var i = 0; i < optionData.length; i++) {\n                        var option = utils.markup('option', optionData[i].label, optionData[i]).outerHTML;\n\n                        options.push('\\n\\t\\t\\t' + option);\n                    }\n\n                    options.push('\\n\\t\\t');\n                    fieldContent = options.join('');\n                    delete field.values;\n                }\n\n                var xmlField = utils.markup('field', fieldContent, field);\n\n                xml.push('\\n\\t\\t' + xmlField.outerHTML);\n            });\n\n            xml.push('\\n\\t</fields>\\n</form-template>');\n\n            return xml.join('');\n        };\n\n        _helpers.prepData = function (form) {\n            var formData = [];\n\n            if (form.childNodes.length !== 0) {\n                // build data object\n                utils.forEach(form.childNodes, function (index, field) {\n                    var $field = $(field);\n\n                    if (!$field.hasClass('disabled')) {\n                        var match,\n                            multipleField;\n\n                        (function () {\n                            var fieldData = _helpers.getTypes($field),\n                                roleVals = $('.roles-field:checked', field).map(function () {\n                                    return this.value;\n                                }).get();\n\n                            $('[class*=\"fld-\"]', field).each(function () {\n                                var name = utils.camelCase(this.name);\n\n                                fieldData[name] = this.type === 'checkbox' ? this.checked : this.value;\n                            });\n\n                            if (roleVals.length) {\n                                fieldData.role = roleVals.join(',');\n                            }\n\n                            fieldData.className = fieldData.className || fieldData.class; // backwards compatibility\n\n\n                            match = /(?:^|\\s)btn-(.*?)(?:\\s|$)/g.exec(fieldData.className);\n\n                            if (match) {\n                                fieldData.style = match[1];\n                            }\n\n                            fieldData = utils.trimObj(fieldData);\n\n                            multipleField = fieldData.type\n                                // eslint-disable-next-line max-len\n                                .match(/(select|dropdown|listbox|radio|radiotwo|checkbox|checkboxtwo|radio-group|rating)/);\n\n\n                            if (multipleField) {\n                                fieldData.values = _helpers.fieldOptionData($field);\n                            }\n\n                            if (fieldData.type === 'googlemap') {\n                                var fbGoogleMap = $(field).find('.fb-googlemap');\n\n                                fieldData.map_position = fbGoogleMap.amGoogleMap('getPosition');\n                                fieldData.zoom = fbGoogleMap.amGoogleMap('getZoom');\n                            }\n                            if (fieldData.type === 'date') {\n                                fieldData.value = $field.find('.amform-date._has-datepicker').val();\n                                fieldData.format = $field.attr('date-format');\n                            }\n\n                            if (fieldData.type === 'wysiwyg') {\n                                fieldData.value = $field.find('[type=' + fieldData.type + ']').val();\n                            }\n\n                            fieldData.dependency = _helpers.fieldDependencyData($field);\n\n                            formData.push(fieldData);\n                        })();\n                    }\n                });\n            }\n\n            return formData;\n        };\n\n        _helpers.jsonSave = function (form) {\n            return window.JSON.stringify(_helpers.prepData(form), null, '\\t');\n        };\n\n        _helpers.getData = function (formData) {\n            var data = formData || opts.formData;\n\n            if (!data) {\n                return false;\n            }\n\n            var setData = {\n                xml: function xml(formData) {\n                    return utils.parseXML(formData);\n                },\n                json: function json(formData) {\n                    return window.JSON.parse(formData);\n                }\n            };\n\n            formBuilder.formData = setData[opts.dataType](data) || [];\n\n            return formBuilder.formData;\n        };\n\n        /**\n         * Saves and returns formData\n         * @return {XML|JSON}\n         */\n        _helpers.save = function () {\n            var form = document.getElementById(opts.formID),\n                 doSave = {\n                    xml: _helpers.xmlSave,\n                    json: _helpers.jsonSave\n                };\n\n            // save action for current `dataType`\n            formBuilder.formData = doSave[opts.dataType](form);\n\n            //trigger formSaved event\n            document.dispatchEvent(formBuilder.events.formSaved);\n            return formBuilder.formData;\n        };\n\n        /**\n         * increments the field ids with support for multiple editors\n         * @param  {String} id field ID\n         * @return {String}    incremented field ID\n         */\n        _helpers.incrementId = function (id) {\n            var split = id.lastIndexOf('-'),\n                newFieldNumber = parseInt(id.substring(split + 1), 10) + 1,\n                baseString = id.substring(0, split);\n\n            return baseString + '-' + newFieldNumber;\n        };\n\n        /**\n         * Collect field attribute values and call fieldPreview to generate preview\n         * @param  {Object} field jQuery wrapped dom object @todo, remove jQuery dependency\n         * @param {Object} orig jQuery saved original when creating clone\n         */\n        _helpers.updatePreview = function (field, orig) {\n            var fieldClass = field.attr('class');\n\n            if (fieldClass && fieldClass.indexOf('ui-sortable-handle') !== -1) {\n                return;\n            }\n\n            var fieldType = $(field).attr('type'),\n                $prevHolder = $('.prev-holder', field),\n                previewData = {\n                    type: fieldType\n                },\n                preview;\n\n            $('[class*=\"fld-\"]', field).each(function () {\n                var name = utils.camelCase(this.name);\n\n                previewData[name] = this.type === 'checkbox' ? this.checked : this.value;\n            });\n\n            var style = $('.btn-style', field).val();\n\n            if (style) {\n                previewData.style = style;\n            }\n\n            if (fieldType === 'wysiwyg') {\n                _helpers.setWysiwygHtml($prevHolder, previewData, orig);\n            }\n\n            if (fieldType.match(/(select|dropdown|listbox|radio|radiotwo|checkbox|checkboxtwo|radio-group|rating)/)) {\n                previewData.values = [];\n                previewData.multiple = fieldType === 'listbox';\n\n                $('.sortable-options li', field).each(function () {\n                    var option = {};\n\n                    option.selected = $('.option-selected', this).is(':checked');\n                    option.value = $('.option-value', this).val();\n                    option.label = $('.option-label', this).val();\n                    previewData.values.push(option);\n                });\n            }\n            if (fieldType === 'date') {\n                var value = field.data('fieldData').attrs ?\n                        field.data('fieldData').attrs.value :\n                        field.data('fieldData').value;\n\n                previewData.value = value;\n            }\n\n            previewData = utils.trimObj(previewData);\n\n            previewData.className = _helpers.classNames(field, previewData);\n            $('.fld-className', field).val(previewData.className);\n\n            if (fieldType === 'googlemap') {\n                var fieldData = field.data('fieldData');\n\n                if (fieldData) {\n                    // first load\n                    if (fieldData.attrs) {\n                        previewData.map_position = fieldData.attrs.map_position;\n                        previewData.zoom = fieldData.attrs.zoom;\n                    }\n                } else if (orig) {\n                    // for clone action\n                    var oldMap = orig.find('.fb-googlemap');\n\n                    if (oldMap.length > 0\n                        && $.data(oldMap[0], 'mage-amGoogleMap')\n                    ) {\n                        var latLng = oldMap.amGoogleMap('getPosition');\n\n                        previewData.map_position = {\n                            lat: latLng.lat(),\n                            lng: latLng.lng()\n                        };\n                        previewData.zoom = oldMap.amGoogleMap('getZoom');\n                    }\n                }\n            }\n\n            field.data('fieldData', previewData);\n            preview = utils.fieldRender(previewData, opts, true);\n\n            if (fieldType === 'date') {\n                this.updateDateField(preview, field.attr('date-format'), previewData.value);\n            }\n\n            $prevHolder.html(preview);\n\n            if ($prevHolder.find('.amform-layout-two').length) {\n                $prevHolder.find('.amform-layout-two').removeClass('amform-layout-two');\n                $prevHolder.parents('li.form-field').addClass('amform-layout-two');\n            }\n\n            if ($prevHolder.find('.amform-layout-three').length) {\n                $prevHolder.find('.amform-layout-three').removeClass('amform-layout-three');\n                $prevHolder.parents('li.form-field').addClass('amform-layout-three');\n            }\n\n            $('input[toggle]', $prevHolder).kcToggle();\n\n            if (fieldType === 'wysiwyg' && opts.wysiwygConfig.enabled) {\n                fbUtils.wysiwygListener(previewData.id, _helpers.getWysiwygHtml(previewData.name), opts.wysiwygConfig);\n            }\n        };\n\n        /**\n         * Set wysiwyg content to the wysiwygHtmlCache by it's name\n         *\n         * @param  {Object} $prevHolder\n         * @param  {Object} previewData - field data\n         * @param  {Object|Undefined} orig - not undefined means field is copied. orig - original field\n         * @returns {void}\n         */\n        _helpers.setWysiwygHtml = function ($prevHolder, previewData, orig) {\n            var html = _helpers.wysiwygHtmlCache,\n                value = $prevHolder.find('[type=' + previewData.type + ']').val();\n\n            if (typeof value === 'undefined') {\n                value = previewData.value;\n            }\n\n            if (!value) {\n                html[previewData.name + '-preview'] = '';\n\n                return;\n            }\n\n            if (typeof orig !== 'undefined' || value.length) {\n                html[previewData.name + '-preview'] = value;\n            }\n        };\n\n        /**\n         * @param  {String} name\n         * @returns {void}\n         */\n        _helpers.removeWysiwygHtml = function (name) {\n            delete _helpers.wysiwygHtmlCache[name];\n        };\n\n        /**\n         * @param  {String} name\n         * @returns {String} html\n         */\n        _helpers.getWysiwygHtml = function (name) {\n            return _helpers.wysiwygHtmlCache[name];\n        };\n\n        _helpers.updateDateField = function (fieldMarkup, format, value) {\n            var dateInput = $(fieldMarkup).find('input');\n\n            format = format.replaceAll('yy', 'y');\n            dateInput.removeAttr('type');\n            dateInput.attr('readonly', 'readonly');\n            dateInput.datepicker({\n                showOn: 'both',\n                changeYear: true,\n                yearRange: '1900:2100',\n                autoSize: true,\n                dateFormat: format\n            });\n\n            if (value) {\n                dateInput.datepicker('setDate', value);\n            }\n\n            dateInput.attr('placeholder', format);\n            dateInput.attr('size', 15);\n            $(fieldMarkup).find('button').html('');\n\n            var datepicker = $('#ui-datepicker-div');\n\n            if (!datepicker.hasClass('am-picker-year')) {\n                datepicker.addClass('am-picker-year');\n            }\n        };\n\n        _helpers.debounce = function (func) {\n            var wait = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 250,\n                immediate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false,\n                timeout;\n\n            return function () {\n                var context = this,\n                    args = arguments,\n                    later = function later() {\n                        timeout = null;\n                        if (!immediate) {\n                            func.apply(context, args);\n                        }\n                    },\n                    callNow = immediate && !timeout;\n\n                clearTimeout(timeout);\n                timeout = setTimeout(later, wait);\n\n                if (callNow) {\n                    func.apply(context, args);\n                }\n            };\n        };\n\n        /**\n         * Display a custom tooltip for disabled fields.\n         *\n         * @param  {Object} field\n         */\n        _helpers.disabledTT = {\n            className: 'frmb-tt',\n            add: function add(field) {\n                var title = opts.messages.fieldNonEditable;\n\n                if (title) {\n                    var tt = utils.markup('p', title, {className: _helpers.disabledTT.className});\n\n                    field.append(tt);\n                }\n            },\n            remove: function remove(field) {\n                $('.frmb-tt', field).remove();\n            }\n        };\n\n        _helpers.classNames = function (field, previewData) {\n            var i = void 0,\n                type = previewData.type,\n                style = previewData.style,\n                className = field[0].querySelector('.fld-className').value,\n                classes = className.split(' '),\n                types = {\n                    button: 'btn',\n                    submit: 'btn'\n                },\n\n                primaryType = types[type];\n\n            if (primaryType) {\n                if (style) {\n                    for (i = 0; i < classes.length; i++) {\n                        var re = new RegExp('(?:^|\\s)' + primaryType + '-(.*?)(?:\\s|$)+', 'g'),\n                         match = classes[i].match(re);\n\n                        if (match) {\n                            classes.splice(i, 1);\n                        }\n                    }\n                    classes.push(primaryType + '-' + style);\n                }\n                classes.push(primaryType);\n            }\n\n            // reverse the array to put custom classes at end,\n            // remove any duplicates, convert to string, remove whitespace\n            return utils.unique(classes).join(' ').trim();\n        };\n\n        /**\n         * Closes and open dialog\n         *\n         * @param  {Object} overlay Existing overlay if there is one\n         * @param  {Object} dialog  Existing dialog\n         * @return {Event}          Triggers modalClosed event\n         */\n        _helpers.closeConfirm = function (overlay, dialog) {\n            overlay = overlay || document.getElementsByClassName('form-builder-overlay')[0];\n            dialog = dialog || document.getElementsByClassName('form-builder-dialog')[0];\n            overlay.classList.remove('visible');\n            dialog.remove();\n            overlay.remove();\n            document.dispatchEvent(formBuilder.events.modalClosed);\n        };\n\n        /**\n         * Returns the layout data based on controlPosition option\n         * @param  {String} controlPosition 'left' or 'right'\n         * @return {Object}\n         */\n        _helpers.editorLayout = function (controlPosition) {\n            var layoutMap = {\n                left: {\n                    stage: 'pull-right',\n                    controls: 'pull-left'\n                },\n                right: {\n                    stage: 'pull-left',\n                    controls: 'pull-right'\n                }\n            };\n\n            return layoutMap[controlPosition] ? layoutMap[controlPosition] : '';\n        };\n\n        /**\n         * Adds overlay to the page. Used for modals.\n         * @return {Object}\n         */\n        _helpers.showOverlay = function () {\n            var overlay = utils.markup('div', null, {\n                className: 'form-builder-overlay'\n            });\n\n            document.body.appendChild(overlay);\n            overlay.classList.add('visible');\n\n            overlay.onclick = function () {\n                _helpers.closeConfirm(overlay);\n            };\n\n            return overlay;\n        };\n\n        /**\n         * Custom confirmation dialog\n         *\n         * @param  {Object}  message   Content to be displayed in the dialog\n         * @param  {function} yesAction callback to fire if they confirm\n         * @param  {Boolean} coords    location to put the dialog\n         * @param  {String}  className Custom class to be added to the dialog\n         * @return {Object}            Reference to the modal\n         */\n        _helpers.confirm = function (message, yesAction) {\n            var coords = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false,\n             className = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '',\n\n             overlay = _helpers.showOverlay(),\n             yes = utils.markup('button', opts.messages.yes, {className: 'yes btn btn-success btn-sm'}),\n                no = utils.markup('button', opts.messages.no, {className: 'no btn btn-danger btn-sm'});\n\n            no.onclick = function () {\n                _helpers.closeConfirm(overlay);\n            };\n\n            yes.onclick = function () {\n                yesAction();\n                _helpers.closeConfirm(overlay);\n            };\n\n            var btnWrap = utils.markup('div', [no, yes], {className: 'button-wrap'});\n\n            className = 'form-builder-dialog ' + className;\n\n            var miniModal = utils.markup('div', [message, btnWrap], {className: className});\n\n            if (!coords) {\n                coords = {\n                    pageX: Math.max(document.documentElement.clientWidth, window.innerWidth || 0) / 2,\n                    pageY: Math.max(document.documentElement.clientHeight, window.innerHeight || 0) / 2\n                };\n                miniModal.style.position = 'fixed';\n            } else {\n                miniModal.classList.add('positioned');\n            }\n\n            miniModal.style.left = coords.pageX + 'px';\n            miniModal.style.top = coords.pageY + 'px';\n\n            document.body.appendChild(miniModal);\n\n            yes.focus();\n            return miniModal;\n        };\n\n        /**\n         * Popup dialog the does not require confirmation.\n         * @param  {String|DOM|Array}  content\n         * @param  {Boolean} coords    false if no coords are provided. Without coordinates\n         *                             the popup will appear center screen.\n         * @param  {String}  className classname to be added to the dialog\n         * @return {Object}            dom\n         */\n        _helpers.dialog = function (content) {\n            var coords = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false,\n             className = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n\n            _helpers.showOverlay();\n\n            className = 'form-builder-dialog ' + className;\n\n            var miniModal = utils.markup('div', content, {className: className});\n\n            if (!coords) {\n                coords = {\n                    pageX: Math.max(document.documentElement.clientWidth, window.innerWidth || 0) / 2,\n                    pageY: Math.max(document.documentElement.clientHeight, window.innerHeight || 0) / 2\n                };\n                miniModal.style.position = 'fixed';\n            } else {\n                miniModal.classList.add('positioned');\n            }\n\n            miniModal.style.left = coords.pageX + 'px';\n            miniModal.style.top = coords.pageY + 'px';\n\n            document.body.appendChild(miniModal);\n\n            document.dispatchEvent(formBuilder.events.modalOpened);\n\n            if (className.indexOf('data-dialog') !== -1) {\n                document.dispatchEvent(formBuilder.events.viewData);\n            }\n\n            return miniModal;\n        };\n\n        /**\n         * Removes all fields from the form\n         */\n        _helpers.removeAllfields = function () {\n            var form = document.getElementById(opts.formID),\n             fields = form.querySelectorAll('li.form-field'),\n             $fields = $(fields),\n             markEmptyArray = [];\n\n            if (!fields.length) {\n                return false;\n            }\n\n            if (opts.prepend) {\n                markEmptyArray.push(true);\n            }\n\n            if (opts.append) {\n                markEmptyArray.push(true);\n            }\n\n            if (!markEmptyArray.some(function (elem) {return elem === true;})) {\n                form.parentElement.classList.add('empty');\n                form.parentElement.dataset.content = opts.messages.getStarted;\n            }\n\n            form.classList.add('removing');\n\n            var outerHeight = 0;\n\n            $fields.each(function () {\n                outerHeight += $(this).outerHeight() + 3;\n            });\n\n            fields[0].style.marginTop = -outerHeight + 'px';\n\n            setTimeout(function () {\n                $fields.remove();\n                document.getElementById(opts.formID).classList.remove('removing');\n                _helpers.save();\n            }, 400);\n        };\n\n        /**\n         * If user re-orders the elements their order should be saved.\n         *\n         * @param {Object} $cbUL our list of elements\n         */\n        _helpers.setFieldOrder = function ($cbUL) {\n            if (!opts.sortableControls) {\n                return false;\n            }\n            var fieldOrder = {};\n\n            $cbUL.children().each(function (index, element) {\n                fieldOrder[index] = $(element).data('attrs').type;\n            });\n\n            if (window.sessionStorage) {\n                window.sessionStorage.setItem('fieldOrder', window.JSON.stringify(fieldOrder));\n            }\n        };\n\n        /**\n         * Reorder the controls if the user has previously ordered them.\n         *\n         * @param  {Array} frmbFields\n         * @return {Array}\n         */\n        _helpers.orderFields = function (frmbFields) {\n            var fieldOrder = false;\n\n            if (window.sessionStorage) {\n                if (opts.sortableControls) {\n                    fieldOrder = window.sessionStorage.getItem('fieldOrder');\n                } else {\n                    window.sessionStorage.removeItem('fieldOrder');\n                }\n            }\n\n            if (!fieldOrder) {\n                var controlOrder = opts.controlOrder.concat(frmbFields.map(function (field) {\n                    return field.attrs.type;\n                }));\n\n                fieldOrder = utils.unique(controlOrder);\n            } else {\n                fieldOrder = window.JSON.parse(fieldOrder);\n                fieldOrder = Object.keys(fieldOrder).map(function (i) {\n                    return fieldOrder[i];\n                });\n            }\n\n            var newOrderFields = [];\n\n            fieldOrder.forEach(function (fieldType) {\n                var field = frmbFields.filter(function (field) {\n                    return field.attrs.type === fieldType;\n                })[0];\n\n                newOrderFields.push(field);\n            });\n\n            return newOrderFields.filter(Boolean);\n        };\n\n        /**\n         * Close fields being editing\n         * @param  {Object} stage\n         */\n        _helpers.closeAllEdit = function (stage) {\n            var fields = $('> li.editing', stage),\n                toggleBtns = $('.toggle-form', stage),\n                editModes = $('.frm-holder', fields);\n\n            toggleBtns.removeClass('open');\n            fields.removeClass('editing');\n            editModes.hide();\n            $('.prev-holder', fields).show();\n        };\n\n        /**\n         * Toggles the edit mode for the given field\n         * @param  {String} fieldId\n         */\n        _helpers.toggleEdit = function (fieldId) {\n            var field = document.getElementById(fieldId),\n                toggleBtn = $('.toggle-form', field),\n                editMode = $('.frm-holder', field);\n\n            field.classList.toggle('editing');\n            toggleBtn.toggleClass('open');\n            $('.prev-holder', field).slideToggle(250);\n            editMode.slideToggle(250);\n        };\n\n        /**\n         * Controls follow scroll to the bottom of the editor\n         * @param  {Object} $sortableFields\n         * @param  {Object} cbUL\n         */\n        _helpers.stickyControls = function ($sortableFields, cbUL) {\n            var $cbWrap = $(cbUL).parent(),\n                $stageWrap = $sortableFields.parent(),\n                cbWidth = $cbWrap.width(),\n                cbPosition = cbUL.getBoundingClientRect();\n\n            // eslint-disable-next-line jquery-no-input-event-shorthand\n            $(window).scroll(function () {\n                var scrollTop = $(this).scrollTop();\n\n                if (scrollTop > $stageWrap.offset().top) {\n                    var cbStyle = {\n                            position: 'fixed',\n                            width: cbWidth,\n                            top: 0,\n                            bottom: 'auto',\n                            right: 'auto',\n                            left: cbPosition.left\n                        },\n                        cbOffset = $cbWrap.offset(),\n                        stageOffset = $stageWrap.offset(),\n                        cbBottom = cbOffset.top + $cbWrap.height(),\n                        stageBottom = stageOffset.top + $stageWrap.height();\n\n                    if (cbBottom > stageBottom && cbOffset.top !== stageOffset.top) {\n                        $cbWrap.css({\n                            position: 'absolute',\n                            top: 'auto',\n                            bottom: 0,\n                            right: 0,\n                            left: 'auto'\n                        });\n                    }\n\n                    if (cbBottom < stageBottom || cbBottom === stageBottom && cbOffset.top > scrollTop) {\n                        $cbWrap.css(cbStyle);\n                    }\n                } else {\n                    cbUL.parentElement.removeAttribute('style');\n                }\n            });\n        };\n\n        /**\n         * Open a dialog with the form's data\n         */\n        _helpers.showData = function () {\n            var data = utils.escapeHtml(formBuilder.formData),\n                code = utils.markup('code', data, {className: 'formData-' + opts.dataType}),\n                pre = utils.markup('pre', code);\n\n            _helpers.dialog(pre, null, 'data-dialog');\n        };\n\n        /**\n         * Remove a field from the stage\n         * @param  {String}  fieldID ID of the field to be removed\n         * @return {Boolean} fieldRemoved returns true if field is removed\n         */\n        _helpers.removeField = function (fieldID) {\n            var fieldRemoved = false,\n                form = document.getElementById(opts.formID),\n                fields = form.getElementsByClassName('form-field');\n\n            if (!fields.length) {\n                console.warn('No fields to remove');\n\n                return false;\n            }\n\n            if (!fieldID) {\n                var availableIds = [].slice.call(fields).map(function (field) {\n                    return field.id;\n                });\n\n                console.warn('fieldID required to use `removeField` action.');\n                console.warn('Available IDs: ' + availableIds.join(', '));\n            }\n\n            var field = document.getElementById(fieldID),\n                $field = $(field);\n\n            if (!field) {\n                console.warn('Field not found');\n\n                return false;\n            }\n\n            $field.slideUp(250, function () {\n                $field.removeClass('deleting');\n                $field.remove();\n                fieldRemoved = true;\n                _helpers.save();\n\n                if (!form.childNodes.length) {\n                    var stageWrap = form.parentElement;\n\n                    stageWrap.classList.add('empty');\n                    stageWrap.dataset.content = opts.messages.getStarted;\n                }\n            });\n\n            document.dispatchEvent(formBuilder.events.fieldRemoved);\n\n            return fieldRemoved;\n        };\n\n        _helpers.fieldDependencyData = function (field) {\n            var options = [];\n\n            $('.sortable-options li.dependent-field', field).each(function () {\n                var $option = $(this),\n                    selected = $('.option-selected', $option).is(':checked'),\n                    attrs = {\n                        field: $option.find('select').first().val(),\n                        type: $option.find('select').first().find('[selected=\"selected\"]').attr('type'),\n                        value: $option.find('select').last().val()\n                    };\n\n                if (selected) {\n                    attrs.selected = selected;\n                }\n\n                if (attrs.value) {\n                    options.push(attrs);\n                }\n            });\n\n            return options;\n        };\n\n        return _helpers;\n    }\n\n    'use strict';\n\n    function formBuilderEventsFn() {\n        var events = {};\n\n        events.loaded = new Event('loaded');\n        events.viewData = new Event('viewData');\n        events.userDeclined = new Event('userDeclined');\n        events.modalClosed = new Event('modalClosed');\n        events.modalOpened = new Event('modalOpened');\n        events.formSaved = new Event('formSaved');\n        events.fieldAdded = new Event('fieldAdded');\n        events.fieldRemoved = new Event('fieldRemoved');\n\n        return events;\n    }\n\n    'use strict';\n\n    (function ($) {\n        var Toggle = function Toggle(element, options) {\n            var defaults = {\n                    theme: 'fresh',\n                    messages: {\n                        off: 'Off',\n                        on: 'On'\n                    }\n                },\n                opts = $.extend(defaults, options),\n                $kcToggle = $('<div class=\"kc-toggle\"></div>').insertAfter(element).append(element);\n\n            $kcToggle.toggleClass('on', element.is(':checked'));\n\n            var kctOn = '<div class=\"kct-on\">' + opts.messages.on + '</div>',\n                kctOff = '<div class=\"kct-off\">' + opts.messages.off + '</div>',\n                kctHandle = '<div class=\"kct-handle\"></div>',\n                kctInner = '<div class=\"kct-inner\">' + kctOn + kctHandle + kctOff + '</div>';\n\n            $kcToggle.append(kctInner);\n\n            $kcToggle.click(function () {\n                element.attr('checked', !element.attr('checked'));\n                $(this).toggleClass('on');\n            });\n        };\n\n        $.fn.kcToggle = function (options) {\n            var toggle = this;\n\n            return toggle.each(function () {\n                var element = $(this);\n\n                if (element.data('kcToggle')) {\n                    return;\n                }\n\n                var kcToggle = new Toggle(element, options);\n\n                element.data('kcToggle', kcToggle);\n            });\n        };\n    })(jQuery);\n\n    return [fbUtils, formBuilderHelpersFn];\n});\n","Amasty_Customform/js/form-prompt.js":"define([\n    'jquery',\n    'Magento_Ui/js/modal/confirm',\n    'mage/translate'\n], function ($, confirm, $t) {\n    'use strict';\n\n    $.widget('mage.amcformPrompt', {\n        options: {\n            modalClass: 'amcform-popup-block -active',\n            responsive: true,\n            title: $t('This form can be submitted only once. Ready to proceed?'),\n            cancellationLink: '',\n            actions: {},\n            isShowed: false\n        },\n\n        _create: function () {\n            var self = this,\n                options = this.options,\n                form = $(this.element).closest('.amform-form');\n\n            self.options.actions = {\n                cancel: function () {\n                    self.options.isShowed = false;\n                }\n            };\n\n            options.buttons = [{\n                text: $t('No'),\n                class: 'amcform-button -error',\n                click: function () {\n                    this.closeModal();\n                }\n            }, {\n                text: $t('Yes'),\n                class: 'amcform-button -default',\n                click: function () {\n                    this.closeModal();\n                    form.submit();\n                }\n            }];\n\n            this.element.click(function (e) {\n                e.preventDefault();\n\n                if (!self.options.isShowed) {\n                    confirm(options);\n\n                    self.options.isShowed = true;\n                } else {\n                    form.submit();\n                }\n            });\n        }\n    });\n\n    return $.mage.amcformPrompt\n});\n","Amasty_Customform/js/form-builder.js":"define([\n    'jquery',\n    'underscore',\n    'Amasty_Customform/js/form-builder-helper',\n    'Magento_Ui/js/modal/alert',\n    'mage/translate',\n    'Magento_Ui/js/modal/modal',\n    'mage/backend/tabs'\n], function ($, _, helper, alert) {\n    'use strict';\n\n    $.widget('mage.customFormBuilder', {\n        options: {\n            controlPosition: 'right',\n            controlOrder: ['autocomplete', 'button', 'checkbox', 'checkbox-group',\n                'date', 'file', 'header', 'hidden', 'paragraph', 'number', 'radio-group', 'select', 'text', 'textarea'],\n            dataType: 'json',\n            // Array of fields to disable\n            disableFields: [],\n            editOnAdd: false,\n            // Uneditable fields or other content you would like to appear before and after regular fields:\n            append: false,\n            prepend: false,\n            defaultFields: [],\n            inputSets: [],\n            fieldRemoveWarn: false,\n            messages: {},\n            frmbFields: [{\n                label: 'autocomplete',\n                attrs: {\n                    type: 'autocomplete',\n                    className: 'autocomplete',\n                    name: 'autocomplete'\n                }\n            }],\n            notify: {\n                error: function error(message) {\n                    return console.error(message);\n                },\n                success: function success(message) {\n                    return console.log(message);\n                },\n                warning: function warning(message) {\n                    return console.warn(message);\n                }\n            },\n            sortableControls: false,\n            stickyControls: false,\n            showActionButtons: true,\n            typeUserAttrs: {},\n            typeUserEvents: {},\n            prefix: 'form-builder-',\n            fbInstances: [],\n            savedValue: '[name=\"form_json\"]',\n            savedTitles: '[name=\"form_title\"]',\n            pageFormId: [],\n            pageTitles: []\n        },\n        classes: {\n            delete: 'deleting'\n        },\n        selectors: {\n            wysiwygField: '[type=wysiwyg]',\n            deleteButton: '.delete-confirm',\n            fieldFirst: '.form-field:eq(0)',\n            wysiwygContainer: '.wysiwyg-field#{id}'\n        },\n\n        _create: function () {\n            var self = this,\n                formbId,\n                savedValue,\n                formDataJSON = [],\n                savedTitles,\n                pageCount;\n\n            self.generateSubtypes();\n\n            formDataJSON = self.options.form_json;\n            savedTitles = $(self.options.savedTitles).val();\n            self.formTitle = savedTitles ? window.JSON.parse(savedTitles) : this.options.pageTitles;\n\n            if (formDataJSON.length && !Array.isArray(formDataJSON[0])) {\n                var createPage = [];\n                createPage.push(formDataJSON);\n                formDataJSON = createPage;\n            }\n\n            if (formDataJSON.length) {\n                pageCount = formDataJSON.length;\n\n                for (var i = 0; i < pageCount; i++) {\n                    self.formData = formDataJSON[i];\n                    formbId = 'frmb-' + i;\n\n                    if (i == 0) {\n                        self.initialization(formbId);\n                        self.setPageTitle(i);\n                    } else {\n                        self.createNewPage(formbId);\n                        self.setPageTitle(i);\n                    }\n                }\n                $('[data-amcform-role=\"page\"]:first-child').find('a').trigger('click');\n            } else {\n                formbId = 'frmb-' + $('ul[id^=frmb-].frmb').length++;\n                self.formData = formDataJSON;\n                self.initialization(formbId);\n                if ($('[data-amcform-role=\"page\"]').length == 1) {\n                    $('[data-amcform-role=\"page\"]').find('a').trigger('click');\n                }\n            }\n        },\n\n        initialization: function (formbId) {\n            var self = this,\n                $cbUL,\n                boxID = formbId + '-control-box';\n\n            this.lastID = formbId + '-fld-1';\n            this.options.formID = formbId;\n            this.options.pageFormId.push(formbId);\n\n            this.helpers = helper[1](this.options, this);\n            this.utils = helper[0];\n\n            this.layout = this.helpers.editorLayout(this.options.controlPosition);\n\n            // create array of field objects to cycle through\n            var frmbFields = this.options.frmbFields;\n            //frmbFields = this.helpers.orderFields(frmbFields);\n\n            if (this.options.disableFields) {\n                // remove disabledFields\n                frmbFields = frmbFields.filter(function (field) {\n                    return !self.utils.inArray(field.attrs.type, self.options.disableFields);\n                });\n            }\n\n            // Create draggable fields for this.options\n            var cbUl = this.utils.markup('ul', null, {id: boxID, className: 'frmb-control'});\n\n            if (this.options.sortableControls) {\n                cbUl.classList.add('sort-enabled');\n            }\n\n            $cbUL = $(cbUl);\n            this.generateFormFields(frmbFields, $cbUL);\n\n            if (this.options.inputSets.length) {\n                $('<li/>', {'class': 'fb-separator'}).html('<hr>').appendTo($cbUL);\n                this.options.inputSets.forEach(function (set) {\n                    set.name = set.name || this.helpers.makeClassName(set.label);\n                    var $set = $('<li/>', {'class': 'input-set-control', type: set.name});\n                    $set.html(set.label).appendTo($cbUL);\n                });\n            }\n\n            this.generateSortable(formbId, $cbUL);\n            this.generateWrapperContent(formbId, $cbUL);\n\n            $cbUL.prev('.amcustomform-element-tabs').find('li:first-child').click();\n\n            this.observeFields($cbUL, formbId);\n\n            this.helpers.getData();\n            this.loadFields();\n\n            this.sortableFields.css('min-height', $cbUL.height());\n\n            // If option set, controls will remain in view in editor\n            if (this.options.stickyControls) {\n                this.helpers.stickyControls(this.sortableFields, cbUl);\n            }\n\n            document.dispatchEvent(self.events.loaded);\n\n            // Make actions accessible\n            self.actions = {\n                clearFields: self.helpers.removeAllfields,\n                showData: self.helpers.showData,\n                save: self.helpers.save,\n                addField: function addField(field, index) {\n                    self.helpers.stopIndex = self.sortableFields[0].children.length ? index : undefined;\n                    self.prepFieldVars(field);\n                    document.dispatchEvent(self.events.fieldAdded);\n                },\n                removeField: self.helpers.removeField,\n                setData: function setData(formData) {\n                    self.helpers.removeAllfields();\n                    self.helpers.getData(formData);\n                    self.loadFields();\n                }\n            };\n        },\n\n        addCollapseDefaultValueVariables: function (element) {\n            $(element).find('.value-wrap .default-values-link').on('click', function (e) {\n                var variantsBlock = $(e.target).closest('.value-note-wrap').find('.default-value-variants');\n                variantsBlock.slideToggle();\n                e.preventDefault();\n            });\n        },\n\n        addValidateObserve: function ($element) {\n            var self = this,\n                select = $element.find('.fld-validation');\n            this.validateObserve(select);\n\n            select.change(function (e) {\n                self.validateObserve($(e.target));\n            });\n        },\n\n        validateObserve: function ($element) {\n            var regexpBlock = $element.parents('.form-group').next('.form-group.regexp-wrap'),\n                errorBlock = regexpBlock.next('.form-group.errorMessage-wrap');\n\n            if ($element.val() === 'pattern') {\n                regexpBlock.show();\n                errorBlock.show();\n            } else {\n                regexpBlock.hide();\n                errorBlock.hide();\n            }\n        },\n\n        /**\n         * Set page title for current page if there is a saved title\n         * @param page - (int) current page\n         */\n\n        setPageTitle: function (page) {\n            var self = this,\n                id = page + 1;\n\n            if (self.formTitle) {\n                $('#page-title-' + id).val(self.formTitle[page]);\n            }\n        },\n\n        /**\n         * Create new page\n         * @param formbId - (string) id for new form\n         */\n\n        createNewPage: function (formbId) {\n            var self = this,\n                tabCount = $('[data-amcform-js=\"tabs-wrap\"]').children().length,\n                tabId = \"page-\" + tabCount,\n                titleId = 'page-title-' + tabCount,\n                $newPageTemplate = $('[data-amcform-js=\"new-page\"]'),\n                $newPage = $newPageTemplate\n                    .clone()\n                    .removeAttr(\"data-amcform-js\")\n                    .attr(\"id\", tabId)\n                    .addClass(\"fb-editor\"),\n                $newTab = $('[data-amcform-js=\"add-new-page\"]')\n                    .clone()\n                    .removeAttr(\"data-amcform-js\")\n                    .attr('data-amcform-role', 'page')\n                    .removeClass('-new'),\n                $newTitle = $newPage.find('[data-amcform-js=\"title-edit-new\"]');\n\n            $(\"a\", $newTab)\n                .attr(\"href\", \"#\" + tabId)\n                .attr('data-amcform-role', 'page-link')\n                .attr(\"title\", $.mage.__('Page ') + tabCount)\n                .text($.mage.__('Page ') + tabCount);\n\n            $newTitle.attr('data-amcform-js', 'title-edit');\n            $newTitle.find('input').attr('id', titleId);\n            $newTitle.find('label').attr('for', titleId);\n\n            $newPage.insertBefore($newPageTemplate);\n            $newTab.insertBefore('[data-amcform-js=\"add-new-page\"]');\n\n            self.options.formWrapper.tabs(\"refresh\");\n            self.options.formWrapper.tabs(\"option\", \"active\", tabCount - 1);\n\n            self.element = $newPage;\n\n            $('[data-amcform-role=\"page\"]').removeClass('active');\n            $newTab.addClass('active');\n\n            if (!formbId) {\n                self.options.form_json = [];\n                self._create();\n                return;\n            }\n\n            self.initialization(formbId);\n        },\n\n        /**\n         * Delete current page\n         * @param page - DOM node\n         * @param e - event\n         */\n\n        deleteCurentPage: function (page, e) {\n            var self = this,\n                tab = $(page).parent(),\n                prevTab = tab.prev().find('a'),\n                pageId = $(page).prev().attr('href').split('-')[1];\n\n            e.stopPropagation();\n\n            self.downgradeTabNumber(tab);\n\n            tab.remove();\n            $('#page-' + pageId).remove();\n            prevTab.trigger('click');\n        },\n\n        /**\n         * Downgrade tabs number after deleting previos tab\n         * @param tab - DOM element\n         */\n        downgradeTabNumber: function (tab) {\n            var nextTabs = tab.nextAll().find('a');\n\n            nextTabs.each(function (index, page) {\n                if (index == nextTabs.length -1) {\n                    return;\n                }\n\n                var pageValue = $(page).text().split(' '),\n                    newPageId = pageValue[1] - 1,\n                    pageLabel = pageValue[0];\n\n                $(page).text(pageLabel + ' ' + newPageId);\n                $(page).attr('title', pageLabel + ' ' + newPageId);\n            });\n        },\n\n        /**\n         * Navigate between form pages\n         * @param page - DOM node\n         */\n\n        navigatePageForm: function (page) {\n            if ($(page).length > 0) {\n                var pageId = $(page).attr('href'),\n                    tab = $(page).parent(),\n                    tabId = pageId.split('-')[1] - 1,\n                    fields;\n\n                $('[data-amcform-role=\"page\"]').removeClass('active');\n                $(tab).addClass('active');\n                $(pageId).find('.amcustomform-element-tabs li:first-child').trigger('click');\n\n                // Set new settings\n                this.options.formID = 'frmb-' + tabId;\n                fields = $('#' + this.options.formID).children().length + 1;\n                this.lastID = this.options.formID + '-fld-' + fields;\n                this.sortableFields = $('ul#' + this.options.formID + '.frmb.ui-sortable');\n                this.stageWrap = $('div#' + this.options.formID + '-stage-wrap.stage-wrap.pull-left');\n            }\n        },\n\n        navigateKeyboard: function () {\n            this.navigatePageForm(\n                $('[data-amcform-role=\"page\"][aria-selected=\"true\"] a')\n            );\n        },\n\n        /**\n         * @return {array}\n         */\n        getPageTitles: function () {\n            var result = [];\n\n            $.each($('[data-amcform-js=\"title-edit\"] .amcform-input'), function (index, title) {\n                result.push($(title).val());\n            });\n\n            return result;\n        },\n\n        /**\n         * Set page titles in hidden input\n         */\n        savePageTitles: function () {\n            var self = this;\n\n            self.options.pageTitles = this.getPageTitles();\n\n            $('#form_form_title').val(window.JSON.stringify(self.options.pageTitles, null, '\\t'));\n\n            $('[data-amcform-js^=\"title-edit\"] .amcform-input').each(function (key, element) {\n                $(element).attr('disabled', 'disabled');\n            });\n        },\n\n        /**\n         * @return {array}\n         */\n        getSerializedFormConfig: function () {\n            var result = [];\n\n            $.each(this.options.pageFormId, function (index, id) {\n                var form = document.getElementById(id),\n                    json;\n\n                if (form) {\n                    json = this.helpers.prepData(form);\n\n                    if (json.length) {\n                        result.push(json);\n                    }\n                }\n            }.bind(this));\n\n            return result;\n        },\n\n        /**\n         * Save form configuration\n         */\n        generateSaveEvent: function (event) {\n            var self = this;\n\n            self.savePageTitles();\n\n            self.options.fbInstances = this.getSerializedFormConfig();\n\n            var formFields = 'input, textarea, select',\n                formContent = window.JSON.stringify(self.options.fbInstances, null, '');\n            if (formContent.length < 65000) {\n                $('[name=\"form_json\"]').val(formContent);\n                $('.form-wrap').find(formFields).each(function (key, element) {\n                    $(element).removeAttr('required').attr('disabled', 'disabled');\n                });\n            } else {\n                event.preventDefault();\n                self.options.fbInstances = [];\n                self.options.pageTitles = [];\n                alert({\n                    title: $.mage.__('Error'),\n                    content: $.mage.__('You have exceeded the maximum allowed number of fields. Please try to create several forms instead of this one.')\n                });\n            }\n        },\n\n        generateSubtypes: function () {\n            this.options.messages.subtypes = function () {\n                var subtypeDefault = function subtypeDefault(subtype) {\n                    return {\n                        label: subtype,\n                        value: subtype\n                    };\n                };\n\n                return {\n                    text: ['text', 'password', 'email', 'color', 'tel'].map(subtypeDefault),\n                    header: ['h1', 'h2', 'h3'].map(subtypeDefault)\n                };\n            }();\n        },\n\n        generateWrapperContent: function (formbId, $cbUL) {\n            var $formWrap = $('<div/>', {\n                id: formbId + '-form-wrap',\n                'class': 'form-wrap form-builder' + this.helpers.mobileClass()\n            });\n\n            this.stageWrap = $('<div/>', {\n                id: formbId + '-stage-wrap',\n                'class': 'stage-wrap ' + this.layout.stage\n            });\n\n            var controlbWrap = $('<div/>', {\n                id: formbId + '-cb-wrap',\n                'class': 'cb-wrap ' + this.layout.controls\n            });\n\n            /*show type controls*/\n            var typesWrap = $('<ul/>', {\n                'class': 'type-wrap amcform-tabs-wrap -second amcustomform-element-tabs'\n            });\n\n            var fieldsTypes = this.options.fieldsTypes;\n            this.utils.forEach(fieldsTypes, function (i) {\n                var $field = $('<li/>', {\n                    'id': 'amcustomform-type-' + fieldsTypes[i].type,\n                    'type': fieldsTypes[i].type,\n                    'text': fieldsTypes[i].title,\n                    'class': 'amcform-tab'\n                }).appendTo(typesWrap);\n\n                $field.on('click', function () {\n                    $('.amelement-container').hide();\n                    $('.amcustomform-element-tabs li').removeClass('active');\n                    $(this).addClass('active');\n                    var type = $(this).attr('type');\n                    $('.amelement-container[parenttype=\"' + type + '\"]').fadeIn();\n                });\n            });\n\n            controlbWrap.append(typesWrap);\n            controlbWrap.append($cbUL[0]);\n\n            if (this.options.showActionButtons) {\n                // Build our headers and action links\n                var viewDataText = this.options.dataType === 'xml' ? this.options.messages.viewXML : this.options.messages.viewJSON,\n\n                    clearAll = this.utils.markup('button', this.options.messages.clearAll, {\n                        id: formbId + '-clear-all',\n                        type: 'button',\n                        className: 'clear-all btn btn-default'\n                    });\n                var formActions = this.utils.markup('div', [clearAll], {\n                    className: 'form-actions btn-group'\n                });\n\n                controlbWrap.append(formActions);\n            }\n\n            this.stageWrap.append($(this.element).find('[data-amcform-js=\"title-edit\"]'));\n            this.stageWrap.append(this.sortableFields, controlbWrap);\n            this.stageWrap.before($formWrap);\n            $formWrap.append(this.stageWrap, controlbWrap);\n            $(this.element).append($formWrap);\n        },\n\n        generateSortable: function (formbId, $cbUL) {\n            // Sortable fields\n            this.sortableFields = $('<ul/>').attr('id', formbId).addClass('frmb');\n            this.sortableFields.sortable({\n                cursor: 'move',\n                opacity: 0.9,\n                revert: 150,\n                beforeStop: this.helpers.beforeStop,\n                start: this.helpers.startMoving,\n                stop: this.helpers.stopMoving,\n                cancel: 'input, select, .disabled, .form-group, .btn',\n                placeholder: 'frmb-placeholder'\n            });\n\n            // ControlBox with different fields\n            var self = this;\n            $cbUL.sortable({\n                helper: 'clone',\n                opacity: 0.9,\n                connectWith: this.sortableFields,\n                cancel: '.fb-separator',\n                cursor: 'move',\n                scroll: false,\n                placeholder: 'ui-state-highlight',\n                start: this.helpers.startMoving,\n                stop: this.helpers.stopMoving,\n                revert: 150,\n                beforeStop: this.helpers.beforeStop,\n                distance: 3,\n                update: this.helpers.update\n            });\n        },\n\n        generateFormFields: function (frmbFields, $cbUL) {\n            var self = this;\n            this.utils.forEach(frmbFields, function (i) {\n                var $field = $('<li/>', {\n                    'class': 'amelement-container icon-' + frmbFields[i].attrs.className,\n                    'type': frmbFields[i].attrs.type,\n                    'parentType': frmbFields[i].attrs.parentType,\n                    'name': frmbFields[i].className,\n                    'label': frmbFields[i].attrs.label\n                });\n\n                var $title = $('<div/>', {\n                    'class': 'amelement-title',\n                    'html': frmbFields[i].label\n                }).appendTo($field);\n\n                var $contentContainer = $('<div/>', {\n                    'class': 'amelement-content',\n                    'html': frmbFields[i].content\n                }).appendTo($field);\n\n                $field.data('newFieldData', frmbFields[i]);\n\n                $field.appendTo($cbUL);\n\n                if (frmbFields[i].attrs.type == 'date') {\n                    self.helpers.updateDateField($field, frmbFields[i].attrs.format);\n                }\n            });\n        },\n\n        saveAndUpdate: function () {\n            var self = this;\n            return this.helpers.debounce(function (evt) {\n                if (evt) {\n                    if (evt.type === 'keyup' && this.name === 'className') {\n                        return false;\n                    }\n                }\n\n                var $field = $(this).parents('.form-field:eq(0)');\n                self.helpers.updatePreview($field);\n                self.helpers.save();\n            });\n        },\n\n        processControl: function (control) {\n            if (control[0].classList.contains('input-set-control')) {\n                var inputSet = this.options.inputSets.filter(function (set) {\n                    return set.name === control[0].type;\n                })[0];\n                if (inputSet.showHeader) {\n                    var header = {\n                        type: 'header',\n                        subtype: 'h2',\n                        id: inputSet.name,\n                        label: inputSet.label\n                    };\n                    this.prepFieldVars(header, true);\n                }\n                inputSet.fields.forEach(function (field) {\n                    //TODO Check this\n                    this.prepFieldVars(field, true);\n                }).bind(this);\n            } else {\n                this.prepFieldVars(control, true);\n            }\n        },\n\n        prepFieldVars: function ($field) {\n            var isNew = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false,\n                self = this;\n\n            var field = {};\n            if ($field instanceof jQuery) {\n                var fieldData = $field.data('newFieldData');\n                if (fieldData) {\n                    field = fieldData.attrs;\n                    field.label = fieldData.label;\n                    field.options = fieldData.options;\n                    if (fieldData.childs) {\n                        $(fieldData.childs).each(function (i, child) {\n                            var element = $('.amelement-container[type=\"' + child.type + '\"]');\n                            if (element) {\n                                var childData = element.data('newFieldData');\n                                if (childData) {\n                                    var childField = childData.attrs;\n                                    childField.label = childData.label;\n                                    childField.options = childData.options;\n                                    childField = Object.assign(childField, child.data);\n                                    self.prepFieldVars(childField, true);\n                                }\n                            }\n                        });\n                        return;\n                    }\n                } else {\n                    var attrs = $field[0].attributes;\n                    if (!isNew) {\n                        field.values = $field.children().map(function (index, elem) {\n                            return {\n                                label: $(elem).text(),\n                                value: $(elem).attr('value'),\n                                selected: Boolean($(elem).attr('selected'))\n                            };\n                        });\n                    }\n\n                    for (var i = attrs.length - 1; i >= 0; i--) {\n                        field[attrs[i].name] = attrs[i].value;\n                    }\n                }\n            } else {\n                field = Object.assign({}, $field);\n            }\n\n            field.name = isNew ? this.nameAttr(field) : field.name || this.nameAttr(field);\n\n            switch (field.type) {\n                case 'country' :\n                    field.type = 'dropdown';\n                    break;\n            }\n\n            if (isNew && this.utils.inArray(\n                field.type,\n                ['textinput', 'number', 'file', 'dropdown', 'listbox', 'textarea']\n            )\n            ) {\n                field.className = 'form-control'; // backwards compatibility\n            } else {\n                field.className = field.class || field.className; // backwards compatibility\n            }\n\n            var match = /(?:^|\\s)btn-(.*?)(?:\\s|$)/g.exec(field.className);\n            if (match) {\n                field.style = match[1];\n            }\n\n            this.utils.escapeAttrs(field);\n\n            this.appendNewField(field);\n            if (isNew) {\n                document.dispatchEvent(this.events.fieldAdded);\n            }\n            this.stageWrap.removeClass('empty');\n        },\n\n        appendNewField: function (values) {\n            var self = this,\n                type = values.type || 'text',\n                label = values.label\n                    || this.options.messages[type]\n                    || (values.type === 'wysiwyg' ? $.mage.__('Wysiwyg') : this.options.messages.label),\n                delBtn = this.utils.markup('a', this.options.messages.remove, {\n                    id: 'del_' + this.lastID,\n                    className: 'del-button btn delete-confirm',\n                    title: this.options.messages.removeMessage\n                }),\n                toggleBtn = this.utils.markup('a', null, {\n                    id: this.lastID + '-edit',\n                    className: 'toggle-form btn icon-pencil',\n                    title: this.options.messages.hide\n                }),\n                copyBtn = this.utils.markup('a', this.options.messages.copyButton, {\n                    id: this.lastID + '-copy',\n                    className: 'copy-button btn icon-copy',\n                    title: this.options.messages.copyButtonTooltip\n                }),\n                liContents = this.utils.markup(\n                    'div',\n                    [toggleBtn, copyBtn, delBtn],\n                    { className: 'field-actions' }\n                ).outerHTML;\n\n            // Field preview Label\n            if (['hone', 'text', 'htwo', 'hthree'].indexOf(type) != -1) {\n                label = ''; //do not show label for text elements\n            }\n            liContents += '<label class=\"field-label\">' + label + '</label>';\n            var requiredDisplay = values.required ? 'style=\"display:inline\"' : '';\n            liContents += '<span class=\"required-asterisk\" ' + requiredDisplay + '> *</span>';\n            liContents += this.utils.markup('a', 'x', {className: 'close-field top-close-field'}).outerHTML;\n            if (values.description) {\n                liContents += '<span class=\"tooltip-element\" tooltip=\"' + values.description + '\">?</span>';\n            }\n\n            liContents = '<div class=\"field-label-container\">' + liContents + '</div>';\n\n            liContents += this.utils.markup('div', '', {className: 'prev-holder'}).outerHTML;\n            liContents += '<div id=\"' + this.lastID + '-holder\" class=\"frm-holder\">';\n            liContents += '<div class=\"form-elements\">';\n\n            liContents += this.advFields(values);\n            liContents += this.utils.markup('a', this.options.messages.close, {className: 'close-field'}).outerHTML;\n\n            liContents += '</div>';\n            liContents += '</div>';\n\n            var field = this.utils.markup('li', liContents, {\n                    'class': type + '-field form-field',\n                    'type': type,\n                    id: this.lastID\n                }),\n                $li = $(field);\n\n            $li.data('fieldData', {attrs: values});\n            if (typeof this.helpers.stopIndex !== 'undefined') {\n                $('> li', this.sortableFields).eq(this.helpers.stopIndex).before($li);\n            } else {\n                this.sortableFields.append($li);\n            }\n\n            $('.sortable-options', $li).sortable({\n                update: function update() {\n                    self.helpers.updatePreview($li);\n                }\n            }); // make dynamically added option fields sortable if they exist.\n\n            if (values.type == 'date') {\n                $li.attr('date-format', this.options.format);\n            }\n            this.helpers.updatePreview($li);\n\n            if (this.options.editOnAdd) {\n                this.helpers.closeAllEdit(this.sortableFields);\n                this.helpers.toggleEdit(this.lastID);\n            }\n\n            if (this.options.typeUserEvents[type] && this.options.typeUserEvents[type].onadd) {\n                this.options.typeUserEvents[type].onadd(field);\n            }\n\n            this.lastID = this.helpers.incrementId(this.lastID);\n            this.addCollapseDefaultValueVariables(field);\n            this.addValidateObserve($li);\n        },\n\n        // Add append and prepend options if necessary\n        nonEditableFields: function () {\n            var cancelArray = [];\n\n            if (this.options.prepend && !$('.disabled.prepend', this.sortableFields).length) {\n                var prependedField = this.utils.markup('li', this.options.prepend, {className: 'disabled prepend'});\n                cancelArray.push(true);\n                this.sortableFields.prepend(prependedField);\n            }\n\n            if (this.options.append && !$('.disabled.append', this.sortableFields).length) {\n                var appendedField = this.utils.markup('li', this.options.append, {className: 'disabled append'});\n                cancelArray.push(true);\n                this.sortableFields.append(appendedField);\n            }\n\n            if (cancelArray.some(function (elem) {\n                return elem === true;\n            })) {\n                this.stageWrap.removeClass('empty');\n            }\n        },\n\n        // Parse saved XML template data\n        loadFields: function () {\n            var self = this;\n            var formData = this.formData;\n            if (formData && formData.length) {\n                for (var i = 0; i < formData.length; i++) {\n                    this.prepFieldVars(formData[i]);\n                }\n                this.stageWrap.removeClass('empty');\n            } else if (this.options.defaultFields && this.options.defaultFields.length) {\n                // Load default fields if none are set\n                this.options.defaultFields.forEach(function (field) {\n                    return self.prepFieldVars(field);\n                });\n                this.stageWrap.removeClass('empty');\n            } else if (!this.options.prepend && !this.options.append) {\n                this.stageWrap.addClass('empty').attr('data-content', this.options.messages.getStarted);\n            }\n            this.helpers.save();\n\n            $('li.form-field:not(.disabled)', this.sortableFields).each(function () {\n                self.helpers.updatePreview($(this));\n            });\n\n            this.nonEditableFields();\n        },\n\n        nameAttr: function (field) {\n            var epoch = new Date().getTime();\n            return field.type + '-' + epoch;\n        },\n\n        /**\n         * Add data for field with options [select, checkbox-group, radio-group]\n         *\n         * @todo   refactor this nasty ~crap~ code, its actually painful to look at\n         * @param  {object} values\n         */\n        fieldOptions: function (values) {\n            var self = this;\n            var optionActions = [this.utils.markup('a', this.options.messages.addOption, {className: 'add add-opt'})],\n                fieldOptions = ['<label class=\"false-label\">' + this.options.messages.selectOptions + '</label>'],\n                isMultiple = values.multiple || values.type.match(/(listbox|checkbox|checkboxtwo|checkbox-group)/);\n\n            if (!values.values || !values.values.length) {\n                var counter = [1, 2, 3],\n                    optionLabel = self.options.messages.option;\n\n                if (values.type === 'rating') {\n                    counter = [1, 2, 3, 4, 5];\n                    optionLabel = self.options.messages.star;\n                }\n\n                if (values.options) {\n                    values.values = values.options;\n                } else {\n                    values.values = counter.map(function (index) {\n                        var label = optionLabel + ' ' + index,\n                            option = {\n                                selected: false,\n                                label: label,\n                                value: self.utils.hyphenCase(label)\n                            };\n                        return option;\n                    });\n                }\n\n                values.values[0].selected = true;\n            }\n\n            fieldOptions.push('<div class=\"sortable-options-wrap\">');\n\n            fieldOptions.push('<ol class=\"sortable-options\">');\n\n            var emptyFieldSelected = ' checked=\"true\"',\n                valuesOptions = [];\n            this.utils.forEach(values.values, function (i) {\n                if (values.values[i].selected) {\n                    emptyFieldSelected = '';\n                }\n                valuesOptions.push(self.selectFieldOptions(values.name, values.values[i], isMultiple));\n            });\n\n            fieldOptions = fieldOptions.concat(valuesOptions);\n\n            fieldOptions.push('</ol>');\n            fieldOptions.push(this.utils.markup('div', optionActions, {className: 'option-actions'}).outerHTML);\n            fieldOptions.push('</div>');\n\n            return this.utils.markup('div', fieldOptions.join(''), {className: 'form-group field-options'}).outerHTML;\n        },\n\n        /**\n         * Build the editable properties for the field\n         * @param  {object} values configuration object for advanced fields\n         * @return {String}        markup for advanced fields\n         */\n        advFields: function (values) {\n            var advFields = [],\n                optionFields = ['dropdown', 'listbox', 'checkbox', 'radio', 'checkboxtwo', 'radiotwo', 'rating', 'country'],\n                isOptionField = function () {\n                    return optionFields.indexOf(values.type) !== -1;\n                }(),\n                valueField = !this.utils.inArray(values.type, ['header', 'paragraph', 'file'].concat(optionFields));\n\n            advFields.push(this.textAttribute('name', values));\n            advFields.push(this.hiddenAttribute('entity_id', values));\n\n            if (values.type !== 'wysiwyg') {\n                advFields.push(this.textAttribute('label', values));\n            } else {\n                advFields.push(this.hiddenAttribute('value', values));\n            }\n\n            // Class\n            advFields.push(this.textAttribute('className', values));\n            advFields.push(this.textAttribute('style', values));\n\n            if (values.parentType !== 'other' || isOptionField) {\n\n                advFields.push(this.textAttribute('placeholder', values));\n                advFields.push(this.requiredField(values));\n                advFields.push(this.textAttribute('description', values));\n\n                if (values.type === 'checkbox' || values.type === 'checkboxtwo') {\n                    advFields.push(this.boolAttribute('toggle', values, {first: this.options.messages.toggle}));\n                }\n\n                values.size = values.size || 'm';\n                values.style = values.style || 'default';\n\n                //Help Text / Description Field\n                /* if (!this.utils.inArray(values.type, ['header', 'paragraph', 'button'])) {\n\n                 }*/\n\n                if (this.options.messages.subtypes[values.type]) {\n                    var optionData = this.options.messages.subtypes[values.type];\n                    advFields.push(this.selectAttribute('subtype', values, optionData));\n                }\n\n                if (values.type === 'number') {\n                    advFields.push(this.numberAttribute('min', values));\n                    advFields.push(this.numberAttribute('max', values));\n                    advFields.push(this.numberAttribute('step', values));\n                }\n\n                if (values.type === 'textinput') {\n                    advFields.push(this.selectAttribute('validation', values, this.options.messages.validations));\n                    advFields.push(this.textAttribute('regexp', values));\n                    advFields.push(this.textAttribute('errorMessage', values));\n                }\n\n                if (values.type === 'date') {\n                    values.validation = 'validate-date';\n                    advFields.push(this.hiddenAttribute('validation', values));\n                }\n\n                //TextArea Rows Attribute\n                if (values.type === 'textarea') {\n                    advFields.push(this.numberAttribute('rows', values));\n                }\n\n                if (valueField && values.type != 'googlemap') {\n                    advFields.push(this.textAttribute('value', values));\n                } else if (values.type == 'googlemap') {\n                    advFields.push(this.hiddenAttribute('value', values));\n                }\n\n                if (values.type === 'file') {\n                    advFields.push(this.textAttribute('allowed_extension', values));\n                    advFields.push(this.textAttribute('max_file_size', values));\n\n                    var labels = {\n                        first: this.options.messages.multipleFiles,\n                        second: this.options.messages.allowMultipleFiles\n                    };\n                    advFields.push(this.boolAttribute('multiple', values, labels));\n                }\n                /* other feature for future\n                if (values.type === 'checkbox' || values.type === 'radio') {\n                    advFields.push(this.boolAttribute('other', values, {\n                        first: this.options.messages.enableOther,\n                        second: this.options.messages.enableOtherMsg\n                    }));\n                }*/\n\n                if (isOptionField) {\n                    advFields.push(this.fieldOptions(values));\n                }\n\n                if (this.utils.inArray(values.type, ['textinput', 'textarea'])) {\n                    advFields.push(this.numberAttribute('maxlength', values));\n                }\n\n                // Append custom attributes as defined in typeUserAttrs option\n                if (this.options.typeUserAttrs[values.type]) {\n                    advFields.push(this.processTypeUserAttrs(this.options.typeUserAttrs[values.type], values));\n                }\n            }\n            var dependency = [];\n            if (values.dependency) {\n                dependency = values.dependency;\n            }\n            advFields.push(this.fieldDependencyArea(dependency, values.name));\n\n            advFields.push(this.selectAttribute('layout', values, this.options.messages.layouts));\n\n            advFields.push(this.hiddenAttribute('parentType', values));\n\n            return advFields.join('');\n        },\n\n\n        processTypeUserAttrs: function (typeUserAttr, values) {\n            var advField = [];\n\n            for (var attribute in typeUserAttr) {\n                if (typeUserAttr.hasOwnProperty(attribute)) {\n                    var orig = this.options.messages[attribute];\n                    var origValue = typeUserAttr[attribute].value;\n                    typeUserAttr[attribute].value = values[attribute] || typeUserAttr[attribute].value || '';\n\n                    if (typeUserAttr[attribute].label) {\n                        this.options.messages[attribute] = typeUserAttr[attribute].label;\n                    }\n\n                    if (typeUserAttr[attribute].options) {\n                        advField.push(selectUserAttrs(attribute, typeUserAttr[attribute]));\n                    } else {\n                        advField.push(inputUserAttrs(attribute, typeUserAttr[attribute]));\n                    }\n\n                    this.options.messages[attribute] = orig;\n                    typeUserAttr[attribute].value = origValue;\n                }\n            }\n\n            return advField.join('');\n        },\n\n        inputUserAttrs: function (name, attrs) {\n            var textAttrs = {\n                    id: name + '-' + this.lastID,\n                    title: attrs.description || attrs.label || name.toUpperCase(),\n                    name: name,\n                    type: attrs.type || 'text',\n                    className: ['fld-' + name]\n                },\n                label = '<label for=\"' + textAttrs.id + '\">' + this.options.messages[name] + '</label>';\n\n            if (!this.utils.inArray(textAttrs.type, ['checkbox', 'radio', 'checkboxtwo', 'radiotwo'])) {\n                textAttrs.className.push('form-control');\n            }\n\n            if (attrs.type === 'datetime') {\n                attrs.type = 'datetime-local';\n            }\n\n            textAttrs = Object.assign({}, attrs, textAttrs);\n            var textInput = '<input ' + this.utils.attrString(textAttrs) + '>',\n                inputWrap = '<div class=\"input-wrap\">' + textInput + '</div>';\n\n            return '<div class=\"form-group ' + name + '-wrap\">' + label + inputWrap + '</div>';\n        },\n\n        selectUserAttrs: function (name, options) {\n            var optis = Object.keys(options.options).map(function (val) {\n                    var attrs = {value: val};\n                    if (val === options.value) {\n                        attrs.selected = null;\n                    }\n                    return '<option ' + this.utils.attrString(attrs) + '>' + options.options[val] + '</option>';\n                }),\n                selectAttrs = {\n                    id: name + '-' + this.lastID,\n                    title: options.description || options.label || name.toUpperCase(),\n                    name: name,\n                    className: 'fld-' + name + ' form-control'\n                },\n                label = '<label for=\"' + selectAttrs.id + '\">' + this.options.messages[name] + '</label>';\n\n            Object.keys(options).filter(function (prop) {\n                return !utils.inArray(prop, ['value', 'options', 'label']);\n            }).forEach(function (attr) {\n                selectAttrs[attr] = options[attr];\n            });\n\n            var select = '<select ' + this.utils.attrString(selectAttrs) + '>' + optis.join('') + '</select>',\n                inputWrap = '<div class=\"input-wrap\">' + select + '</div>';\n            return '<div class=\"form-group ' + name + '-wrap\">' + label + inputWrap + '</div>';\n        },\n\n        boolAttribute: function (name, values, labels) {\n            if (this.options.typeUserAttrs[values.type] && this.options.typeUserAttrs[values.type][name]) {\n                return;\n            }\n\n            var checked = values[name] !== undefined ? 'checked' : '',\n                input = '<input type=\"checkbox\" class=\"fld-' + name + '\" name=\"' + name + '\" value=\"true\" ' + checked + ' id=\"' + name + '-' + this.lastID + '\"/> ',\n                left = [],\n                right = [input];\n\n            if (labels.first) {\n                left.unshift(this.label(labels.first));\n            }\n\n            if (labels.second) {\n                right.push(this.label(labels.second));\n            }\n\n            if (labels.content) {\n                right.push(labels.content);\n            }\n\n            right.unshift('<div class=\"input-wrap\">');\n            right.push('</div>');\n\n            return '<div class=\"form-group ' + name + '-wrap\">' + left.concat(right).join('') + '</div>';\n        },\n\n        label: function (txt) {\n            return '<label for=\"' + name + '-' + this.lastID + '\">' + txt + '</label>';\n        },\n\n        btnStyles: function (style, type) {\n            var tags = {\n                    button: 'btn'\n                },\n                styles = this.options.messages.styles[tags[type]],\n                styleField = '';\n\n            if (styles) {\n                var styleLabel = '<label>' + this.options.messages.style + '</label>';\n                styleField += '<input value=\"' + style + '\" name=\"style\" type=\"hidden\" class=\"btn-style\">';\n                styleField += '<div class=\"btn-group\" role=\"group\">';\n\n                Object.keys(this.options.messages.styles[tags[type]]).forEach(function (element) {\n                    var active = style === element ? 'active' : '';\n                    styleField += '<button value=\"' + element + '\" type=\"' + type + '\" class=\"' + active + ' btn-xs ' + tags[type] + ' ' + tags[type] + '-' + element + '\">' + this.options.messages.styles[tags[type]][element] + '</button>';\n                });\n\n                styleField += '</div>';\n\n                styleField = '<div class=\"form-group style-wrap\">' + styleLabel + ' ' + styleField + '</div>';\n            }\n\n            return styleField;\n        },\n\n        /**\n         * Add a number attribute to a field.\n         * @param  {String} attribute\n         * @param  {Object} values\n         * @return {String}\n         */\n        numberAttribute: function (attribute, values) {\n            if (this.options.typeUserAttrs[values.type] && this.options.typeUserAttrs[values.type][attribute]) {\n                return '';\n            }\n\n            var attrVal = values[attribute],\n                attrLabel = this.options.messages[attribute] || attribute,\n                placeholder = this.options.messages.placeholders[attribute],\n                inputConfig = {\n                    type: 'number',\n                    value: attrVal,\n                    name: attribute,\n                    min: '0',\n                    placeholder: placeholder,\n                    className: 'fld-' + attribute + ' form-control',\n                    id: attribute + '-' + this.lastID\n                },\n                numberAttribute = '<input ' + this.utils.attrString(this.utils.trimObj(inputConfig)) + '>',\n                inputWrap = '<div class=\"input-wrap\">' + numberAttribute + '</div>';\n\n            return '<div class=\"form-group ' + attribute + '-wrap\"><label for=\"' + inputConfig.id + '\">'\n                + attrLabel + '</label> ' + inputWrap + '</div>';\n\n        },\n\n        selectAttribute: function (attribute, values, optionData) {\n            if (this.options.typeUserAttrs[values.type] && this.options.typeUserAttrs[values.type][attribute]) {\n                return;\n            }\n            var self = this,\n                allowedTypes = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n            var selectOptions = optionData.map(function (option, i) {\n                    if (allowedTypes && allowedTypes.indexOf(option.type) === -1) {\n                        return false;\n                    }\n                    var optionAttrs = Object.assign({\n                        label: self.options.messages.option + ' ' + i,\n                        value: undefined\n                    }, option);\n\n                    if (values[attribute] != undefined) {\n                        try {\n                            var validationJson = JSON.parse(values[attribute].replace(/&quot;/g, '\"'));\n                        } catch (ex) {\n                            validationJson = {validation: values[attribute]};\n                        }\n\n                        if (validationJson.hasOwnProperty(\"validation\") && (option.value === validationJson.validation)) {\n                            optionAttrs.selected = true;\n                        }\n                    }\n\n                    return '<option ' + self.utils.attrString(self.utils.trimObj(optionAttrs)) + '>'\n                        + optionAttrs.label + '</option>';\n                }),\n                selectAttrs = {\n                    id: attribute + '-' + this.lastID,\n                    name: attribute,\n                    value: attribute,\n                    className: 'fld-' + attribute + ' form-control'\n                },\n\n                label = '<label for=\"' + selectAttrs.id + '\">' + (this.options.messages[attribute]\n                    || this.utils.capitalize(attribute)) + '</label>';\n\n\n            var select = '<select ' + this.utils.attrString(selectAttrs) + '>' + selectOptions.join('') + '</select>',\n                inputWrap = '<div class=\"input-wrap\">' + select + '</div>';\n\n            return '<div class=\"form-group ' + selectAttrs.name + '-wrap\">' + label + inputWrap + '</div>';\n        },\n\n        /**\n         * Generate some text inputs for field attributes, **will be replaced**\n         * @param  {String} attribute\n         * @param  {Object} values\n         * @return {String}\n         */\n        textAttribute: function (attribute, values) {\n            if (this.options.typeUserAttrs[values.type] && this.options.typeUserAttrs[values.type][attribute]) {\n                return '';\n            }\n\n            var textArea = ['paragraph'];\n\n            var attrVal = values[attribute] || '',\n                attrLabel = this.options.messages[attribute];\n            if (attribute === 'label' && this.utils.inArray(values.type, textArea)) {\n                attrLabel = this.options.messages.content;\n            }\n\n            var placeholderFields = ['textinput', 'textarea', 'dropdown'];\n            var placeholders = this.options.messages.placeholders,\n                placeholder = placeholders[attribute] || '',\n                attributefield = '',\n                noMakeAttr = [];\n            // Field has placeholder attribute\n            if (attribute === 'placeholder' && !this.utils.inArray(values.type, placeholderFields)) {\n                noMakeAttr.push(true);\n            }\n\n            if (!noMakeAttr.some(function (elem) {\n                return elem === true;\n            })) {\n                var inputConfig = {\n                    name: attribute,\n                    placeholder: placeholder,\n                    className: 'fld-' + attribute + ' form-control',\n                    id: attribute + '-' + this.lastID\n                };\n                var attributeLabel = '<label for=\"' + inputConfig.id + '\">' + attrLabel + '</label>';\n\n                if (attribute === 'label' && this.utils.inArray(values.type, textArea)\n                    || attribute === 'value' && values.type === 'textarea') {\n                    attributefield += '<textarea ' + this.utils.attrString(inputConfig) + '>' + attrVal + '</textarea>';\n                } else if (attribute === 'value' && values.type === 'date') {\n                    inputConfig.value = attrVal;\n                    inputConfig.type = 'date';\n                    attributefield += '<input ' + this.utils.attrString(inputConfig) + '>';\n                } else {\n                    inputConfig.value = attrVal;\n                    inputConfig.type = 'text';\n                    attributefield += '<input ' + this.utils.attrString(inputConfig) + '>';\n                }\n                var note = this.getNote(attribute, values),\n                    inputWrap = '<div class=\"input-wrap\">' + attributefield + note +'</div>';\n\n                attributefield = '<div class=\"form-group ' + attribute + '-wrap\">' + attributeLabel + ' ' + inputWrap + '</div>';\n            }\n\n            return attributefield;\n        },\n\n        getNote: function (attribute, values) {\n            var allowTypes = ['textinput', 'textarea', 'number'],\n                note = '';\n\n            if (attribute === 'value' && allowTypes.includes(values.type)) {\n                $.each(this.options.messages['notes'][attribute], function (index, noteData) {\n                    var variables = '',\n                        noteVariant ='';\n\n                    if (typeof values.entityType === 'undefined' || values.entityType === noteData.allowedEntityType) {\n                        noteVariant = '<a class=\"default-values-link\" href=\"#\">'\n                            + noteData['label']\n                            + '</a>';\n\n                        noteData.values.forEach(function (value) {\n                            variables += '<div class=\"variable\">' + value + '</div>'\n                        });\n                        noteVariant += '<div class=\"default-value-variants\">' + variables + '</div>';\n                        note += '<div class=\"value-note-wrap\">' + noteVariant + '</div>';\n                    }\n                });\n            }\n\n            return note;\n        },\n\n        hiddenAttribute: function (attribute, values) {\n            var attrValue = values[attribute] || '',\n                attributeField = '<input class=\"fld-' + attribute + ' form-control\" type=\"hidden\" name=\"'\n                    + attribute + '\" value=\"' + attrValue + '\">';\n\n            return attributeField;\n        },\n\n        requiredField: function (values) {\n            var noRequire = ['header', 'paragraph', 'button'],\n                noMake = [],\n                requireField = '';\n\n            if (this.utils.inArray(values.type, noRequire)) {\n                noMake.push(true);\n            }\n            if (!noMake.some(function (elem) {\n                return elem === true;\n            })) {\n                requireField = this.boolAttribute('required', values, {first: this.options.messages.required});\n            }\n\n            return requireField;\n        },\n\n        // Select field html, since there may be multiple\n        selectFieldOptions: function (name, optionData, multipleSelect) {\n            var optionInputType = {\n                    selected: multipleSelect ? 'checkbox' : 'radio'\n                },\n                optionDataOrder = ['value', 'label', 'selected'],\n                optionInputs = [];\n\n            optionData = Object.assign({selected: false, label: '', value: ''}, optionData);\n\n            for (var i = optionDataOrder.length - 1; i >= 0; i--) {\n                var prop = optionDataOrder[i];\n                if (optionData.hasOwnProperty(prop)) {\n                    var attrs = {\n                        type: optionInputType[prop] || 'text',\n                        'class': 'option-' + prop,\n                        value: optionData[prop],\n                        name: name + '-option'\n                    };\n\n                    if (this.options.messages.placeholders[prop]) {\n                        attrs.placeholder = this.options.messages.placeholders[prop];\n                    }\n\n                    if (prop === 'selected'\n                        && (optionData.selected === \"1\" || optionData.selected === true)\n                    ) {\n                        attrs.checked = optionData.selected;\n                    }\n\n                    optionInputs.push(this.utils.markup('input', null, attrs));\n                }\n            }\n\n            var removeAttrs = {\n                className: 'remove btn',\n                title: this.options.messages.removeMessage\n            };\n\n            optionInputs.push(this.utils.markup('a', this.options.messages.remove, removeAttrs));\n            var field = this.utils.markup('li', optionInputs);\n\n            return field.outerHTML;\n        },\n\n\n        cloneItem: function (currentItem) {\n            var self = this;\n            var currentId = currentItem.attr('id'),\n                type = currentItem.attr('type'),\n                ts = new Date().getTime(),\n                cloneName = type + '-' + ts;\n\n            var $clone = currentItem.clone();\n\n            $clone.find('[id]').each(function () {\n                this.id = this.id.replace(currentId, self.lastID);\n            });\n\n            $clone.find('[for]').each(function () {\n                this.setAttribute('for', this.getAttribute('for').replace(currentId, self.lastID));\n            });\n\n            $clone.each(function () {\n                $('e:not(.form-elements)').each(function () {\n                    var newName = this.getAttribute('name');\n                    newName = newName.substring(0, newName.lastIndexOf('-') + 1);\n                    newName = newName + ts.toString();\n                    this.setAttribute('name', newName);\n                });\n            });\n\n            $clone.find('.form-elements').find(':input').each(function () {\n                if (this.getAttribute('name') === 'name') {\n                    var newVal = this.getAttribute('value');\n                    newVal = newVal.substring(0, newVal.lastIndexOf('-') + 1);\n                    newVal = newVal + ts.toString();\n                    this.setAttribute('value', newVal);\n                }\n            });\n\n            $clone.attr('id', this.lastID);\n            $clone.attr('name', cloneName);\n            $clone.addClass('cloned');\n            $('.sortable-options', $clone).sortable();\n\n            if (this.options.typeUserEvents[type] && this.options.typeUserEvents[type].onclone) {\n                this.options.typeUserEvents[type].onclone($clone[0]);\n            }\n\n            this.lastID = this.helpers.incrementId(this.lastID);\n            return $clone;\n        },\n\n        observeFields: function ($cbUL, formbId) {\n            var self = this;\n            // Save field on change\n            this.sortableFields.on(\n                'change blur keyup click', '.form-elements input, .form-elements select, .form-elements textarea, .toggle-form',\n                self.saveAndUpdate()\n            );\n\n            $('li', $cbUL).click(function (e) {\n                self.helpers.stopIndex = undefined;\n                self.processControl($(this));\n                self.helpers.save();\n                e.preventDefault();\n            });\n\n            // callback to track disabled tooltips\n            this.sortableFields.on('mousemove', 'li.disabled', function (e) {\n                $('.frmb-tt', this).css({\n                    left: e.offsetX - 16,\n                    top: e.offsetY - 34\n                });\n            });\n\n            // callback to call disabled tooltips\n            this.sortableFields.on('mouseenter', 'li.disabled', function () {\n                self.helpers.disabledTT.add($(this));\n            });\n\n            // callback to call disabled tooltips\n            this.sortableFields.on('mouseleave', 'li.disabled', function () {\n                self.helpers.disabledTT.remove($(this));\n            });\n\n            // ---------------------- UTILITIES ---------------------- //\n            // delete options\n            this.sortableFields.on('click touchstart', '.remove', function (e) {\n                var $field = $(this).parents('.form-field:eq(0)');\n                e.preventDefault();\n                var optionsCount = $(this).parents('.sortable-options:eq(0)').children('li').length;\n                if (optionsCount <= 0) {\n                    self.options.notify.error('Error: ' + self.options.messages.minOptionMessage);\n                } else {\n                    $(this).parent('li').slideUp('250', function () {\n                        $(this).remove();\n                        self.helpers.updatePreview($field);\n                        self.helpers.save();\n                    });\n                }\n            });\n\n            // touch focus\n            this.sortableFields.on('touchstart', 'input', function (e) {\n                if (e.handled !== true) {\n                    if ($(this).attr('type') === 'checkbox') {\n                        $(this).trigger('click');\n                    } else {\n                        $(this).focus();\n                        var fieldVal = $(this).val();\n                        $(this).val(fieldVal);\n                    }\n                } else {\n                    return false;\n                }\n            });\n\n            // toggle fields\n            this.sortableFields.on('click touchstart', '.toggle-form, .close-field', function (e) {\n                e.stopPropagation();\n                e.preventDefault();\n                if (e.handled !== true) {\n                    var targetID = $(this).parents('.form-field:eq(0)').attr('id');\n                    self.helpers.toggleEdit(targetID);\n                    e.handled = true;\n                } else {\n                    return false;\n                }\n            });\n\n            this.sortableFields.on('change', '.prev-holder input, .prev-holder select', function (e) {\n                if (e.target.classList.contains('other-option') || $(e.target).attr('type') == 'googlemap') {\n                    return;\n                }\n                var field = $(e.target).closest('li.form-field')[0];\n                if (self.utils.inArray(field.type, ['checkbox', 'checkboxtwo'])) {\n                    field.querySelector('[class=\"option-value\"][value=\"' + e.target.value + '\"]')\n                        .parentElement.childNodes[0].checked = field\n                        .querySelector('.prev-holder input[value=\"' + e.target.value + '\"]').checked;\n                } else if (self.utils.inArray(field.type, ['listbox'])) {\n                    $(field).find('[class=\"option-selected\"]').attr('checked', false);\n                    $.each($(field).find('.prev-holder select').val(), function (key, value) {\n                        field.querySelector('[class=\"option-value\"][value=\"' + value + '\"]')\n                            .parentElement.childNodes[0].checked = true;\n                    });\n                } else if (self.utils.inArray(field.type, ['dropdown', 'rating', 'radio', 'radiotwo'])) {\n                    field.querySelector('[class=\"option-value\"][value=\"' + e.target.value + '\"]')\n                        .parentElement.childNodes[0].checked = true;\n                } else {\n                    document.getElementById('value-' + field.id).value = e.target.value;\n                }\n\n                self.helpers.save();\n            });\n\n            // update preview to wysiwyg\n            this.sortableFields.on('change', '.prev-holder [type=wysiwyg]', _.debounce(function () {\n                self.helpers.save();\n            }, 1000));\n\n            // update preview to label\n            this.sortableFields.on('keyup change', '[name=\"label\"]', function () {\n                $('.field-label', $(this).closest('li:not(.hone-field):not(.text-field):not(.hthree-field):not(.htwo-field)')).text($(this).val());\n            });\n\n            // remove error styling when users tries to correct mistake\n            this.sortableFields.delegate('input.error', 'keyup', function () {\n                $(this).removeClass('error');\n            });\n\n            // update preview for description\n            this.sortableFields.on('keyup', 'input[name=\"description\"]', function () {\n                var $field = $(this).parents('.form-field:eq(0)');\n                var closestToolTip = $('.tooltip-element', $field);\n                var ttVal = $(this).val();\n                if (ttVal !== '') {\n                    if (!closestToolTip.length) {\n                        var tt = '<span class=\"tooltip-element\" tooltip=\"' + ttVal + '\">?</span>';\n                        $('.field-label', $field).after(tt);\n                    } else {\n                        closestToolTip.attr('tooltip', ttVal).css('display', 'inline-block');\n                    }\n                } else {\n                    if (closestToolTip.length) {\n                        closestToolTip.css('display', 'none');\n                    }\n                }\n            });\n\n            this.sortableFields.on('change', '.fld-multiple', function (e) {\n                var newType = e.target.checked ? 'checkbox' : 'radio';\n\n                $(e.target).parents('.form-elements:eq(0)')\n                    .find('.sortable-options input.option-selected').each(function () {\n                    this.type = newType;\n                });\n            });\n\n            // format name attribute\n            this.sortableFields.on('blur', 'input.fld-name', function () {\n                this.value = self.helpers.safename(this.value);\n                if (this.value === '') {\n                    $(this).addClass('field-error').attr('placeholder', self.options.messages.cannotBeEmpty);\n                } else {\n                    $(this).removeClass('field-error');\n                }\n            });\n\n            this.sortableFields.on('blur', 'input.fld-maxlength', function () {\n                this.value = self.helpers.forcenumber(this.value);\n            });\n\n            // Copy field\n            this.sortableFields.on('click touchstart', '.icon-copy', function (e) {\n                e.preventDefault();\n                var currentItem = $(this).parents('li');\n                var $clone = self.cloneItem(currentItem);\n                $clone.insertAfter(currentItem);\n                self.helpers.updatePreview($clone, currentItem);\n                self.helpers.save();\n            });\n\n            // Delete field\n            this.sortableFields.on('click touchstart', self.selectors.deleteButton, function (event) {\n                var buttonPosition = this.getBoundingClientRect(),\n                    bodyRect = document.body.getBoundingClientRect(),\n                    coords = {\n                        pageX: buttonPosition.left + buttonPosition.width / 2,\n                        pageY: buttonPosition.top - bodyRect.top - 12\n                    },\n                    deleteID = $(this).parents(self.selectors.fieldFirst).attr('id'),\n                    $field = $(document.getElementById(deleteID)),\n                    warnH3,\n                    warnMessage;\n\n                event.preventDefault();\n\n                self.removeWysiwygData(event.target);\n\n                document.addEventListener('modalClosed', function () {\n                    $field.removeClass(self.classes.delete);\n                }, false);\n\n                // Check if user is sure they want to remove the field\n                if (self.options.fieldRemoveWarn) {\n                    warnH3 = self.utils.markup('h3', self.options.messages.warning);\n                    warnMessage = self.utils.markup('p', self.options.messages.fieldRemoveWarning);\n\n                    self.helpers.confirm([warnH3, warnMessage], function () {\n                        return self.helpers.removeField(deleteID);\n                    }, coords);\n\n                    $field.addClass(self.classes.delete);\n                } else {\n                    self.helpers.removeField(deleteID);\n                }\n            });\n\n            // Update button style selection\n            this.sortableFields.on('click', '.style-wrap button', function () {\n                var styleVal = $(this).val(),\n                    $parent = $(this).parent(),\n                    $btnStyle = $parent.prev('.btn-style');\n                $btnStyle.val(styleVal);\n                $(this).siblings('.btn').removeClass('active');\n                $(this).addClass('active');\n                self.saveAndUpdate().call($parent);\n            });\n\n            // Attach a callback to toggle required asterisk\n            this.sortableFields.on('click', 'input.fld-required', function () {\n                var requiredAsterisk = $(this).parents('li.form-field').find('.required-asterisk');\n                requiredAsterisk.toggle();\n            });\n\n            // Attach a callback to add new options\n            this.sortableFields.on('click', '.add-opt', function (e) {\n                e.preventDefault();\n                var $optionWrap = $(this).parents('.field-options:eq(0)'),\n                    $multiple = $('[name=\"multiple\"]', $optionWrap),\n                    $firstOption = $('.option-selected:eq(0)', $optionWrap),\n                    isMultiple = $multiple.length ? $multiple.prop('checked') : $firstOption.attr('type') === 'checkbox',\n                    name = $firstOption.attr('name') || $optionWrap.attr('name'),\n                    sortOptions = $('.sortable-options', $optionWrap);\n\n                if (sortOptions.attr('dependent')) {\n                    sortOptions.append(self.createDependencyRow(false, false, false, name, false));\n                } else {\n                    sortOptions.append(self.selectFieldOptions(name, false, isMultiple));\n                }\n            });\n\n            this.sortableFields.on('mouseover mouseout', '.remove, .del-button', function () {\n                $(this).parents('li:eq(0)').toggleClass('delete');\n            });\n\n            this.sortableFields.on('change', '[name=\"dependency-field\"]', function (e) {\n                var fieldName = this.value,\n                    field = self.findField(fieldName),\n                    values = [],\n                    selects = $(this).parent('li').find('select');\n\n                if (field && field.values) {\n                    values = field.values;\n                    values = self.createDependencyRow(fieldName, '', values, false, true);\n                    $(this).find('[selected=\"selected\"]').removeAttr('selected');\n                    $(this).find('[value=\"' + $(this).val() + '\"]').attr('selected', true);\n                    if (selects.length > 1) {\n                        selects.last().replaceWith(values);\n                    } else {\n                        selects.last().after(values);\n                    }\n                } else {\n                    $(this).parent('li').find('select').last().remove();\n                }\n            });\n\n            if (self.options.showActionButtons) {\n                // View XML\n                var xmlButton = $(document.getElementById(formbId + '-view-data'));\n                xmlButton.click(function (e) {\n                    e.preventDefault();\n                    self.helpers.showData();\n                });\n\n                // Clear all fields in form editor\n                var clearButton = $(document.getElementById(formbId + '-clear-all'));\n                clearButton.click(function () {\n                    var fields = $('li.form-field');\n                    var buttonPosition = this.getBoundingClientRect(),\n                        bodyRect = document.body.getBoundingClientRect(),\n                        coords = {\n                            pageX: buttonPosition.left + buttonPosition.width / 2,\n                            pageY: buttonPosition.top - bodyRect.top - 12\n                        };\n\n                    if (fields.length) {\n                        self.helpers.confirm(self.options.messages.clearAllMessage, function () {\n                            self.helpers.removeAllfields();\n                            self.options.notify.success(self.options.messages.allFieldsRemoved);\n                            self.helpers.save();\n                        }, coords);\n                    } else {\n                        self.helpers.dialog('There are no fields to clear', {pageX: coords.pageX, pageY: coords.pageY});\n                    }\n                });\n            }\n        },\n\n        /**\n         * Remove cached wysiwyg content by wysiwyg name\n         *\n         * @param  {Object} target - DOM element, target of an event\n         * @returns {void}\n         */\n        removeWysiwygData: function (target) {\n            var selector = this.selectors.wysiwygContainer.replace('{id}', target.id.replace('del_', '')),\n                name = $(target).closest(selector).find(this.selectors.wysiwygField).attr('name');\n\n            if (name) {\n                this.helpers.removeWysiwygHtml(name);\n            }\n        },\n\n        fieldDependencyArea: function (values, name) {\n            var self = this,\n                optionActions = [this.utils.markup('a', this.options.messages.addOption, {className: 'add add-opt'})],\n                fieldOptions = ['<label class=\"false-label\">' + this.options.messages.dependencyTitle + '</label>'];\n\n            fieldOptions.push('<div class=\"sortable-options-wrap\">');\n\n            fieldOptions.push('<ol class=\"sortable-options\" dependent=\"true\">');\n\n            this.utils.forEach(values, function (i, dependency) {\n                fieldOptions.push(self.createDependencyRow(dependency.field, dependency.value, false, false, false));\n            });\n\n            fieldOptions.push('</ol>');\n            fieldOptions.push(this.utils.markup('div', optionActions, {className: 'option-actions'}).outerHTML);\n            fieldOptions.push('</div>');\n\n            return this.utils.markup('div', fieldOptions.join(''), {\n                className: 'form-group field-options',\n                name: name\n            }).outerHTML;\n        },\n\n        createDependencyRow: function (selectedField, selectedValue, value, currentField, onlyValueSelect) {\n            var optionInputs = [],\n                formData = this.getParsedFormData(),\n                self = this,\n                allowedDependencyTypes = ['no-select', 'dropdown', 'checkbox', 'radio', 'checkboxtwo', 'radiotwo', 'listbox'],\n                updateValues = function (index) {\n                    var label = index.label\n                        ? self.utils.cutJs(index.label)\n                        : '';\n                    var option = {\n                        selected: false,\n                        label: label,\n                        value: index.name || index.value,\n                        type: index.type\n                    };\n\n                    if (currentField && option.value == currentField) {\n                        return false;\n                    }\n\n                    if (selectedField && option.value == selectedField) {\n                        option.selected = 'selected';\n                    }\n\n                    return option;\n                };\n\n            optionInputs.push(\n                $(this.selectAttribute(\n                    'dependency-field',\n                    '',\n                    [{\n                        name: 'empty',\n                        label: 'Choose an Option...',\n                        type: 'no-select'\n                    }].concat(formData.map(updateValues)),\n                    allowedDependencyTypes\n                )).find('select')[0]\n            );\n\n            if (selectedField) {\n                selectedField = self.findField(selectedField);\n                if (selectedField && selectedField.values) {\n                    value = selectedField.values;\n                    selectedField = selectedValue;\n                    value = value.map(updateValues);\n                }\n            }\n\n            if (typeof value != 'undefined' && value) {\n                optionInputs.push($(this.selectAttribute('dependency-value', '', value)).find('select')[0]);\n            }\n\n            var removeAttrs = {\n                className: 'remove btn',\n                title: this.options.messages.removeMessage\n            };\n\n            optionInputs.push(this.utils.markup('a', this.options.messages.remove, removeAttrs));\n            var field = this.utils.markup('li', optionInputs, {className: 'dependent-field'});\n            if (onlyValueSelect) {\n                field = $(field).find('select').last()[0];\n            }\n\n            return field.outerHTML;\n        },\n\n        getParsedFormData: function () {\n            var formData = null;\n\n            try {\n                formData = JSON.parse(this.formData);\n            } catch (e) {\n                formData = this.formData;\n            }\n\n            return formData;\n        },\n\n        findField: function (name) {\n            var field = null;\n\n            this.getParsedFormData().forEach(function (element) {\n                if (element.name == name) {\n                    field = element;\n                }\n            });\n\n            return field;\n        }\n    });\n    return $.mage.customFormBuilder;\n});\n","Amasty_Customform/js/am-google-map.js":"define([\n    'jquery',\n    'Magento_Ui/js/modal/modal'\n], function ($) {\n    'use strict';\n\n    $.widget('mage.amGoogleMap', {\n        options: {\n            defaultPosition: {\n                lat: 0,\n                lng: 0\n            },\n            position: null,\n            enabledMarker: true,\n            showFormattedAddress: false,\n            styles: null\n        },\n        zoom: 1,\n        map: null,\n\n        _create: function () {\n            this.mapInput = this.element.find('input').hide();\n            if (typeof google != 'undefined' && google.maps) {\n                if (!this.options.position) {\n                    this.options.position = this.options.defaultPosition;\n                }\n                if (this.options.zoom) {\n                    this.zoom = parseInt(this.options.zoom);\n                }\n\n                if (this.element.find('.map').length == 0) {\n                    this.element.prepend($('<div>',\n                        {\n                            'class': 'map'\n                        }\n                    ));\n                }\n                var map = new google.maps.Map(\n                    this.element.find('.map')[0], {zoom: this.zoom, center: this.options.position}\n                );\n                this.map = map;\n                if (this.options.styles) {\n                    var previousStyles = $(this.map.getDiv()).attr('style');\n                    if (!previousStyles) {\n                        previousStyles = '';\n                    }\n                    $(this.map.getDiv()).attr(\n                        'style',\n                        previousStyles + ' ' + this.options.styles\n                    );\n                }\n                this.mapInput.val(this.options.position);\n\n                this.currentMarker = new google.maps.Marker({position: this.options.position, map: map});\n\n                if (this.options.enabledMarker) {\n                    google.maps.event.addListener(map, 'click', function (event) {\n                        this.moveMarker(event.latLng);\n                    }.bind(this));\n                }\n\n                this.map.addListener('zoom_changed', function () {\n                    this.element.find('input.amform-googlemap').trigger('change');\n                }.bind(this));\n\n                if (this.options.showFormattedAddress) {\n                    this.showAddress();\n                }\n\n                var searchbox = this.searchBox();\n\n                google.maps.event.addListenerOnce(this.map, 'tilesloaded', function () {\n                    searchbox.show();\n                });\n            }\n        },\n\n        getPosition: function () {\n            return this.currentMarker.getPosition();\n        },\n\n        searchBox: function () {\n            this.element.prepend($('<input>',\n                {\n                    'class': 'searchbox'\n                }\n            ).hide());\n\n            var self = this,\n                input = this.element.find('.searchbox'),\n                searchBox = new google.maps.places.SearchBox(input[0]);\n            this.map.controls[google.maps.ControlPosition.LEFT_BOTTOM].push(input[0]);\n\n            // disable submit from on search\n            input.onkeypress = function (e) {\n                var key = e.charCode || e.keyCode || 0;\n                if (key == 13) {\n                    e.preventDefault();\n                }\n            };\n            searchBox.addListener('places_changed', function (event) {\n                var places = searchBox.getPlaces();\n\n                if (places.length == 0) {\n                    return;\n                }\n\n                var bounds = new google.maps.LatLngBounds();\n                places.forEach(function (place) {\n                    if (!place.geometry) {\n                        return;\n                    }\n\n                    if (self.options.enabledMarker) {\n                        self.moveMarker(place.geometry.location);\n                    }\n\n                    if (place.geometry.viewport) {\n                        bounds.union(place.geometry.viewport);\n                    } else {\n                        bounds.extend(place.geometry.location);\n                    }\n                });\n                self.map.fitBounds(bounds);\n            });\n\n            return input;\n        },\n\n        moveMarker: function (location) {\n            if (this.currentMarker) {\n                this.currentMarker.setMap(null);\n            }\n            this.currentMarker = new google.maps.Marker({\n                position: location,\n                map: this.map\n            });\n            this.mapInput.val(location);\n            this.element.find('input.amform-googlemap').trigger('change');\n        },\n\n        showAddress: function () {\n            if (this.element.find('.am-address').length == 0) {\n                this.element.prepend($('<div>',\n                    {\n                        'class': 'am-address'\n                    }\n                ));\n            }\n            var geocoder = new google.maps.Geocoder(),\n                addressField = this.element.find('.am-address'),\n                position = this.getPosition();\n\n            geocoder.geocode({\n                'latLng': position\n            }, function (results, status) {\n                if (status == google.maps.GeocoderStatus.OK) {\n                    if (results[0]) {\n                        addressField.html(results[0].formatted_address);\n                    }\n                } else {\n                    addressField.html(position.toString());\n                }\n            });\n        },\n\n        getZoom: function () {\n            return this.map.getZoom();\n        }\n    });\n\n    return $.mage.amGoogleMap;\n});\n","Amasty_Customform/js/form-render.js":"// Element.remove() polyfill\n/* eslint-disable one-var, vars-on-top, max-depth, no-shadow */\n\ndefine([\n    'jquery',\n    'mage/url',\n    'mage/translate',\n    'mage/calendar',\n    'Magento_Ui/js/modal/modal'\n], function ($, urlBuilder) {\n    'use strict';\n\n    if (!('remove' in Element.prototype)) {\n        Element.prototype.remove = function () {\n            if (this.parentNode) {\n                this.parentNode.removeChild(this);\n            }\n        };\n    }\n\n    // Event polyfill\n    if (typeof Event !== 'function') {\n        (function () {\n            window.Event = function (evt) {\n                var event = document.createEvent('Event');\n\n                event.initEvent(evt, true, true);\n\n                return event;\n            };\n        })();\n    }\n\n    // Object.assign polyfill\n    if (typeof Object.assign != 'function') {\n        Object.assign = function (target) {\n            if (target == null) {\n                throw new TypeError('Cannot convert undefined or null to object');\n            }\n\n            target = Object(target);\n\n            for (var index = 1; index < arguments.length; index++) {\n                var source = arguments[index];\n\n                if (source !== null) {\n                    for (var key in source) {\n                        if (Object.prototype.hasOwnProperty.call(source, key)) {\n                            target[key] = source[key];\n                        }\n                    }\n                }\n            }\n\n            return target;\n        };\n    }\n\n    'use strict';\n\n\n    (function ($) {\n        var Toggle = function Toggle(element, options) {\n            var defaults = {\n                theme: 'fresh',\n                messages: {\n                    off: 'Off',\n                    on: 'On'\n                }\n            },\n            opts = $.extend(defaults, options),\n                $kcToggle = $('<div class=\"kc-toggle\"></div>').insertAfter(element).append(element);\n\n            $kcToggle.toggleClass('on', element.is(':checked'));\n\n            var kctOn = '<div class=\"kct-on\">' + opts.messages.on + '</div>',\n                kctOff = '<div class=\"kct-off\">' + opts.messages.off + '</div>',\n                kctHandle = '<div class=\"kct-handle\"></div>',\n                kctInner = '<div class=\"kct-inner\">' + kctOn + kctHandle + kctOff + '</div>';\n\n            $kcToggle.append(kctInner);\n\n            $kcToggle.click(function () {\n                element.attr('checked', !element.attr('checked'));\n                $(this).toggleClass('on');\n            });\n        };\n\n        $.fn.kcToggle = function (options) {\n            var toggle = this;\n\n            return toggle.each(function () {\n                var element = $(this),\n                    kcToggle;\n\n                if (element.data('kcToggle')) {\n                    return;\n                }\n\n                kcToggle = new Toggle(element, options);\n                element.data('kcToggle', kcToggle);\n            });\n        };\n    })($);\n\n    'use strict';\n\n    // eslint-disable-next-line newline-after-var\n    var _typeof = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? function (obj) {\n        return typeof obj;\n    } : function (obj) {\n        return obj && typeof Symbol === 'function'\n            && obj.constructor === Symbol\n            && obj !== Symbol.prototype ? 'symbol' : typeof obj;\n    },\n\n    fbUtils = {};\n    fbUtils.amProgressId = 'form_submit_loading';\n    fbUtils.amImageContainerId = 'loading_image_container';\n    fbUtils.formOptions = [];\n\n    // cleaner syntax for testing indexOf element\n    fbUtils.inArray = function (needle, haystack) {\n        return haystack.indexOf(needle) !== -1;\n    };\n\n    /**\n     * Remove null or undefined values\n     * @param  {Object} attrs {attrName: attrValue}\n     * @return {Object}       Object trimmed of null or undefined values\n     */\n    fbUtils.trimObj = function (attrs) {\n        var xmlRemove = [null, undefined, '', false, 'false'];\n\n        for (var attr in attrs) {\n            if (fbUtils.inArray(attrs[attr], xmlRemove)) {\n                delete attrs[attr];\n            } else if (Array.isArray(attrs[attr])) {\n                if (!attrs[attr].length) {\n                    delete attrs[attr];\n                }\n            }\n        }\n\n        return attrs;\n    };\n\n    /**\n     * Test if attribute is a valid HTML attribute\n     * @param  {String} attr\n     * @return {Boolean}\n     */\n    fbUtils.validAttr = function (attr) {\n        var invalid = [\n            'values', 'enableOther', 'other', 'label',\n            'validation_fields', 'subtype', 'dependency',\n            'map_position'\n        ];\n\n        return !fbUtils.inArray(attr, invalid);\n    };\n\n    /**\n     * Convert an attrs object into a string\n     *\n     * @param  {Object} attrs object of attributes for markup\n     * @return {string}\n     */\n    fbUtils.attrString = function (attrs) {\n        var attributes = [];\n\n        for (var attr in attrs) {\n            if (attrs.hasOwnProperty(attr) && fbUtils.validAttr(attr)) {\n                if (attr === 'placeholder') {\n                    attributes.push(attr + '=\"' + attrs[attr] + '\"');\n                } else {\n                    attr = fbUtils.safeAttr(attr, attrs[attr]);\n                    attributes.push(attr.name + attr.value);\n                }\n            }\n        }\n\n        return attributes.join(' ');\n    };\n\n    /**\n     * Convert attributes to markup safe strings\n     * @param  {String} name  attribute name\n     * @param  {String} value attribute value\n     * @return {Object}       {attrName: attrValue}\n     */\n    fbUtils.safeAttr = function (name, value) {\n        var valString = void 0;\n\n        name = fbUtils.safeAttrName(name);\n\n        if (value) {\n            if (Array.isArray(value)) {\n                valString = fbUtils.escapeAttr(value.join(' '));\n            } else {\n                if (typeof value === 'boolean') {\n                    value = value.toString();\n                }\n\n                value = value.toString();\n                valString = fbUtils.escapeAttr(value.replace(',', ' ').trim());\n            }\n        }\n\n        value = value ? '=\"' + valString + '\"' : '';\n\n        return {\n            name: name,\n            value: value\n        };\n    };\n\n    fbUtils.safeAttrName = function (name) {\n        var safeAttr = {\n            className: 'class'\n        };\n\n        return safeAttr[name] || fbUtils.hyphenCase(name);\n    };\n\n    /**\n     * Convert strings into lowercase-hyphen\n     *\n     * @param  {String} str\n     * @return {String}\n     */\n    fbUtils.hyphenCase = function (str) {\n        str = str.replace(/[^\\w\\s\\-]/gi, '');\n        str = str.replace(/([A-Z])/g, function ($1) {\n            return '-' + $1.toLowerCase();\n        });\n\n        return str.replace(/\\s/g, '-').replace(/^-+/g, '');\n    };\n\n    /**\n     * convert a hyphenated string to camelCase\n     * @param  {String} str\n     * @return {String}\n     */\n    fbUtils.camelCase = function (str) {\n        return str.replace(/-([a-z])/g, function (m, w) {\n            return w.toUpperCase();\n        });\n    };\n\n    /**\n     * Generate markup wrapper where needed\n     *\n     * @param  {string} tag\n     * @return {String}\n     */\n    fbUtils.markup = function (tag) {\n        var content = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '',\n            attrs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n            contentType = void 0,\n            field = document.createElement(tag),\n\n            getContentType = function getContentType(content) {\n                return Array.isArray(content) ?\n                    'array' : typeof content === 'undefined' ? 'undefined' : _typeof(content);\n            },\n\n            appendContent = {\n                string: function string(content) {\n                    field.innerHTML = content;\n                },\n                object: function object(content) {\n                    return field.appendChild(content);\n                },\n                array: function array(content) {\n                    for (var i = 0; i < content.length; i++) {\n                        contentType = getContentType(content[i]);\n                        appendContent[contentType](content[i]);\n                    }\n                }\n            };\n\n        for (var attr in attrs) {\n            if (attrs.hasOwnProperty(attr)) {\n                var name = fbUtils.safeAttrName(attr);\n\n                field.setAttribute(name, attrs[attr]);\n            }\n        }\n\n        contentType = getContentType(content);\n\n        if (content) {\n            appendContent[contentType].call(this, content);\n        }\n\n        return field;\n    };\n\n    /**\n     * Convert html element attributes to key/value object\n     * @return {Object} ex: {attrName: attrValue}\n     * @param {object} elem\n     */\n    fbUtils.parseAttrs = function (elem) {\n        var attrs = elem.attributes,\n            data = {};\n\n        fbUtils.forEach(attrs, function (attr) {\n            var attrVal = attrs[attr].value;\n\n            if (attrVal.match(/false|true/g)) {\n                attrVal = attrVal === 'true';\n            } else if (attrVal.match(/undefined/g)) {\n                attrVal = undefined;\n            }\n\n            if (attrVal) {\n                data[attrs[attr].name] = attrVal;\n            }\n        });\n\n        return data;\n    };\n\n    /**\n     * Convert field options to optionData\n     * @return {Array} optionData array\n     * @param {object} field\n     */\n    fbUtils.parseOptions = function (field) {\n        var options = field.getElementsByTagName('option'),\n            optionData = {},\n            data = [];\n\n        if (options.length) {\n            for (var i = 0; i < options.length; i++) {\n                optionData = fbUtils.parseAttrs(options[i]);\n                optionData.label = options[i].textContent;\n                data.push(optionData);\n            }\n        }\n\n        return data;\n    };\n\n    /**\n     * Parse XML formData\n     * @param  {String} xmlString\n     * @return {Array} formData array\n     */\n    fbUtils.parseXML = function (xmlString) {\n        var parser = new window.DOMParser(),\n            xml = parser.parseFromString(xmlString, 'text/xml'),\n            formData = [];\n\n        if (xml) {\n            var fields = xml.getElementsByTagName('field');\n\n            for (var i = 0; i < fields.length; i++) {\n                var fieldData = fbUtils.parseAttrs(fields[i]);\n\n                if (fields[i].children.length) {\n                    fieldData.values = fbUtils.parseOptions(fields[i]);\n                }\n\n                formData.push(fieldData);\n            }\n        }\n\n        return formData;\n    };\n\n    /**\n     * Escape markup, so it can be displayed rather than rendered\n     * @param  {String} html markup\n     * @return {String} escaped html\n     */\n    fbUtils.escapeHtml = function (html) {\n        var escapeElement = document.createElement('textarea');\n\n        escapeElement.textContent = html;\n\n        return escapeElement.innerHTML;\n    };\n\n    // Escape an attribute\n    fbUtils.escapeAttr = function (str) {\n        var match = {\n            '\"': '&quot;',\n            '&': '&amp;',\n            '<': '&lt;',\n            '>': '&gt;'\n        };\n\n        function replaceTag(tag) {\n            return match[tag] || tag;\n        }\n\n        return typeof str === 'string' ? str.replace(/[\"&<>]/g, replaceTag) : str;\n    };\n\n    // Escape attributes\n    fbUtils.escapeAttrs = function (attrs) {\n        for (var attr in attrs) {\n            if (attrs.hasOwnProperty(attr)) {\n                attrs[attr] = fbUtils.escapeAttr(attrs[attr]);\n            }\n        }\n\n        return attrs;\n    };\n\n    // forEach that can be used on nodeList\n    fbUtils.forEach = function (array, callback, scope) {\n        for (var i = 0; i < array.length; i++) {\n            callback.call(scope, i, array[i]); // passes back stuff we need\n        }\n    };\n\n    /**\n     * Remove duplicates from an array of elements\n     * @return {Array} array with only unique values\n     * @param {array} array\n     */\n    fbUtils.unique = function (array) {\n        return array.filter(function (elem, pos, arr) {\n            return arr.indexOf(elem) === pos;\n        });\n    };\n\n    /**\n     * Generate preview markup\n     * @param  {object} fieldData\n     * @param {object} opts\n     * @return {string} preview markup for field\n     */\n    fbUtils.fieldRender = function (fieldData, opts) {\n        var preview = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false,\n            utils = fbUtils,\n            fieldMarkup = '',\n            fieldLabel = '',\n            optionsMarkup = '',\n            fieldLabelText = fieldData.label || '',\n            fieldDesc = fieldData.description || '',\n            fieldRequired = '',\n            fieldOptions = fieldData.values;\n\n        fieldData.name = preview ? fieldData.name + '-preview' : fieldData.name;\n        fieldData.id = fieldData.name;\n\n        if (\n            utils.inArray(\n                fieldData.type,\n                ['textinput', 'number', 'file', 'dropdown', 'listbox', 'textarea']\n            ) && fieldData.className.indexOf('form-control') === -1\n        ) {\n            fieldData.className += ' form-control';\n        }\n\n        if (fieldData.type === 'listbox') {\n            fieldData.multiple = true;\n        }\n\n        fieldData.name = fieldData.multiple ? fieldData.name + '[]' : fieldData.name;\n        fieldData.type = fieldData.subtype || fieldData.type;\n\n        var withoutLabel = false,\n            ratingClass = '',\n            withBr = true;\n\n        switch (fieldData.type) {\n            case 'textinput':\n                fieldData.type = 'text';\n                break;\n            case 'textarea':\n                fieldData.type = 'textarea';\n                break;\n            case 'hidden':\n                fieldData.type = 'hidden';\n                withoutLabel = true;\n                break;\n            case 'text':\n                fieldData.type = 'div';\n                withoutLabel = true;\n                break;\n            case 'hone':\n                fieldData.type = 'h1';\n                withoutLabel = true;\n                break;\n            case 'htwo':\n                fieldData.type = 'h2';\n                withoutLabel = true;\n                break;\n            case 'hthree':\n                fieldData.type = 'h3';\n                withoutLabel = true;\n                break;\n            case 'number':\n                fieldData.type = 'number';\n                break;\n            case 'rating':\n                ratingClass = 'amform-rating-container ';\n                withBr = false;\n            // eslint-disable-next-line no-fallthrough\n            case 'radiotwo':\n                withBr = false;\n            // eslint-disable-next-line no-fallthrough\n            case 'radio':\n                fieldData.type = 'radio-group';\n                break;\n            case 'checkboxtwo':\n                withBr = false;\n            // eslint-disable-next-line no-fallthrough\n            case 'checkbox':\n                fieldData.type = 'checkbox-group';\n                break;\n            case 'listbox':\n                fieldData.type = 'select';\n                break;\n            case 'dropdown':\n                fieldData.type = 'select';\n                break;\n            case 'daterange':\n                fieldData.type = 'date';\n                break;\n            case 'datetime':\n                fieldData.type = 'datetime-local';\n                break;\n            case 'wysiwyg':\n                fieldData.type = 'wysiwyg';\n                break;\n        }\n\n        fieldData['data-amcform-js'] = fieldData.id;\n\n        if (fieldData.required) {\n            delete fieldData.required;\n            fieldData['aria-required'] = 'true';\n            fieldData.className += ' required-entry';\n            fieldRequired = '<span class=\"required\">*</span>';\n        }\n\n        if (!withoutLabel) {\n            if (fieldDesc) {\n                fieldDesc = '<span class=\"tooltip-element\" tooltip=\"' + fieldDesc + '\">?</span>';\n            }\n\n            fieldLabel = '<label for=\"' + fieldData.id + '\" class=\"fb-' + fieldData.type + '-label label\">'\n                + fieldLabelText + ' ' + fieldRequired + ' ' + fieldDesc\n                + '</label>';\n        }\n\n        var fieldLabelVal = fieldData.label;\n\n        delete fieldData.label;\n        delete fieldData.description;\n\n        var fieldDataString = fbUtils.attrString(fieldData);\n\n        switch (fieldData.type) {\n            case 'wysiwyg':\n                fieldMarkup = '<div ' + fieldDataString + '>' + (fieldData.value || '') + '</div>';\n                break;\n            case 'textarea':\n            case 'rich-text':\n                delete fieldData.type;\n\n                var fieldVal = fieldData.value || '';\n\n                fieldMarkup = '<textarea ' + fieldDataString + '>' + fieldVal + '</textarea>';\n                break;\n            case 'select':\n                var optionAttrsString;\n\n                fieldData.type = fieldData.type.replace('-group', '');\n\n                if (fieldOptions) {\n                    if (fieldData.placeholder) {\n                        optionsMarkup += '<option disabled selected>' + fieldData.placeholder + '</option>';\n                    }\n\n                    for (var i = 0; i < fieldOptions.length; i++) {\n                        if (!fieldOptions[i].selected || fieldData.placeholder) {\n                            delete fieldOptions[i].selected;\n                        }\n\n                        if (!fieldOptions[i].label) {\n                            fieldOptions[i].label = '';\n                        }\n\n                        optionAttrsString = fbUtils.attrString(fieldOptions[i]);\n                        optionsMarkup += '<option ' + optionAttrsString + '>' + fieldOptions[i].label + '</option>';\n                    }\n                }\n\n                fieldMarkup = '<select ' + fieldDataString + '>' + optionsMarkup + '</select>';\n                break;\n            case 'checkbox-group':\n                if (fieldData.toggle === '1') {\n                    setTimeout(function () {\n                        $('[id^=\"' + fieldData.id + '\"]').kcToggle();\n                    }, 100);\n                }\n            // eslint-disable-next-line no-fallthrough\n            case 'rating':\n            case 'radio-group':\n                var optionAttrs = void 0;\n\n                fieldData.type = fieldData.type.replace('-group', '');\n\n                if (fieldData.type === 'checkbox') {\n                    fieldData.name += '[]';\n                }\n\n                if (ratingClass) {\n                    fieldOptions = fieldOptions.reverse();\n                }\n\n                if (fieldOptions) {\n                    var _optionAttrsString = void 0;\n\n                    for (var _i = 0; _i < fieldOptions.length; _i++) {\n                        optionAttrs = Object.assign({value: '', label: ''}, fieldData, fieldOptions[_i]);\n\n                        if (optionAttrs.selected) {\n                            delete optionAttrs.selected;\n                            optionAttrs.checked = null;\n                        }\n\n                        optionAttrs.id = fieldData.id + '-' + _i;\n                        _optionAttrsString = fbUtils.attrString(optionAttrs);\n\n                        var classNameLabel = ' class=\"amform-versiontwo-label\"',\n                            delimeter = '';\n\n                        if (withBr) {\n                            delimeter = '<br>';\n                            // eslint-disable-next-line no-use-before-define\n                            className = '';\n                        } else if (!ratingClass) {\n                            optionsMarkup += '<div class=\"amform-groupv2\">';\n                            delimeter = '</div>';\n                        }\n\n                        var labelText = ratingClass ? '' : optionAttrs.label;\n\n                        optionsMarkup += '<input ' + _optionAttrsString + ' /' + '> <label for=\"'\n                            + optionAttrs.id + '\" ' + classNameLabel + '>' + labelText + '</label>' + delimeter;\n                    }\n\n                    if (fieldData.other) {\n                        var otherOptionAttrs = {\n                            id: fieldData.id + '-' + 'other',\n                            className: fieldData.className + ' other-option',\n                            onclick: 'fbUtils.otherOptionCB(\\'' + fieldData.id + '-other\\')'\n                        };\n\n                        _optionAttrsString = fbUtils.attrString(Object.assign({}, fieldData, otherOptionAttrs));\n\n                        optionsMarkup += '<input ' + _optionAttrsString + ' /' + '>'\n                            + '<label for=\"' + otherOptionAttrs.id + '\">'\n                            + opts.messages.other + '</label> <input type=\"text\" name=\"'\n                            + fieldData.name + '\" id=\"' + otherOptionAttrs.id\n                            + '-value\" style=\"display:none;\"' + '/' + '>';\n                    }\n                }\n                fieldMarkup = '<div class=\"' + ratingClass + fieldData.type + '-group\">' + optionsMarkup + '</div>';\n                break;\n            case 'text':\n            case 'password':\n            case 'email':\n            case 'number':\n            case 'file':\n            case 'hidden':\n            case 'date':\n            case 'time':\n            case 'datetime-local':\n            case 'tel':\n            case 'autocomplete':\n                fieldMarkup = ' <input ' + fieldDataString + '>';\n                break;\n            case 'color':\n                fieldMarkup = ' <input ' + fieldDataString + '> ' + opts.messages.selectColor;\n                break;\n            case 'button':\n            case 'submit':\n                fieldMarkup = '<button ' + fieldDataString + '>' + fieldLabelVal + '</button>';\n                break;\n            case 'checkbox':\n                fieldMarkup = '<input ' + fieldDataString + '> ' + fieldLabel;\n            // eslint-disable-next-line no-fallthrough\n            case 'checkboxtwo':\n                if (fieldData.toggle) {\n                    setTimeout(function () {\n                        $('[id^=\"' + fieldData.id + '\"]').kcToggle();\n                    }, 100);\n                }\n                break;\n            case 'googlemap':\n                fieldMarkup = ' <input ' + fieldDataString + '><div class=\"map\"></div>';\n                break;\n            default:\n                fieldMarkup = '<' + fieldData.type + ' ' + fieldDataString + '>'\n                + fieldLabelVal + '</' + fieldData.type + '>';\n        }\n\n        fieldMarkup = fieldLabel + '<div class=\"control\">' + fieldMarkup + '</div>';\n\n        if (fieldData.type !== 'hidden') {\n            var className = fieldData.id ?\n                'field fb-' + fieldData.type + ' form-group field-' + fieldData.id.replace(/\\)|\\(/g, '-') :\n                '';\n\n            className += fieldData.dependency ? ' am-customform-depend' : '';\n\n            if (fieldData.layout) {\n                className += ' amform-layout-' + fieldData.layout;\n            }\n\n            fieldMarkup = fbUtils.markup('div', fieldMarkup, {\n                className: className\n            });\n        } else {\n            fieldMarkup = fbUtils.markup('input', null, fieldData);\n        }\n\n        switch (fieldData.type) {\n            case 'googlemap':\n                var position = null, zoom = 1;\n\n                if (fieldData.map_position.lat\n                    && fieldData.map_position.lng\n                    && typeof google !== 'undefined'\n                ) {\n                    position = new google.maps.LatLng(\n                        fieldData.map_position.lat,\n                        fieldData.map_position.lng\n                    );\n                    zoom = fieldData.zoom;\n                }\n\n                $(fieldMarkup).amGoogleMap({\n                    'position': position,\n                    'zoom': zoom,\n                    'styles': fieldData.style\n                });\n                break;\n            case 'date':\n                var dateInput = $(fieldMarkup).find('input');\n\n                dateInput.removeAttr('type');\n                dateInput.attr('readonly', 'readonly');\n                dateInput.datepicker({\n                    showOn: 'both',\n                    changeYear: true,\n                    yearRange: '1900:2100',\n                    autoSize: true,\n                    dateFormat: opts.dateFormat\n                });\n\n                if (fieldData.value) {\n                    dateInput.datepicker('setDate', fieldData.value);\n                }\n\n                dateInput.attr('placeholder', opts.placeholder);\n                dateInput.attr('size', 15);\n                $(fieldMarkup).find('button').html('');\n\n                var datepicker = $('#ui-datepicker-div');\n\n                if (!datepicker.hasClass('am-picker-year')) {\n                    datepicker.addClass('am-picker-year');\n                }\n                break;\n        }\n\n        return fieldMarkup;\n    };\n\n    /**\n     * Callback for other option.\n     * Toggles the hidden text area for \"other\" option.\n     * @param  {String} otherId id of the \"other\" option input\n     */\n    fbUtils.otherOptionCB = function (otherId) {\n        var otherInput = document.getElementById(otherId),\n            otherInputValue = document.getElementById(otherId + '-value');\n\n        if (otherInput.checked) {\n            otherInput.style.display = 'none';\n            otherInputValue.style.display = 'inline-block';\n        } else {\n            otherInput.style.display = 'inline-block';\n            otherInputValue.style.display = 'none';\n        }\n    };\n\n    /**\n     * Capitalizes a string\n     * @param  {String} str uncapitalized string\n     * @return {String} str capitalized string\n     */\n    fbUtils.capitalize = function (str) {\n        return str.replace(/\\b\\w/g, function (m) {\n            return m.toUpperCase();\n        });\n    };\n\n    /**\n     * Check if need show hidden fields\n     * @param {FormRenderFn} formRender\n     * @param {object} $\n     */\n    fbUtils.updateDependency = function (formRender, $) {\n        $.each(formRender.element.find('.am-customform-depend'), function ($, index, elem) {\n            var name = $(elem).find(\n                '.control input,' +\n                '.control [type=\"div\"],' +\n                '.control [type=\"h1\"],' +\n                '.control [type=\"h2\"],' +\n                '.control [type=\"h3\"],' +\n                '.control [type=\"wysiwyg\"],' +\n                '.form-control'\n            ).first().attr('name');\n\n            if (this.dependencyMap[name]) {\n                fbUtils.isFieldShowed(elem, name, this.dependencyMap);\n            }\n        }.bind(formRender, $));\n    };\n\n    fbUtils.isFieldShowed = function (checkedField, elementName, dependencyMap) {\n        var orFields = [],\n            orFieldsType = ['dropdown', 'radio', 'radiotwo'],\n            hiddenField = $(checkedField),\n            hiddenInput = hiddenField.find('input, textarea, select'),\n            validElems = 0;\n\n        $.each(dependencyMap[elementName], function (index, elem) {\n            var dependencyElem = null;\n\n            // check current dependency, only if dependency element showed\n            if (dependencyMap[elem.field] &&\n                !fbUtils.isFieldShowed($('.field-' + elem.field.replace(/\\)|\\(/g, '-')), elem.field, dependencyMap)\n            ) {\n                return false;\n            }\n\n            // find element and check value\n            // if ok - increment validElems\n            // dropdown&radio always increment validElems , checked for valid by orFieldsValid\n            switch (elem.type) {\n                case 'dropdown':\n                    dependencyElem = $('select[name=\"' + elem.field + '\"]');\n                    validElems++;\n\n                    if (typeof orFields[elem.field] == 'undefined') {\n                        orFields[elem.field] = false;\n                    }\n\n                    break;\n                case 'listbox':\n                    if ($('select[name=\"' + elem.field + '[]\"]').val().indexOf(elem.value) !== -1) {\n                        validElems++;\n                    }\n                    break;\n                case 'checkbox':\n                case 'checkboxtwo':\n                    var getCheckboxOptions = function (index, elem) {\n                        return elem.value;\n                    };\n\n                    dependencyElem = $('[name=\"' + elem.field + '[]\"]:checked');\n\n                    if (dependencyElem.map(getCheckboxOptions).toArray().indexOf(elem.value) !== -1) {\n                        validElems++;\n                    }\n\n                    dependencyElem = null;\n                    break;\n                case 'radio':\n                case 'radiotwo':\n                    validElems++;\n                    dependencyElem = $('input[name=\"' + elem.field + '\"]:checked');\n\n                    if (typeof orFields[elem.field] == 'undefined') {\n                        orFields[elem.field] = false;\n                    }\n\n                    break;\n                default:\n                    validElems++;\n            }\n\n            if (dependencyElem && dependencyElem.val() === elem.value) {\n                if (orFieldsType.indexOf(elem.type) !== -1) {\n                    orFields[elem.field] = true;\n                } else {\n                    validElems++;\n                }\n            }\n        });\n\n        var orFieldsValid = fbUtils.getEntries(orFields).map(function (pair) {\n            return pair[1];\n        }).indexOf(false) === -1;\n\n        // validElems - must be count all dependencies of element\n        // dropdown&radio validated with orFieldsValid - one suitable option must selected\n        if (dependencyMap[elementName].length === validElems && orFieldsValid) {\n            hiddenInput\n                .removeClass('amcform-hidden-field')\n                .removeAttr('disabled');\n            hiddenField.show();\n\n            return true;\n        }\n\n        hiddenInput\n            .addClass('amcform-hidden-field')\n            .attr('disabled', true);\n\n        hiddenField.hide();\n\n        return false;\n    };\n\n    fbUtils.getEntries = function (obj) {\n        return Object.entries\n            ? Object.entries(obj)\n            : Object.keys(obj).map(function (key) {\n                return [key, obj[key]];\n            });\n    };\n\n    fbUtils.showAnimation = function (loaderImage) {\n        var progress = $('<div></div>', {id: this.amProgressId}),\n            container = $('<div></div>', {id: this.amImageContainerId}),\n            img = $('<img>'),\n            width;\n\n        container.appendTo(progress);\n\n        img.attr('src', loaderImage);\n        img.appendTo(container);\n        container.width('150px');\n        width = container.width();\n        width = '-' + width / 2 + 'px';\n        container.css('margin-left', width);\n        progress.hide().appendTo($('body')).fadeIn();\n    };\n\n    fbUtils.hideAnimation = function () {\n        var element = $('#' + this.amProgressId);\n\n        if (element.length) {\n            element.fadeOut(function () {\n                $(this).remove();\n            });\n        }\n    };\n\n    fbUtils.submitForm = function (event) {\n        var form = this;\n\n        event.preventDefault();\n\n        if (form.valid()) {\n            form.find('[type=\"submit\"]').addClass('disabled');\n            if (form.has('input[type=\"file\"]').length && form.find('input[type=\"file\"]').val() !== '') {\n                form.off('submit');\n                form.submit();\n            } else {\n                var formId = form.attr('id').match(/\\d+/);\n\n                $.ajax({\n                    url: form.attr('action'),\n                    data: form.serialize(),\n                    type: 'post',\n                    dataType: 'json',\n\n                    beforeSend: function () {\n                        fbUtils.showAnimation(fbUtils.formOptions[formId].src_image_progress);\n                    },\n\n                    error: function () {\n                        fbUtils.hideAnimation();\n\n                        $('html, body').animate({\n                            scrollTop: $('body').offset().top\n                        }, 500);\n\n                        form.find('[type=\"submit\"]').removeClass('disabled');\n                    },\n\n                    success: function (response) {\n                        form.closest('.amcform-popup-block').removeClass('-active');\n                        form.find('[type=\"submit\"]').removeClass('disabled');\n                        fbUtils.hideAnimation();\n\n                        if (response.result === 'success') {\n                            var renderedForm = form.find('.insert-container'),\n                                opts = fbUtils.formOptions[formId],\n                                gdpr = form.find('[name=\"gdpr\"]');\n\n                            if (formId) {\n                                formId = parseInt(formId, 10);\n                                renderedForm.empty();\n                                renderedForm.formRender(formId, opts, form.find('[name=\"is_survey\"]').attr('value'));\n\n                                if (gdpr.length > 0) {\n                                    gdpr.removeAttr('checked');\n                                }\n\n                                if (form.parent().hasClass('amform-popup')) {\n                                    form.parent().hide();\n                                } else if (form.hasClass('amhideprice-form')) {\n                                    $.fancyambox.close();\n                                }\n                            }\n\n                            $(document).trigger('amcform-init-multipage', [renderedForm]);\n                        }\n                        window.scrollTo(0, 0);\n                    }\n                });\n            }\n        }\n    };\n\n    'use strict';\n\n    function FormRenderFn(formId, options, element) {\n        var utils = fbUtils;\n\n        fbUtils.formOptions[formId] = options;\n\n        var formRender = this,\n            defaults = {\n                destroyTemplate: true, // @todo\n                container: false,\n                dataType: 'xml',\n                formData: false,\n                messages: {\n                    formRendered: 'Form Rendered',\n                    noFormData: 'No form data.',\n                    other: 'Other',\n                    selectColor: 'Select Color'\n                },\n                onRender: function onRender() {\n                    $('.amform-hide-formload').removeClass('amform-hide-formload');\n                },\n                render: true,\n                notify: {\n                    error: function error(message) {\n                        return console.error(message);\n                    },\n                    success: function success(message) {\n                        return console.log(message);\n                    },\n                    warning: function warning(message) {\n                        return console.warn(message);\n                    }\n                }\n            },\n            opts = $.extend(true, defaults, options);\n\n        (function () {\n            if (!opts.formData) {\n                return false;\n            }\n\n            var setData = {\n                xml: function xml(formData) {\n                    return utils.parseXML(formData);\n                },\n                json: function json(formData) {\n                    return window.JSON.parse(formData);\n                }\n            };\n\n            opts.formData = setData[opts.dataType](opts.formData) || false;\n        })();\n\n        /**\n         * Extend Element prototype to allow us to append fields\n         *\n         * @param  {Object} fields Node elements\n         */\n        Element.prototype.appendFormFields = function (fields) {\n            var element = this;\n\n            fields.forEach(function (field) {\n                return element.appendChild(field);\n            });\n        };\n\n        /**\n         * Extend Element prototype to remove content\n         */\n        Element.prototype.emptyContainer = function () {\n            var element = this;\n\n            while (element.lastChild) {\n                element.removeChild(element.lastChild);\n            }\n        };\n\n        var runCallbacks = function runCallbacks() {\n            if (opts.onRender) {\n                opts.onRender();\n            }\n        },\n\n         santizeField = function santizeField(field) {\n            var sanitizedField = Object.assign({}, field);\n\n            sanitizedField.className = field.className || field.class || null;\n            delete sanitizedField.class;\n\n            if (field.values) {\n                field.values = field.values.map(function (option) {\n                    return utils.trimObj(option);\n                });\n            }\n\n            return utils.trimObj(sanitizedField);\n        },\n\n        // Render multiple page form\n         renderMultiPageForm = function (element, pages) {\n            if (opts.pageTitles) {\n                var pageTitles = JSON.parse(opts.pageTitles);\n            }\n\n            var multiPageWrap = $('<div data-amcform-js=\"multi-page\" class=\"amcform-multi-page fieldset\"></div>')\n                    .appendTo(element),\n                pageTitlesWrap = $('<ul data-amcform-js=\"page-titles\" class=\"amcform-page-titles\"></ul>')\n                    .appendTo(multiPageWrap);\n\n            if (typeof pageTitles != 'undefined') {\n                // Generate Titles\n                $.each(pageTitles, function (index, title) {\n                    var step = index + 1;\n\n                    pageTitlesWrap.append('<li class=\"amcform-title-wrap\"><a href=\"#page-' + index\n                        + '\" class=\"amcform-title\"><p class=\"amcform-step\">'\n                        + step + '</p><span class=\"amcform-label\">' + title + '</span></a></li>');\n                });\n            }\n\n            // Generate pages\n            for (var i = 0; i < pages.length; i++) {\n                var pageWrap = $('<div id=\"page-' + i + '\" class=\"amcform-page-wrap fields\"></div>')\n                        .appendTo(multiPageWrap)[0],\n                    toolbar = '<div class=\"amcform-toolbar\">';\n\n                pageWrap.appendFormFields(pages[i]);\n\n                if (i > 0) {\n                    toolbar += '<button type=\"button\" '\n                        + 'data-amcform-js=\"prev-button\" class=\"amcform-prev action submit primary \">'\n                        + $.mage.__('Previous') + '</button>';\n                }\n\n                if (i === pages.length - 1) {\n                    if ($('[data-amcform-js=\"gdpr\"]').length) {\n                        var gdpr =  $(element).next('[data-amcform-js=\"gdpr\"]').clone().appendTo(pageWrap),\n                            inputId = gdpr.find('input').attr('data-id');\n\n                        gdpr.find('input').prop('disabled', false).attr('id', inputId);\n                        gdpr.show();\n                    }\n                    var form = $(element).closest('.amform-form'),\n                        isSurvey = parseInt($(form).find('[name=\"is_survey\"]').attr('value'), 10),\n                        prompt = '';\n\n                    if (isSurvey) {\n                        prompt = 'data-mage-init=\\'{\"amcformPrompt\": {}}\\'';\n                    }\n                    toolbar += '<button type=\"submit\" data-amcform-js=\"submit-button\" '\n                        + prompt + ' class=\"amcform-submit action submit primary \">'\n                        + opts.submitButtonTitle + '</button>';\n                } else {\n                    toolbar += '<button type=\"button\" data-amcform-js=\"next-button\" '\n                        + 'class=\"amcform-next action submit primary \">' + $.mage.__('Next') + '</button>';\n                }\n\n                if (i > 0) {\n                    $(pageWrap).find('input, textarea').addClass('amcform-hidden-page');\n                }\n\n                $(toolbar + '</div>').appendTo(pageWrap);\n            }\n\n             window.dispatchEvent(new CustomEvent('amform-elements-rendered', {\n                 detail: {\n                     form: $(element).closest('form')\n                 }\n             }));\n        },\n\n        // Begin the core plugin\n         page,\n            pages = [],\n            rendered,\n            dependencyFields = [],\n            dependencyMap = [];\n\n        // generate field markup if we have fields\n        if (opts.formData) {\n            if (!Array.isArray(opts.formData[0])) {\n                var createPage = [];\n\n                createPage.push(opts.formData);\n                opts.formData = createPage;\n            }\n            // Pages\n            for (var i = 0; i < opts.formData.length; i++) {\n                rendered = [];\n                page = opts.formData[i];\n                // Forms\n                for (var j = 0; j < page.length; j++) {\n                    var sanitizedField = santizeField(page[j]);\n\n                    switch (sanitizedField.type) {\n                        case 'textinput':\n                            try {\n                                var validation = sanitizedField.validation_fields;\n\n                                if (!validation) {\n                                    validation = JSON.parse(sanitizedField.validation);\n                                }\n                            } catch (e) {\n                                validation = {};\n                            }\n                            var resultStr = '',\n                                begStr = '{',\n                                endStr = '}';\n\n                            resultStr = begStr + resultStr;\n\n                            if (validation.hasOwnProperty('validation')) {\n                                switch (validation.validation) {\n                                    case 'None':\n                                    case ' ':\n                                        break;\n                                    case 'pattern':\n                                        if (sanitizedField.regexp) {\n                                            var validationName = validation.validation + Math.random(),\n                                                errorMessage = sanitizedField.errorMessage || 'Invalid format.';\n\n                                            $.validator.addMethod(\n                                                validationName,\n                                                function (value, element, param) {\n                                                    return this.optional(element) || new RegExp(param).test(value);\n                                                },\n                                                $.mage.__(errorMessage)\n                                            );\n\n                                            resultStr = resultStr + '\\'' +\n                                                validationName + '\\':' + sanitizedField.regexp;\n                                        }\n                                        break;\n                                    default:\n                                        resultStr = resultStr + '\\'' + validation.validation + '\\':true';\n                                }\n                            }\n\n                            resultStr += endStr;\n                            sanitizedField['data-validate'] = resultStr;\n                            delete sanitizedField.validation;\n                            break;\n                    }\n                    if (sanitizedField.dependency) {\n                        // eslint-disable-next-line no-loop-func\n                        $.each(sanitizedField.dependency, function (index, elem) {\n                            var name = sanitizedField.name;\n\n                            dependencyFields.push(elem.field);\n\n                            if (\n                                ['checkbox', 'checkboxtwo', 'listbox'].indexOf(sanitizedField.type) !== -1\n                                || ['file'].indexOf(sanitizedField.type) !== -1\n                                && ['1'].indexOf(sanitizedField.multiple) !== -1\n                            ) {\n                                name += '[]';\n                            }\n\n                            if (!dependencyMap[name]) {\n                                dependencyMap[name] = [];\n                            }\n\n                            dependencyMap[name].push(elem);\n                        });\n                    }\n\n                    rendered.push(utils.fieldRender(sanitizedField, opts));\n                }\n\n                pages.push(rendered);\n            }\n\n            if (opts.render) {\n                if (opts.container) {\n                    opts.container = opts.container instanceof jQuery ? opts.container[0] : opts.container;\n                    opts.container.emptyContainer();\n                    renderMultiPageForm(opts.container, pages);\n                } else if (element) {\n                    element.emptyContainer();\n                    renderMultiPageForm(element, pages);\n                }\n\n                runCallbacks();\n                opts.notify.success(opts.messages.formRendered);\n            } else {\n                $.each(pages, function (index, page) {\n                    formRender.markup = rendered.map(function (page) {\n                        return elem.innerHTML;\n                    }).join('');\n                });\n            }\n        } else {\n            var noData = utils.markup('div', opts.messages.noFormData, {\n                className: 'no-form-data'\n            });\n\n            pages.push(noData);\n            opts.notify.error(opts.messages.noFormData);\n        }\n        this.dependencyMap = dependencyMap;\n        this.dependencyFileds = dependencyFields;\n        this.element = $(element);\n        this.form = this.element.parents('form');\n        this.element.on('click change', 'input, select', function ($, fbUtils, event) {\n            var target = event.currentTarget;\n\n            if (this.dependencyFileds.indexOf(target.name.replace('[]', '')) !== -1) {\n                fbUtils.updateDependency(this, $);\n            }\n        }.bind(this, $, fbUtils));\n\n        fbUtils.updateDependency(this, $);\n\n        if (opts.ajax_submit === 1) {\n            var form = this.form;\n\n            form.unbind('submit');\n            form.on('submit', fbUtils.submitForm.bind(form));\n            form.trigger('ajaxFormLoaded');\n        }\n\n        return formRender;\n    }\n\n    (function ($) {\n        $.fn.formRender = function (formId, options, isSurvey, callback) {\n            var self = this,\n                componentOptions = {\n                    classes: {\n                        active: '-active',\n                        formEdit: '-form-edit',\n                        grid: '-grid',\n                        title: 'amcform-title'\n                    },\n                    selectors: {\n                        formParent: '.amform-parent',\n                        popupBlock: '.amcform-popup-block',\n                        closeButton: '[data-amcform-js=\"close\"]',\n                        map: '.map',\n                        showPopupButton: '[data-amform-show={formId}]',\n                        popupCloseException: '.amcform-popup, .amform-show-popup, .modals-overlay, ' +\n                            '.modal-inner-wrap, .ui-datepicker-next, .ui-datepicker-prev, .am-picker-year',\n                        popupBlockId: '.amcform-popup-block[data-form-id={formId}]',\n                        form: '.amform-form[data-amform-id={id}]',\n                        insertContainer: '.insert-container'\n                    }\n                };\n\n            if (parseInt(isSurvey, 10)) {\n                $.ajax({\n                    url: urlBuilder.build(window.location.origin + '/amasty_customform/form/survey'),\n                    dataType: 'json',\n                    type: 'post',\n                    data: {'form_id': formId},\n                    success: function (response) {\n                        if (response.isSurveyAvailable) {\n                            // eslint-disable-next-line no-use-before-define\n                            generateBegin(formId, options, callback);\n                        } else {\n                            // eslint-disable-next-line no-use-before-define\n                            renderMessage(\n                                $(componentOptions.selectors.form.replace('{id}', formId)),\n                                'Thank you for participating in this survey!'\n                            );\n                        }\n                    },\n                    error: function (error) {\n                        console.log(error);\n                    }\n                });\n            } else {\n                // eslint-disable-next-line no-use-before-define\n                generateBegin(formId, options, callback);\n            }\n\n            // eslint-disable-next-line no-use-before-define\n            addShowPopupButtonListener();\n\n            /**\n             * @param {Object} target - jQuery node/nodes-list\n             * @param {String} message\n             * @returns {void}\n             */\n            function renderMessage(target, message) {\n                if (!target.length) {\n                    return;\n                }\n\n                target.each(function (index, item) {\n                    $(item)\n                        .find(componentOptions.selectors.insertContainer)\n                        .html($('<h3>', {\n                            text: $.mage.__(message),\n                            class: componentOptions.classes.title\n                        }));\n                });\n            }\n\n            function generateBegin(formId, options, callback) {\n                // eslint-disable-next-line no-use-before-define\n                generateForm(formId, options);\n                if (callback) {\n                    callback();\n                }\n            }\n\n            function generateForm(formId, options) {\n                self.each(function () {\n                    var formRender = new FormRenderFn(formId, options, this);\n\n                    $(window).trigger('amform-form-' + formId, [\n                        formRender.form[0],\n                        formRender.form.find('[type=\"submit\"]')[0]\n                    ]);\n\n                    return formRender;\n                });\n            }\n\n            function addShowPopupButtonListener() {\n                var buttonBlock = $(componentOptions.selectors.showPopupButton.replace('{formId}', formId)),\n                    _formId,\n                    popupWrapper,\n                    popupBlock,\n                    googleMaps;\n\n                buttonBlock.on('click', function () {\n                    _formId = $(this).attr('data-amform-show');\n                    popupWrapper = $(this).closest(componentOptions.selectors.formParent);\n                    popupBlock = popupWrapper\n                        .find(componentOptions.selectors.popupBlockId\n                        .replace('{formId}', _formId));\n                    googleMaps = popupBlock.find(componentOptions.selectors.map);\n\n                    if (!popupBlock.length) {\n                        return;\n                    }\n\n                    popupBlock.addClass(componentOptions.classes.active);\n\n                    if (googleMaps.width()) {\n                        // trigger resize for prevent grey map\n                        googleMaps.width(googleMaps.width() + 1);\n                    }\n\n                    $(document).on('click', function (event) {\n                        if (!$(event.target).closest(componentOptions.selectors.popupCloseException).length) {\n                            if (buttonBlock.hasClass(componentOptions.classes.formEdit)) {\n                                popupWrapper.remove();\n                            }\n\n                            popupBlock.removeClass(componentOptions.classes.active);\n                        }\n                    });\n\n                    popupBlock.find(componentOptions.selectors.closeButton).on('click', function () {\n                        if (buttonBlock.hasClass(componentOptions.classes.formEdit)) {\n                            popupWrapper.remove();\n                        }\n\n                        popupBlock.removeClass(componentOptions.classes.active);\n                    });\n                });\n\n                if (buttonBlock.hasClass(componentOptions.classes.formEdit)) {\n                    // eslint-disable-next-line no-use-before-define\n                    formEditEvents(buttonBlock);\n                }\n            }\n\n            function formEditEvents(buttonBlock) {\n                var popupWrapper = buttonBlock.closest(componentOptions.selectors.formParent),\n                    popupBlock = popupWrapper.find(componentOptions.selectors.popupBlock),\n                    dataProvider = require('amcformGridDataProvider'),\n                    messageList = require('amcformMessageList'),\n                    notifications = require('amcformNotifications'),\n                    gridData = dataProvider().itemStorage.get();\n\n                buttonBlock.trigger('click');\n\n                buttonBlock.closest(componentOptions.selectors.formParent).find('form').submit(function (event) {\n                    event.preventDefault();\n\n                    // eslint-disable-next-line no-use-before-define\n                    submitEditedForm($(this), function (response) {\n                        if (!response.messages.length) {\n                            notifications().setMessageType('edited', 1);\n\n                            if (buttonBlock.hasClass(componentOptions.classes.grid)) {\n                                dataProvider().getForms(gridData.currentPage, gridData.pageSize);\n                                notifications('showSuccessMessage');\n                            } else {\n                                window.location.reload();\n                            }\n                        } else if (messageList) {\n                            response.messages.forEach(function (message) {\n                                messageList.addErrorMessage({message: message});\n                            });\n                        }\n\n                        popupBlock.removeClass(componentOptions.classes.active);\n                        popupWrapper.remove();\n                    });\n                });\n            }\n\n            function submitEditedForm(target, callback) {\n                var formData;\n\n                if (target.length) {\n                    formData = new FormData(target.get(0));\n\n                    $.ajax({\n                        type: 'POST',\n                        url: target.attr('action'),\n                        data: formData,\n                        contentType: false,\n                        processData:false,\n                        dataType: 'json'\n                    }).done(callback);\n                }\n            }\n        };\n    })($);\n});\n","Amasty_Customform/js/google-map-loader.js":"define([\n    'jquery'\n], function ($) {\n    'use_strict';\n\n    /**\n     * @param {string} googleKey\n     *\n     * @return {jQuery.Deferred}\n     */\n    return function (googleKey) {\n        var result = $.Deferred();\n\n        try {\n            require(\n                ['https://maps.googleapis.com/maps/api/js?libraries=places&key=' + googleKey],\n                result.resolve.bind(result)\n            );\n        } catch (e) {\n            result.reject();\n        }\n\n        return result;\n    }\n})\n","Amasty_Customform/js/form-filler.js":"define([\n    'jquery',\n    'jquery/validate',\n    'Magento_Ui/js/modal/modal'\n], function ($) {\n    'use_strict';\n\n    $.widget('mage.amFormFill', {\n        options: {\n           formParams: {\n               urlSession: '',\n               formId: 0,\n               productId: 0\n           },\n            selectors: {\n                input: '.form-control, .amform-date, .amform-time',\n                field: '.field'\n            }\n        },\n        classes: {\n            hasContent: '-has-content',\n            active: '-active',\n            error: '-error'\n        },\n\n        _create: function () {\n            var source = this.getDataSource();\n\n            source.fail(this.processError.bind(this));\n            source.then(this.checkFieldType.bind(this));\n        },\n\n        /**\n         * @param {Error} error\n         */\n        processError: function (error) {\n            console.log(error);\n        },\n\n        /**\n         * @return {jQuery.Deferred}\n         */\n        getDataSource: function () {\n            var result = $.Deferred();\n\n            $.ajax({\n                url: this.options.formParams.urlSession,\n                dataType: 'json',\n                type: 'get',\n                data: {'form_id': this.options.formParams.formId, 'product_id': this.options.formParams.productId},\n                success: function(response) {\n                    result.resolve(response.form_fields || {});\n                },\n                error: function(error) {\n                    result.reject(error);\n                }\n            });\n\n            return result;\n        },\n\n        /**\n         * @param {Object} fields\n         */\n        checkFieldType: function (fields) {\n            var formData = this.element,\n                field = '';\n\n            $.each(fields, function (name, value) {\n                field = formData.find('[data-amcform-js=\"' + name + '\"]');\n\n                if (field.length) {\n                    switch (field.attr('type')) {\n                        case 'select':\n                            var optionItems = field.children();\n                            $.each(optionItems, function (item, option) {\n                                $(option).prop('selected', false);\n                                var currentOptValue = $(option).val();\n                                if (currentOptValue === value\n                                    || (Array.isArray(value)\n                                        && value.includes(currentOptValue))\n                                ) {\n                                    $(this).prop('selected', true);\n                                }\n                            });\n                            break;\n                        case 'radio':\n                            var checkedField = value.split('-'),\n                                selector = name + '-' + (checkedField[1] - 1);\n\n                            $('#' + selector).prop('checked', true);\n                            break;\n                        case 'checkbox':\n                            field.prop('checked', false);\n                            $.each(value, function (index, val) {\n                                var selector = '[data-amcform-js=\"' + name + '\"]' + '[value=\"' + val + '\"]';\n\n                                $(selector).prop('checked', true);\n                            });\n                            break;\n                        case 'googlemap':\n                            var googleMap = field.closest('.fb-googlemap');\n\n                            if (value instanceof Object\n                                && typeof value.lng !== 'undefined'\n                                && googleMap.data('mageAmGoogleMap')\n                            ) {\n                                googleMap.amGoogleMap('moveMarker', value);\n                            }\n\n                            break;\n                        default:\n                            field.val(value);\n                    }\n                }\n            });\n\n            this.animateField();\n        },\n\n        animateField: function () {\n            var self = this,\n                input = $(self.options.selectors.input),\n                activeClass = self.classes.active,\n                hasContentClass = self.classes.hasContent;\n\n            input.each(function () {\n                if (this.value) {\n                    $(this).closest(self.options.selectors.field).addClass(hasContentClass);\n                }\n            });\n\n            input.on('focusin', function() {\n                var parent = $(this).closest(self.options.selectors.field);\n                parent.addClass(activeClass);\n            });\n\n            input.on('focusout', function() {\n                var parent = $(this).closest(self.options.selectors.field);\n                parent.removeClass(activeClass);\n            });\n\n            input.on('change', function() {\n                var parent = $(this).closest(self.options.selectors.field);\n\n                if (this.value) {\n                    parent.addClass(hasContentClass);\n                } else {\n                    parent.removeClass(hasContentClass);\n                }\n            })\n        }\n    });\n\n    return $.mage.amFormFill;\n});\n","Amasty_Customform/js/customFormValidation.js":"define([\n    \"jquery\",\n    'Magento_Ui/js/modal/alert'\n], function($, alert){\n    \"use strict\";\n    return function custom(element) {\n        if (element.val() === '' || element.val() === 'undefined'){\n            return false;\n        }\n\n        const adulto = 18;\n        var birthday = new Date(element.val()).getTime();\n        var today = new Date().getTime();\n\n        var diff = today - birthday;\n        var edad = Math.round(Math.round(diff/(1000 * 60 * 60 * 24)) / 360);\n\n        if (edad<=0){\n            alert({\n                title: $.mage.__('La fecha de nacimiento seleccionada no es v\u00e1lida'),\n                content: $.mage.__('La fecha de nacimiento seleccionada no es v\u00e1lida.'),\n                actions: {\n                    always: function(){}\n                }\n            });\n\n            element.val('');\n            $('#dropdown-apoderado-obligatorio').val('Si').trigger('change');\n            return false;\n        }\n\n        if ( edad < adulto ){\n            $('#dropdown-apoderado-obligatorio').val('Si').trigger('change');\n            return true;\n        }\n\n        if (edad >= adulto){\n            $('#dropdown-apoderado-obligatorio').val('No').trigger('change');\n            return true;\n        }\n\n    }\n});\n","Amasty_PromoCountdown/js/countdown.js":"define([\n    'uiComponent',\n    'mage/storage'\n], function (Component, storage) {\n    'use strict';\n\n    var xhr = {};\n\n    return Component.extend({\n        defaults: {\n            template: 'Amasty_PromoCountdown/countdown',\n            serviceUrl: false,\n            firstRun: true,\n\n            days: 0,\n            hours: 0,\n            min: 0,\n            sec: 0,\n\n            link: null,\n            targetTime: false,\n            startTime: false,\n            isVisible: false,\n            secondsLeft: false\n        },\n\n        initObservable: function () {\n            this._super().observe('days hours min sec isVisible secondsLeft');\n\n            return this;\n        },\n\n        updateValues: function () {\n            this.sec(Math.floor((this.secondsLeft() % 60)));\n\n            if (this.firstRun || this.sec() === 59) {\n                this.min(Math.floor((this.secondsLeft() % (60 * 60)) / 60));\n\n                if (this.firstRun || this.min() === 59) {\n                    this.hours(Math.floor((this.secondsLeft() % (60 * 60 * 24)) / (60 * 60)));\n\n                    if (this.firstRun || this.hours() === 23) {\n                        this.days(Math.floor(this.secondsLeft() / (60 * 60 * 24)));\n                    }\n                }\n            }\n\n            if (this.firstRun) {\n                this.firstRun = false;\n                this.isVisible(true);\n            }\n        },\n\n        parseResult: function (result) {\n            if (result) {\n                this.secondsLeft(result);\n\n                var x = setInterval(function () {\n                    this.secondsLeft(this.secondsLeft() - 1);\n                    this.updateValues();\n\n                    if (this.secondsLeft() === 0) {\n                        clearInterval(x);\n                        this.isVisible(false);\n                    }\n                }.bind(this), 1000);\n            }\n        },\n\n        setupTimer: function () {\n            if (!this.firstRun) {\n                return true;\n            }\n\n            if (xhr.hasOwnProperty(this.targetTime)) {\n                xhr[this.targetTime].done(this.parseResult.bind(this));\n\n                return true;\n            }\n\n            xhr[this.targetTime] = storage.post(this.serviceUrl,\n                JSON.stringify({\n                    start: this.startTime,\n                    end: this.targetTime\n                }),\n                false\n            ).done(\n                this.parseResult.bind(this)\n            ).always(\n                function () {\n                    delete xhr[this.targetTime];\n                }.bind(this)\n            );\n\n            return true;\n        }\n    });\n});\n","Amasty_PromoCountdown/js/design/round.js":"define([\n    'uiComponent'\n], function (Component) {\n    'use strict';\n    return Component.extend({\n        defaults: {\n            maxRound: 628,\n            modules: {\n                parent: \"${$.parentName}\"\n            }\n        },\n\n        getLinearGradient: function () {\n            return this.parent().widgetId + '-circle-gradient';\n        },\n\n        offsetDays: function (maxValue) {\n            var totalDays = Math.floor((this.parent().targetTime - this.parent().startTime) / (60 * 60 * 24));\n            return maxValue * (totalDays - this.parent().days()) / totalDays;\n        },\n\n        offsetHour: function (maxValue) {\n            return maxValue * (24 - this.parent().hours()) / 24;\n        },\n\n        offsetMin: function (maxValue) {\n            return maxValue * (60 - this.parent().min()) / 60;\n        },\n\n        offsetSec: function (maxValue) {\n            return maxValue * (60 - this.parent().sec()) / 60;\n        },\n\n        getRotate: function (value) {\n            return ('rotate(' + Math.floor(360 - value) + 'deg').toString();\n        }\n    });\n});\n","Amasty_PromoCountdown/js/design/progress.js":"define([\n    'uiComponent'\n], function (Component) {\n    'use strict';\n    return Component.extend({\n        defaults: {\n            modules: {\n                parent: \"${$.parentName}\"\n            }\n        },\n\n        getCurrentPercent: function () {\n            var totalSeconds = this.parent().targetTime - this.parent().startTime;\n\n            return (1 - this.parent().secondsLeft() / totalSeconds) * 100;\n        },\n\n        getCurrentPercentString: function () {\n            return this.getCurrentPercent() + '%';\n        }\n    });\n});\n","Amasty_PromoCountdown/js/design/circle.js":"define([\n    'uiComponent'\n], function (Component) {\n    'use strict';\n    return Component.extend({\n        defaults: {\n            maxRound: 157,\n            modules: {\n                parent: \"${$.parentName}\"\n            }\n        },\n\n        offsetDays: function () {\n            var totalDays = Math.floor((this.parent().targetTime - this.parent().startTime) / (60 * 60 * 24));\n            return this.maxRound * (totalDays - this.parent().days()) / totalDays;\n        },\n\n        offsetHour: function () {\n            return this.maxRound * (24 - this.parent().hours()) / 24;\n        },\n\n        offsetMin: function () {\n            return this.maxRound * (60 - this.parent().min()) / 60;\n        },\n\n        offsetSec: function () {\n            return this.maxRound * (60 - this.parent().sec()) / 60;\n        }\n    });\n});\n","Amasty_ShippingBar/js/bar.js":"define([\n    'jquery',\n    'uiComponent',\n    'mage/storage',\n    'Magento_Customer/js/customer-data'\n], function ($, Element, storage, customerData) {\n    'use strict';\n\n    return Element.extend({\n        defaults: {\n            isVisible: false,\n            additionalClass: false,\n            helpFlag: false,\n            contentVisibility: true,\n            goalLeft: false,\n            template: 'Amasty_ShippingBar/bar'\n        },\n\n        initialize: function () {\n            this._super();\n            this.setGoalLeft();\n\n            if (this.barBackground) {\n                this.isVisible(true);\n            }\n        },\n\n        initObservable: function () {\n            this._super().observe('isVisible additionalClass helpFlag contentVisibility goalLeft');\n\n            return this;\n        },\n\n        setGoalLeft: function () {\n            var cart = customerData.get('cart');\n\n            this.goalLeft(this.goal - cart().subtotalAmount);\n\n            cart.subscribe(function (cart) {\n                this.goalLeft(this.goal - cart.subtotalAmount);\n            }.bind(this))\n        },\n\n        isCarVisible: function () {\n            return this.isCarVisibleValue === \"1\" || !this.contentVisibility();\n        },\n\n        hasTermContent: function () {\n            return this.labels.terms_message && this.labels.terms_message.length > 0;\n        },\n\n        initMoving: function () {\n            var container = $(\".amasty-shipbar.container\");\n\n            if (this.position === \"15\") {\n                var defaultTop = container.position().top;\n\n                if ($(window).scrollTop() > defaultTop) {\n                    this.additionalClass('fixed top');\n                }\n\n                $(document).scroll(function (e) {\n                    if ($(window).scrollTop() > defaultTop) {\n                        this.additionalClass('fixed top');\n                    } else {\n                        this.additionalClass(null);\n                    }\n                }.bind(this));\n            }\n\n            if (this.position === \"25\") {\n                var defaultBottom = $(document).height() - container.position().top,\n                    containerHeight = container.height();\n\n                if ($(window).height() + $(window).scrollTop() < $(document).height() - defaultBottom) {\n                    this.additionalClass('fixed bottom');\n                }\n\n                $(document).scroll(function (e) {\n                    var additionalClass = this.additionalClass(),\n                        height =  0;\n                    if (typeof additionalClass === 'string' && additionalClass.indexOf('fixed') > -1) {\n                        height = containerHeight;\n                    }\n                    if ($(window).height() + $(window).scrollTop() < $(document).height() - defaultBottom + height) {\n                        this.additionalClass('fixed bottom');\n                    } else {\n                        this.additionalClass(null);\n                    }\n                }.bind(this));\n            }\n        },\n\n        haveAction: function () {\n            return this.actionClickable === \"1\" && this.actionLink && this.actionLink.length > 0;\n        },\n\n        isCloseable: function () {\n            return this.closeable === \"1\";\n        },\n\n        haveCustomStyle: function () {\n            return this.customStyle && this.customStyle.length > 0;\n        },\n\n        getLabelContent: function () {\n            var text = this.getRawLabelContent();\n\n            text = text.replace('{{ruleGoal}}', this.addExtraColor(this.goal));\n            text = text.replace('{{ruleGoalLeft}}', this.addExtraColor(this.goalLeft()));\n\n            return text;\n        },\n\n        getFontSize: function () {\n            return this.textSize + 'px';\n        },\n\n        getRawLabelContent: function () {\n            if (this.helpFlag()) {\n                return this.labels.terms_message;\n            }\n\n            if (this.goalLeft() == this.goal) {\n                return this.labels.init_message;\n            }\n\n            if (this.goalLeft() <= 0) {\n                return this.labels.achieved_message;\n            }\n\n            if (this.goalLeft() < this.goal) {\n                return this.labels.progress_message;\n            }\n\n            return this.labels.init_message;\n        },\n\n        addExtraColor: function (data) {\n            return \"<b style=\\\"color: \" + this.extraColor + \"\\\">\" + this.currencySymbol + (Math.round(data * 100) / 100).toFixed(2) + \"</b>\";\n        },\n    });\n});\n","Amasty_CustomTabs/js/scroll-to-tabs.js":"/**\n *   Scroll to tabs widget\n */\n\ndefine([\n    'jquery',\n    'domReady!'\n], function ($) {\n    'use strict';\n\n    $.widget('mage.scrollToTabs', {\n        options: {\n            scrollToTabs: true,\n            scrollToTabsDuration: 300,\n            offsetTop: 30\n        },\n\n        /**\n         * Widget initialization\n         * @private\n         *\n         * @returns {void}\n         */\n        _create: function () {\n            if (this.options.scrollToTabs) {\n                this._scrollToTabs();\n            }\n        },\n\n        /**\n         * @private\n         * @returns {void}\n         */\n        _scrollToTabs: function () {\n            var $element;\n\n            if (!window.location.hash) {\n                return;\n            }\n\n            $element = $('[href=\"' + location.hash + '\"]');\n\n            if ($element.length) {\n                $('html, body').stop().animate({\n                    scrollTop: $element.offset().top - this.options.offsetTop\n                }, this.options.scrollToTabsDuration, function() {\n                    $element.trigger('click');\n                });\n            }\n        }\n    });\n\n    return $.mage.scrollToTabs;\n});\n","Amasty_CustomTabs/js/collapsible-mixin.js":"/**\n * Mage collapsible mixin\n */\n\ndefine([\n    'jquery'\n], function ($) {\n    'use strict';\n\n    return function (widget) {\n        $.widget('mage.collapsible', widget, {\n            options: {\n                selectors: {\n                    accordionView: '.amtabs-accordion-view',\n                    title: '[data-amtheme-js=\"item-title\"]'\n                }\n            },\n\n            _open: function () {\n                this._super();\n\n                if (this.element.parents(this.options.selectors.accordionView).length\n                    && this.element.has(this.options.selectors.title)) {\n                    this._scrollToTopIfNotVisible();\n                }\n            }\n        });\n\n        return $.mage.collapsible;\n    };\n});\n","Amasty_CustomTabs/js/process-reviews.js":"define([\n    'jquery',\n    'mage/utils/wrapper'\n], function ($, wrapper) {\n    'use strict';\n\n    return function (widget) {\n        return wrapper.wrap(widget, function (originalFunction, config, element) {\n            var reviewTab = $(config.reviewsTabSelector);\n\n            originalFunction(config, element);\n\n            /**\n             * @param {String} url\n             * @param {*} fromPages\n             */\n            $('.product-reviews-summary .reviews-actions .action').not('.-no-js-scroll').click(function (event) {\n                event.preventDefault();\n                var regexp = /^.*?(#|$)/,\n                    anchor = $(this).attr('href').replace(regexp, '');\n                $('.product[role=\"tablist\"] [data-role=\"content\"]').each(function (index) {\n                    var linkElement = $(this).find('#' + anchor + ', [data-role=\"product-review\"]');\n                    if (linkElement.length > 0) {\n                        $('.product[role=\"tablist\"]').tabs('activate', index);\n                        animation(linkElement);\n                        return;\n                    }\n                });\n            });\n\n            function animation(element) {\n                $('html, body').animate({\n                    scrollTop: element.offset().top - 50\n                }, 300);\n            }\n\n            if (reviewTab.parents('.amtabs-open').length) {\n                reviewTab.trigger('beforeOpen');\n            }\n        });\n    }\n});\n","Amasty_CustomTabs/js/tabs-mixin.js":"/**\n * Mage tabs mixin\n */\n\ndefine([\n    'jquery'\n], function ($) {\n    'use strict';\n\n    return function (widget) {\n        $.widget('mage.tabs', widget, {\n            options: {\n                accordionOpenViewClass: 'amtabs-open'\n            },\n\n            /**\n             * @private\n             * @inheritDoc\n             *\n             * @return {void}\n             */\n            _create: function () {\n                this.isAccordion = this.element.hasClass(this.options.accordionOpenViewClass);\n\n                if (this.isAccordion) {\n                    this.options.collapsible = true;\n                }\n\n                this._super();\n            },\n\n            /**\n             * @private\n             *\n             * @return {void}\n             */\n            _callCollapsible: function () {\n                var self = this,\n                    disabled = false,\n                    active = false;\n\n                if (!this.isAccordion) {\n                    this._super();\n\n                    return;\n                }\n\n                $.each(this.collapsibles, function (i) {\n                    disabled = active = false;\n                    active = true;\n\n                    self._instantiateCollapsible(this, i, active, disabled);\n                });\n            },\n\n            _handleDeepLinking: function () {\n                if (!this.isAccordion) {\n                    this._super();\n                }\n            },\n\n            /**\n             * @private\n             *\n             * @return {void}\n             */\n            _closeOthers: function () {\n                if (!this.isAccordion) {\n                    this._super();\n\n                    return;\n                }\n\n                $.each(this.collapsibles, function () {\n                    $(this).on('beforeOpen', function () {\n                        var section = $(this);\n\n                        section.addClass('allow').prevAll().addClass('allow');\n                        section.nextAll().removeClass('allow');\n                    });\n                });\n            }\n        });\n\n        return $.mage.tabs;\n    };\n});\n","Amasty_CustomTabs/js/related-products.js":"define([\n    'jquery',\n    'relatedProducts'\n], function ($) {\n    'use strict';\n\n    $.widget('mage.amRelatedProducts', $.mage.relatedProducts, {\n        _create: function () {\n            this.element.find('[role=\"select-all\"]').off('click');\n            this.element.find('.checkbox.related')\n                .removeClass('related')\n                .addClass('am-tab-related');\n            this._super();\n        }\n    });\n\n    return $.mage.amRelatedProducts;\n});\n","Amasty_CustomTabs/js/grid/columns/checkbox.js":"define([\n    'underscore',\n    'mage/translate',\n    'Magento_Ui/js/grid/columns/column',\n    'jquery'\n], function (_, $t, Column, jQuery) {\n    'use strict';\n\n    return Column.extend({\n        defaults: {\n            bodyTmpl: 'Amasty_CustomTabs/grid/cells/checkbox',\n            draggable: false,\n            sortable: false\n        },\n\n        /**\n         * Remove disable class from Insert Attribute button after Attribute has been chosen.\n         *\n         * @return {Boolean}\n         */\n        selectAttribute: function () {\n            if (jQuery('#insert_attribute').hasClass('disabled')) {\n                jQuery('#insert_attribute').removeClass('disabled');\n            }\n\n            return true;\n        }\n    });\n});\n","Amasty_CustomTabs/js/wysiwyg/tiny_mce/plugins/editor_plugin.js":"/* global tinymce, varienGlobalEvents, Base64 */\n/* eslint-disable strict */\ndefine('customTabEditorPlugin', [\n    'Amasty_CustomTabs/js/variable/attribute-directive-generator',\n    'wysiwygAdapter',\n    'jquery'\n], function (attributeDirectiveGenerator, wysiwyg, jQuery) {\n    return function (config) {\n        tinymce.create('tinymce.plugins.amcustomtabs_attribute', {\n\n            /**\n             * Initialize editor plugin.\n             *\n             * @param {tinymce.editor} editor - Editor instance that the plugin is initialized in.\n             * @param {String} url - Absolute URL to where the plugin is located.\n             */\n            init: function (editor, url) {\n                var self = this;\n\n                /**\n                 * Add new command to open attributes selector slideout.\n                 */\n                editor.addCommand('openAttributesSlideout', function (commandConfig) {\n                    var selectedElement;\n\n                    if (commandConfig) {\n                        selectedElement = commandConfig.selectedElement;\n                    } else {\n                        selectedElement = tinymce.activeEditor.selection.getNode();\n                    }\n                    AmastyProductTabsAttributePlugin.setEditor(editor);\n                    AmastyProductTabsAttributePlugin.loadChooser(\n                        config.url,\n                        wysiwyg.getId(),\n                        selectedElement\n                    );\n                });\n\n                /**\n                 * Add button to the editor toolbar.\n                 */\n                editor.addButton('amcustomtabs_attribute', {\n                    title: jQuery.mage.__('Insert Attribute'),\n                    tooltip: jQuery.mage.__('Insert Attribute'),\n                    cmd: 'openAttributesSlideout',\n                    image: url + '/img/icon.png',\n\n                    /**\n                     * Highlight or dismiss Insert Attribute button when attribute is selected or deselected.\n                     */\n                    onPostRender: function () {\n                        var _this = this,\n\n                        /**\n                         * Toggle active state of Insert Attribute button.\n                         *\n                         * @param {Object} e\n                         */\n                        toggleAttributeButton = function (e) {\n                            _this.active(false);\n\n                            if (jQuery(e.target).hasClass('amcustomtabs-attribute')) {\n                                _this.active(true);\n                            }\n                        };\n\n                        editor.on('click', toggleAttributeButton);\n                        editor.on('change', toggleAttributeButton);\n                    }\n                });\n\n                /**\n                 * Double click handler on the editor to handle dbl click on attribute placeholder.\n                 */\n                editor.on('dblclick', function (evt) {\n                    if (jQuery(evt.target).hasClass('amcustomtabs-attribute')) {\n                        editor.selection.collapse(false);\n                        editor.execCommand('openAttributesSlideout', {\n                            ui: true,\n                            selectedElement: evt.target\n                        });\n                    }\n                });\n\n                /**\n                 * Attach event handler for when wysiwyg editor is about to encode its content\n                 */\n                varienGlobalEvents.attachEventHandler('wysiwygEncodeContent', function (content) {\n                    content = self.encodeAttributes(content);\n\n                    return content;\n                });\n\n                /**\n                 * Attach event handler for when wysiwyg editor is about to decode its content\n                 */\n                varienGlobalEvents.attachEventHandler('wysiwygDecodeContent', function (content) {\n                    content = self.decodeAttributes(content);\n\n                    return content;\n                });\n            },\n\n            /**\n             * Encode attributes in content\n             *\n             * @param {String} content\n             * @returns {*}\n             */\n            encodeAttributes: function (content) {\n                content = content.gsub(/\\{\\{amcustomtabs_attribute code=\\\"([^\\\"]+)\\\"\\}\\}/i, function (match) {\n                    var path = match[1],\n                        amAttributes,\n                        imageHtml;\n\n                    amAttributes = JSON.parse(config.placeholders);\n\n                    if (amAttributes[match[1]]) {\n                        imageHtml = '<span id=\"%id\" class=\"amcustomtabs-attribute magento-placeholder mceNonEditable\">' +\n                            '%s</span>';\n                        imageHtml = imageHtml.replace('%s', amAttributes[match[1]]['label']);\n                    } else {\n                        imageHtml = '<span id=\"%id\" class=\"' +\n                            'amcustomtabs-attribute magento-placeholder magento-placeholder-error ' +\n                            'mceNonEditable' +\n                            '\">' +\n                            'Not found' +\n                            '</span>';\n                    }\n\n                    return imageHtml.replace('%id', Base64.idEncode(path));\n                });\n\n                return content;\n            },\n\n            /**\n             * Decode attributes in content.\n             *\n             * @param {String} content\n             * @returns {String}\n             */\n            decodeAttributes: function (content) {\n                var doc = (new DOMParser()).parseFromString(content.replace(/&quot;/g, '&amp;quot;'), 'text/html');\n\n                [].forEach.call(doc.querySelectorAll('span.amcustomtabs-attribute'), function (el) {\n                    var $el = jQuery(el);\n\n                    $el.replaceWith(\n                        attributeDirectiveGenerator.processConfig(\n                            Base64.idDecode(\n                                $el.attr('id')\n                            )\n                        )\n                    );\n                });\n\n                return doc.body ? doc.body.innerHTML.replace(/&amp;quot;/g, '&quot;') : content;\n            },\n\n            /**\n             * @return {Object}\n             */\n            getInfo: function () {\n                return {\n                    longname: 'Amasty Product Tab Attribute Manager Plugin',\n                    author: 'Amasty Team',\n                    authorurl: 'http://amasty.com',\n                    infourl: 'http://amasty.com',\n                    version: '1.0'\n                };\n            }\n        });\n\n        /**\n         * Register plugin\n         */\n        tinymce.PluginManager.add('amcustomtabs_attribute', tinymce.plugins.amcustomtabs_attribute);\n    };\n});\n","Amasty_CustomTabs/js/components/grid-sizes.js":"/**\n * Table Sizes Component (For demo)\n *\n * @return widget with methods which help's in the implementation user interface\n */\n\ndefine([\n    'jquery'\n], function ($) {\n    'use strict';\n\n    $.widget('am.gridSizes', {\n        options: {\n            cellSelect: '.amtab-cell',\n            lineSelect: '.amtab-table-line',\n            hoverlineClass: '-amtab-hoverline',\n            activeClass: '-active'\n        },\n\n        _create: function () {\n            var self = this,\n                lines = self.element.find(self.options.lineSelect);\n\n            lines.find(self.options.cellSelect).click(function (e) {\n                self._gridHighlight(e)\n            });\n        },\n\n        /**\n         * Method's for Highlighting cells in table like a coordinate grid\n         */\n        _gridHighlight: function (e) {\n            var self = this;\n\n            self._clearTable();\n            self.targetElem = {\n                    node: $(e.target).addClass(self.options.activeClass),\n                    position: null\n                };\n\n            self._highlightRow();\n            self._highlightColumn();\n        },\n\n        _highlightRow: function () {\n            var self = this,\n                targetLine = self.targetElem.node.closest(self.options.lineSelect);\n\n            targetLine.addClass(self.options.activeClass);\n            targetLine.children().each(function (i) {\n                var elem = $(this);\n\n                if (elem.hasClass(self.options.activeClass)) {\n                    self.targetElem.position = i;\n\n                    return false;\n                }\n\n                elem.addClass(self.options.hoverlineClass);\n            });\n        },\n\n        _highlightColumn: function () {\n            var self = this;\n\n            self.element.children().each(function () {\n                var elem = $(this);\n\n                if (elem.hasClass(self.options.activeClass)) {\n                    return false;\n                }\n\n\n\n                elem.children().eq(self.targetElem.position).addClass(self.options.hoverlineClass);\n            });\n        },\n\n        _clearTable: function () {\n            var self = this;\n\n            self.element.find('.' + self.options.hoverlineClass).removeClass(self.options.hoverlineClass);\n            self.element.find('.' + self.options.activeClass).removeClass(self.options.activeClass);\n        }\n    });\n\n    return $.am.gridSizes;\n});\n","WolfSellers_AmastyLabel/js/initLabel-mixin.js":"define([\n    'jquery',\n    'jquery/ui'\n], function (\n    $\n) {\n   'use strict';\n   var initLabelWidgetMixin = {\n       /**\n        * Exec Amasty Label widget\n        * @public\n        * @returns {void}\n        */\n       execLabel: function () {\n           if (this._isFromAmastySearch()) {\n               return; // No renderizamos el label si viene de Amasty_Xsearch\n           }\n           this.element.amShowLabel(this.options.config);\n       },\n\n       /**\n        * Verificar si el elemento est\u00e1 dentro de un bloque de Amasty_Xsearch\n        * @private\n        * @returns {Boolean}\n        */\n       _isFromAmastySearch: function () {\n           return this.element.closest('.amsearch-products-section').length > 0;\n       }\n   };\n\n    return function (initLabelWidget) {\n        $.widget('mage.amInitLabel', initLabelWidget, initLabelWidgetMixin);\n        return $.mage.amInitLabel;\n    };\n\n});\n","WolfSellers_SkinCare/js/label-mixin.js":"define([\n    'jquery',\n    'jquery/ui'\n], function ($) {\n    'use strict';\n\n    var labelWidgetMixin = {\n        setLabelPosition: function () {\n            var className = 'amlabel-position-' + this.options.position\n                    + '-' + this.options.product+ '-' + this.options.mode + this.getWidgetLabelCode(),\n                wrapper = this.parent.find('.' + className);\n\n            if (wrapper.length) {\n                var labelOrderMatch = false;\n\n                $.each(wrapper.find('.amasty-label-container'), function (index, prevLabel) {\n                    var nextLabel = $(prevLabel).next(),\n                        currentOrder = parseInt(this.options.order);\n                    if (typeof $(prevLabel).data('mageAmShowLabel') !== \"undefined\"){\n                        var prevOrder = parseInt($(prevLabel).data('mageAmShowLabel').options.order),\n                            nextOrder = null;\n\n                        if (nextLabel.length) {\n                            nextOrder = parseInt(nextLabel.data('mageAmShowLabel').options.order);\n                        }\n\n                        if (currentOrder >= prevOrder && (!nextOrder || currentOrder <= nextOrder)) {\n                            labelOrderMatch = true;\n                            $(prevLabel).after(this.element);\n                            return false;\n                        }\n                    }\n                }.bind(this));\n\n                if (!labelOrderMatch) {\n                    wrapper.prepend(this.element);\n                }\n            } else {\n                var parent = this.element.parent();\n                if (parent.hasClass(this.positionWrapper)) {\n                    parent.parent().append(this.element);\n                }\n\n                this.element.wrap('<div class=\"' + className + ' ' + this.positionWrapper + '\"></div>');\n                wrapper = this.element.parent();\n            }\n\n            if (this.options.alignment === 1) {\n                wrapper.children(':not(:first-child)').each(function (index, element) {\n                    this.setStyleIfNotExist(\n                        $(element),\n                        {\n                            'marginLeft': this.options.margin + 'px'\n                        }\n                    );\n                }.bind(this));\n\n            } else {\n                wrapper.children(':not(:first-child)').each(function (index, element) {\n                    this.setStyleIfNotExist(\n                        $(element),\n                        {\n                            'marginTop': this.options.margin + 'px'\n                        }\n                    );\n                }.bind(this));\n            }\n\n            //clear styles before changing\n            wrapper.css({\n                'top'  : \"\",\n                'left' : \"\",\n                'right' : \"\",\n                'bottom' : \"\",\n                'margin-top' : \"\",\n                'margin-bottom' : \"\",\n                'margin-left' : \"\",\n                'margin-right' : \"\"\n            });\n\n            switch (this.options.position) {\n                case 'top-left':\n                    wrapper.css({\n                        'top'  : 0,\n                        'left' : 0\n                    });\n                    break;\n                case 'top-center':\n                    wrapper.css({\n                        'top': 0,\n                        'left': 0,\n                        'right': 0,\n                        'margin-left': 'auto',\n                        'margin-right': 'auto'\n                    });\n                    break;\n                case 'top-right':\n                    wrapper.css({\n                        'top'   : 0,\n                        'right' : 0,\n                        'text-align' : 'right'\n                    });\n                    break;\n\n                case 'middle-left':\n                    wrapper.css({\n                        'left' : 0,\n                        'top'   : 0,\n                        'bottom'  : 0,\n                        'margin-top': 'auto',\n                        'margin-bottom': 'auto'\n                    });\n                    break;\n                case 'middle-center':\n                    wrapper.css({\n                        'top'   : 0,\n                        'bottom'  : 0,\n                        'margin-top': 'auto',\n                        'margin-bottom': 'auto',\n                        'left': 0,\n                        'right': 0,\n                        'margin-left': 'auto',\n                        'margin-right': 'auto'\n                    });\n                    break;\n                case 'middle-right':\n                    wrapper.css({\n                        'top'   : 0,\n                        'bottom'  : 0,\n                        'margin-top': 'auto',\n                        'margin-bottom': 'auto',\n                        'right' : 0,\n                        'text-align' : 'right'\n                    });\n                    break;\n\n                case 'bottom-left':\n                    wrapper.css({\n                        'bottom'  : 0,\n                        'left'    : 0\n                    });\n                    break;\n                case 'bottom-center':\n                    wrapper.css({\n                        'bottom': 0,\n                        'left': 0,\n                        'right': 0,\n                        'margin-left': 'auto',\n                        'margin-right': 'auto'\n                    });\n                    break;\n                case 'bottom-right':\n                    wrapper.css({\n                        'bottom'   : 0,\n                        'right'    : 0,\n                        'text-align' : 'right'\n                    });\n                    break;\n            }\n        },\n    };\n    return function (labelWidget) {\n        $.widget('mage.amShowLabel', labelWidget, labelWidgetMixin);\n        return $.mage.amShowLabel;\n    };\n});\n","Magento_Captcha/js/captcha.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'jquery',\n    'jquery-ui-modules/widget'\n], function ($) {\n    'use strict';\n\n    /**\n     * @api\n     */\n    $.widget('mage.captcha', {\n        options: {\n            refreshClass: 'refreshing',\n            reloadSelector: '.captcha-reload',\n            imageSelector: '.captcha-img',\n            imageLoader: ''\n        },\n\n        /**\n         * Method binds click event to reload image\n         * @private\n         */\n        _create: function () {\n            this.element.on('click', this.options.reloadSelector, $.proxy(this.refresh, this));\n        },\n\n        /**\n         * Method triggers an AJAX request to refresh the CAPTCHA image\n         */\n        refresh: function () {\n            var imageLoader = this.options.imageLoader;\n\n            if (imageLoader) {\n                this.element.find(this.options.imageSelector).attr('src', imageLoader);\n            }\n            this.element.addClass(this.options.refreshClass);\n\n            $.ajax({\n                url: this.options.url,\n                type: 'post',\n                dataType: 'json',\n                context: this,\n                data: {\n                    'formId': this.options.type\n                },\n\n                /**\n                 * @param {Object} response\n                 */\n                success: function (response) {\n                    if (response.imgSrc) {\n                        this.element.find(this.options.imageSelector).attr('src', response.imgSrc);\n                    }\n                },\n\n                /** Complete callback. */\n                complete: function () {\n                    this.element.removeClass(this.options.refreshClass);\n                }\n            });\n        }\n    });\n\n    return $.mage.captcha;\n});\n","Magento_Captcha/js/action/refresh.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'jquery', 'mage/url'\n], function ($, urlBuilder) {\n    'use strict';\n\n    return function (refreshUrl, formId, imageSource) {\n        return $.ajax({\n            url: urlBuilder.build(refreshUrl),\n            type: 'POST',\n            data: JSON.stringify({\n                'formId': formId\n            }),\n            global: false,\n            contentType: 'application/json'\n        }).done(\n            function (response) {\n                if (response.imgSrc) {\n                    imageSource(response.imgSrc);\n                }\n            }\n        );\n    };\n});\n"}
}});
